# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-09-26 11:20+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Attribute 'lang' of: <book>
#: en/book.xml:4
msgid "en"
msgstr ""

#. type: Content of: <book><bookinfo><title>
#: en/book.xml:6
msgid "OTRS 5 - Developer Manual"
msgstr ""

#. <edition>
#. Cancún Beach (México)</edition>
#. type: Content of: <book><bookinfo>
#: en/book.xml:8
msgid ""
"<copyright> <year>2003-2015</year> <holder>OTRS AG</holder> </copyright> "
"<date>2015-05-12</date>"
msgstr ""

#. type: Content of: <book><bookinfo><legalnotice><para>
#: en/book.xml:15
msgid "This work is copyrighted by OTRS AG."
msgstr ""

#. type: Content of: <book><bookinfo><legalnotice><para>
#: en/book.xml:19
msgid ""
"You may copy it in whole or in part as long as the copies retain this "
"copyright statement."
msgstr ""

#. type: Content of: <book><bookinfo><legalnotice><para>
#: en/book.xml:23
msgid ""
"All trade names are used without the guarantee for their free use and are "
"possibly registered trade marks.  All products mentioned in this manual may "
"be trade marks of the respective manufacturer."
msgstr ""

#. type: Content of: <book><bookinfo><legalnotice><para>
#: en/book.xml:30
msgid ""
"The source code of this document can be found at <ulink "
"url=\"https://otrs.github.io\">github</ulink>, in the repository <ulink "
"url=\"https://github.com/OTRS/doc-developer\">doc-developer</ulink>.  "
"Contributions are more than welcome.  You can also help translating it to "
"your language at <ulink "
"url=\"https://www.transifex.com/otrs/OTRS/\">Transifex</ulink>."
msgstr ""

#. type: Content of: <appendix><title>
#: en/content/additional-resources.xml:6
msgid "Additional Resources"
msgstr ""

#. type: Content of: <appendix><variablelist><varlistentry><term>
#: en/content/additional-resources.xml:10
msgid "otrs.com"
msgstr ""

#. type: Content of: <appendix><variablelist><varlistentry><listitem><para>
#: en/content/additional-resources.xml:13
msgid ""
"The OTRS website with source code, documentation and news is available at "
"<ulink url=\"https://www.otrs.com/\">www.otrs.com</ulink>.  Here you can "
"also find information about professional services and OTRS Administrator "
"training seminars from OTRS Group, the creator of OTRS."
msgstr ""

#. type: Content of: <appendix><variablelist><varlistentry><term>
#: en/content/additional-resources.xml:21
msgid "Online API Library"
msgstr ""

#. type: Content of: <appendix><variablelist><varlistentry><listitem><para>
#: en/content/additional-resources.xml:24
msgid ""
"The OTRS developer API documentation is available for <ulink "
"url=\"https://otrs.github.io/doc/api/otrs/stable/Perl/index.html\">Perl</ulink> "
"and <ulink "
"url=\"https://otrs.github.io/doc/api/otrs/stable/JavaScript/index.html\">JavaScript</ulink>."
msgstr ""

#. type: Content of: <appendix><variablelist><varlistentry><term>
#: en/content/additional-resources.xml:31
msgid "Developer Mailing List"
msgstr ""

#. type: Content of: <appendix><variablelist><varlistentry><listitem><para>
#: en/content/additional-resources.xml:34
msgid ""
"The OTRS developer mailing list is available at <ulink "
"url=\"http://lists.otrs.org/\">http://lists.otrs.org/</ulink>."
msgstr ""

#. type: Content of: <chapter><title>
#: en/content/contributing.xml:5
msgid "Contributing to OTRS"
msgstr ""

#. type: Content of: <chapter><abstract><para>
#: en/content/contributing.xml:8
msgid ""
"This chapter will show how you can contribute to the OTRS framework, so that "
"other users will be able to benefit from your work."
msgstr ""

#. type: Content of: <chapter><title>
#: en/content/get-started.xml:5
msgid "Getting Started"
msgstr ""

#. type: Content of: <chapter><abstract><para>
#: en/content/get-started.xml:8
msgid ""
"OTRS is a multi-platform web application framework which was originally "
"developed for a trouble ticket system. It supports different web servers and "
"databases."
msgstr ""

#. type: Content of: <chapter><abstract><para>
#: en/content/get-started.xml:12
msgid ""
"This manual shows how to develop your own OTRS modules and applications "
"based on the OTRS styleguides."
msgstr ""

#. type: Content of: <chapter><title>
#: en/content/how-it-works.xml:5
msgid "OTRS Internals - How it Works"
msgstr ""

#. type: Content of: <chapter><title>
#: en/content/how-to-extend-otrs.xml:6
msgid "How to Extend OTRS"
msgstr ""

#. type: Content of: <chapter><title>
#: en/content/how-to-publish-otrs-extensions.xml:5
msgid "How to Publish Your OTRS Extensions"
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/accessibility.xml:5
msgid "Accessibility Guide"
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/accessibility.xml:8
msgid ""
"This document is supposed to explain basics about accessibility issues and "
"give guidelines for contributions to OTRS."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/accessibility.xml:13
msgid "Accessibility Basics"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:17
msgid "What is Accessibility?"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:20
msgid ""
"Accessibility is a general term used to describe the degree to which a "
"product, device, service or environment is accessible by as many people as "
"possible.  Accessibility can be viewed as the \"ability to access\" and "
"possible benefit of some system or entity. Accessibility is often used to "
"focus on people with disabilities and their right of access to entities, "
"often through use of assistive technology."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:27
msgid ""
"In the context of web development, accessibility has a focus on enabling "
"people with impairments full access to web interfaces. For example, this "
"group of people can include partially visually impaired or completely blind "
"people. While the former can still partially use the GUI, the latter have to "
"completely rely on assistive technologies such as software which reads the "
"screen to them (screen readers)."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:36
msgid "Why is it important for OTRS?"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:39
msgid ""
"To enable impaired users access to OTRS systems is a valid goal in "
"itself. It shows respect."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:42
msgid ""
"Furthermore, fulfilling accessibility standards is becoming increasingly "
"important in the public sector (government institutions) and large "
"companies, which both belong to the target markets of OTRS."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:48
msgid ""
"How can I successfully work on accessibility issues even if I am not "
"disabled?"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:51
msgid "This is very simple. Pretend to be blind."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:54
msgid "Don't"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:58
msgid "use the Mouse and"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:63
msgid "look at the screen."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:69
msgid ""
"Then try to use OTRS with the help of a screen reader and your keyboard "
"only.  This should give you an idea of how it will feel for a blind person."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:75
msgid "Ok, but I don't have a screen reader!"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:78
msgid ""
"While commercial screen readers such as JAWS (perhaps the best known one) "
"can be extremely expensive, there are open source screen readers which you "
"can install and use:"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:83
msgid ""
"<ulink url=\"http://www.nvaccess.org/\">NVDA</ulink>, a screen reader for "
"Windows."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:88
msgid ""
"<ulink url=\"https://wiki.gnome.org/Projects/Orca\">ORCA</ulink>, a screen "
"reader for Gnome/Linux."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:94
msgid "Now you don't have an excuse any more. ;)"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/accessibility.xml:99
msgid "Accessibility Standards"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/accessibility.xml:101
msgid ""
"This section is included for reference only, you do not have to study the "
"standards themselves to be able to work on accessibility issues in OTRS.  "
"We'll try to extract the relevant guidelines in this document."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:107
msgid "Web Content Accessibility Guidelines (WCAG)"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:110
msgid ""
"This W3C standard gives general guidelines for how to create accessible web "
"pages."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:115
msgid "<ulink url=\"http://www.w3.org/TR/WCAG20/\">WCAG 2.0</ulink>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:120
msgid ""
"<ulink url=\"http://www.w3.org/WAI/WCAG20/quickref/\">How to Meet WCAG "
"2.0</ulink>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:125
msgid ""
"<ulink url=\"http://www.w3.org/TR/UNDERSTANDING-WCAG20/\">Understanding WCAG "
"2.0</ulink>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:131
msgid ""
"WCAG has different levels of accessibility support.  We currently plan to "
"support level A, as AA and AAA deal with matters that seem not relevant for "
"OTRS."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:137
msgid "Accessible Rich Internet Applications (WAI-ARIA) 1.0"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:139
msgid ""
"This standard deals with the special issues arising from the shift away from "
"static content to dynamic web applications. It deals with questions like how "
"a user can be notified of changes in the user interface resulting from AJAX "
"requests, for example."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:146
msgid "<ulink url=\"http://www.w3.org/TR/wai-aria/\">WAI-ARIA 1.0</ulink>"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/accessibility.xml:155
msgid "Implementation guidelines"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:157
msgid "Provide alternatives for non-text content"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:159
msgid ""
"Goal: <emphasis>All non-text content that is presented to the user has a "
"text alternative that serves the equivalent purpose.</emphasis> (WCAG 1.1.1)"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:164
msgid ""
"It is very important to understand that screen readers can only present "
"textual information and available metadata to the user.  To give you an "
"example, whenever a screen reader sees <literal>&lt;a href=\"#\" "
"class=\"CloseLink\"&gt;&lt;/a&gt;</literal>, it can only read \"link\" to "
"the user, but not the target of this link.  With a slight improvement, it "
"would be accessible: <literal>&lt;a href=\"#\" class=\"CloseLink\" "
"title=\"Close this widget\"&gt;&lt;/a&gt;</literal>.  In this case the user "
"would hear \"link close this widget\", voila!"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:174
msgid ""
"It is important to always formulate the text in a most \"speaking\" way.  "
"Just imagine it is the only information that you have. Will it help you? Can "
"you understand its purpose just by hearing it?"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:179
msgid "Please follow these rules when working on OTRS:"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:184
msgid ""
"<emphasis>Rule</emphasis>: Wherever possible, use speaking texts and "
"formulate in real, understandable and precise sentences. \"Close this "
"widget\" is much better than \"Close\", because the latter is redundant."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:191
msgid ""
"<emphasis>Rule</emphasis>: Links always must have either text content that "
"is spoken by the screen reader (<literal>&lt;a href=\"#\" &gt;Delete this "
"entry&lt;/a&gt;</literal>), or a <literal>title</literal> attribute "
"(<literal>&lt;a href=\"#\" title=\"Close this "
"widget\"&gt;&lt;/a&gt;</literal>)."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:198
msgid ""
"<emphasis>Rule</emphasis>: Images must always have an alternative text that "
"can be read to the user (<literal>&lt;img src=\"house.png\" alt=\"Image of a "
"house\" /&gt;</literal>)."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:207
msgid "Make navigation easy"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:210
msgid ""
"Goal: <emphasis>Allow the user to easily navigate the current page and the "
"entire application.</emphasis>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:213
msgid ""
"The <literal>title</literal> tag is the first thing a user hears from the "
"screen reader when opening a web page.  For OTRS, there is also always just "
"one <literal>h1</literal> element on the page, indicating the current page "
"(it contains part of the information from <literal>title</literal>).  This "
"navigational information helps the user to understand where they are, and "
"what the purpose of the current page is."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:221
msgid ""
"<emphasis>Rule</emphasis>: Always give a precise title to the page that "
"allows the user to understand where they currently are."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:226
msgid ""
"Screen readers can use the built-in document structure of HTML (headings "
"<literal>h1</literal> to <literal>h6</literal>) to determine the structure "
"of a document and to allow the user to jump around from section to section.  "
"However, this is not enough to reflect the structure of a dynamic web "
"application.  That's why ARIA defines several \"landmark\" roles that can be "
"given to elements to indicate their navigational significance."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:234
msgid ""
"To keep the validity of the HTML documents, the <literal>role</literal> "
"attributes (ARIA landmark roles)  are not inserted into the source code "
"directly, but instead by classes which will later be used by the JavaScript "
"functions in <literal>OTRS.UI.Accessibility</literal> to set the "
"corresponding <literal>role</literal> attributes on the node."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:242
msgid ""
"<emphasis>Rule</emphasis>: Use WAI-ARIA Landmark Roles to structure the "
"content for screen readers."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:246
msgid ""
"Banner: <literal>&lt;div class=\"ARIARoleBanner\"&gt;&lt;/div&gt;</literal> "
"will become <literal>&lt;div class=\"ARIARoleBanner\" "
"role=\"banner\"&gt;&lt;/div&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:252
msgid ""
"Navigation: <literal>&lt;div "
"class=\"ARIARoleNavigation\"&gt;&lt;/div&gt;</literal> will become "
"<literal>&lt;div class=\"ARIARoleNavigation\" "
"role=\"navigation\"&gt;&lt;/div&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:258
msgid ""
"Search function: <literal>&lt;div "
"class=\"ARIARoleSearch\"&gt;&lt;/div&gt;</literal> will become "
"<literal>&lt;div class=\"ARIARoleSearch\" "
"role=\"search\"&gt;&lt;/div&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:264
msgid ""
"Main application area: <literal>&lt;div "
"class=\"ARIARoleMain\"&gt;&lt;/div&gt;</literal> will become "
"<literal>&lt;div class=\"ARIARoleMain\" "
"role=\"main\"&gt;&lt;/div&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:270
msgid ""
"Footer: <literal>&lt;div "
"class=\"ARIARoleContentinfo\"&gt;&lt;/div&gt;</literal> will become "
"<literal>&lt;div class=\"ARIARoleContentinfo\" "
"role=\"contentinfo\"&gt;&lt;/div&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:279
msgid ""
"For navigation inside of <literal>&lt;form&lt;</literal> elements, it is "
"necessary for the impaired user to know what each input elements purpose "
"is. This can be achieved by using standard HTML "
"<literal>&lt;label&gt;</literal> elements which create a link between the "
"label and the form element."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:286
msgid ""
"When an input element gets focus, the screen reader will usually read the "
"connected label, so that the user can hear its exact purpose.  An additional "
"benefit for seeing users is that they can click on the label, and the input "
"element will get focus (especially helpful for checkboxes, for example)."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:294
msgid ""
"<emphasis>Rule</emphasis>: Provide <literal>&lt;label&gt;</literal> elements "
"for <emphasis>all</emphasis> form element (<literal>input</literal>, "
"<literal>select</literal>, <literal>textarea</literal>) fields."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:298
msgid ""
"Example: <literal>&lt;label for=\"date\"&gt;Date:&lt;/label&gt;&lt;input "
"type=\"text\" name=\"date\" id=\"date\"/&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:304
msgid "Make interaction possible"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:306
msgid ""
"Goal: <emphasis>Allow the user to perform all interactions just by using the "
"keyboard.</emphasis>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:309
msgid ""
"While it is technically possible to create interactions with JavaScript on "
"arbitrary HTML elements, this must be limited to elements that a user can "
"interact with by using the keyboard.  Specifically, they need to be able to "
"give focus to the element and to interact with it.  For example, a push "
"button to toggle a widget should not be realized by using a "
"<literal>span</literal> element with an attached JavaScript "
"<literal>onclick</literal> event listener, but it should be (or contain) an "
"<literal>a</literal> tag to make it clear to the screen reader that this "
"element can cause interaction."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:321
msgid ""
"<emphasis>Rule</emphasis>: For interactions, always use elements that can "
"receive focus, such as <literal>a</literal>, <literal>input</literal>, "
"<literal>select</literal> and <literal>button</literal>."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:327
msgid ""
"<emphasis>Rule</emphasis>: Make sure that the user can always identify the "
"nature of the interaction (see rules about non-textual content and labelling "
"of form elements)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:334
msgid "Goal: <emphasis>Make dynamic changes known to the user.</emphasis>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:337
msgid ""
"A special area of accessibility problems are dynamic changes in the user "
"interface, either by JavaScript or also by AJAX calls.  The screen reader "
"will not tell the user about changes without special precautions.  This is a "
"difficult topic and cannot yet be completely explained here."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:345
msgid ""
"<emphasis>Rule</emphasis>: Always use the validation framework "
"<literal>OTRS.Validate</literal> for form validation."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:348
msgid ""
"This will make sure that the error tooltips are being read by the screen "
"reader.  That way the blind user a) knows the item which has an error and b) "
"get a text describing the error."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:354
msgid ""
"<emphasis>Rule</emphasis>: Use the function "
"<literal>OTRS.UI.Accessibility.AudibleAlert()</literal> to notify the user "
"about other important UI changes."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:360
msgid ""
"<emphasis>Rule</emphasis>: Use the <literal>OTRS.UI.Dialog</literal> "
"framework to create modal dialogs. These are already optimized for "
"accessibility."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/accessibility.xml:367
msgid "General screen reader optimizations"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/accessibility.xml:369
msgid "Goal: <emphasis>Help screen readers with their work.</emphasis>"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:374
msgid ""
"<emphasis>Rule</emphasis>: Each page must identify its own main language so "
"that the screen reader can choose the right speech synthesis engine."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/contributing/accessibility.xml:378
msgid "Example: <literal>&lt;html lang=\"fr\"&gt;...&lt;/html&gt;</literal>"
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/code-style.xml:5
msgid "Code Style Guide"
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/code-style.xml:7
msgid ""
"In order to preserve the consistent development of the OTRS project, we have "
"set up guidelines regarding style for the different programming languages."
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/sending-contributions.xml:5
msgid "Sending Contributions"
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/sending-contributions.xml:7
msgid ""
"The source code of OTRS and additional public modules can be found on <ulink "
"url=\"http://otrs.github.io\">github</ulink>. From there you can get to the "
"listing of all available repositories. It also describes the currently "
"active branches and where contributions should go to (stable vs. development "
"branches)."
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/sending-contributions.xml:10
msgid ""
"It is highly recommended that you use the OTRS code quality checker "
"OTRSCodePolicy as described in <link linkend=\"useful-tools\">the "
"development environment chapter</link> even before sending in your "
"contributions.  If your code does not validate against this tool, it will "
"likely not be accepted."
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/sending-contributions.xml:15
msgid ""
"The easiest way to send your contributions to the OTRS developer's team is "
"by creating a \"pull request\" in github. Please take a look at the "
"instructions on <ulink url=\"https://help.github.com\">github</ulink>, "
"specifically about <ulink "
"url=\"https://help.github.com/articles/fork-a-repo\">forking a repository "
"and sending pull requests</ulink>."
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/sending-contributions.xml:21
msgid "The basic workflow would look like this:"
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/contributing/sending-contributions.xml:23
msgid "Register at github, if you have no account yet."
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/contributing/sending-contributions.xml:24
msgid ""
"Fork the repository you want to contribute to, and checkout the branch that "
"the changes should go in."
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/contributing/sending-contributions.xml:25
msgid ""
"Create a new development branch for your fix/feature/contribution, based on "
"the current branch."
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/contributing/sending-contributions.xml:26
msgid ""
"After you finished your changes and committed them, push your branch to "
"github."
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/contributing/sending-contributions.xml:27
msgid ""
"Create a pull request. The OTRS dev team will be notified about this, check "
"your pull request and either merge it or give you some feedback about "
"possible improvements."
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/sending-contributions.xml:29
msgid ""
"It might sound complicated, but once you have this workflow set up you'll "
"see that making contributions is extremely easy."
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/translate-docs.xml:5
msgid "Translating the Documentation"
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/translate-docs.xml:8
msgid ""
"The OTRS admin manual can be translated via Transifex as described in <link "
"linkend=\"translate\"> the section on translating OTRS</link>. You can join "
"a language team on Transifex to improve an existing translation or even "
"suggest a new language to translate the admin manual to."
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/translate-docs.xml:13
msgid ""
"It is important that the structure of the generated XML stays intact.  So if "
"the original string is <literal>Edit "
"&lt;filename&gt;Kernel/Config.pm&lt;/filename&gt;</literal>, then the German "
"translation has to be "
"<literal>&lt;filename&gt;Kernel/Config.pm&lt;/filename&gt; "
"bearbeiten</literal>, keeping the XML tags intact. Regular &lt; and &gt; "
"signs that are escaped in the source text must also be escaped in the "
"translations (like <literal>&amp;lt;someone@example.com&amp;gt;</literal>).  "
"Scripts and examples usually do not have to be translated (so you can just "
"copy the source text to the translation text field in this case)."
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/translate.xml:5
msgid "Translating OTRS"
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/translate.xml:7
msgid ""
"The OTRS framework allows for different languages to be used in the "
"frontend.  The translations are contributed and maintained mainly by OTRS "
"users, so <emphasis>your</emphasis> help is needed."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/translate.xml:13
msgid "Updating an existing translation"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/translate.xml:15
msgid ""
"Starting with OTRS 4, all translations of the OTRS GUI and the public "
"extension modules are managed via <ulink "
"url=\"https://www.transifex.com\">Transifex</ulink>.  The OTRS project on "
"Transifex can be found at <ulink "
"url=\"https://www.transifex.com/otrs/OTRS/\">https://www.transifex.com/otrs/OTRS/</ulink>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/translate.xml:19
msgid ""
"To contribute to a translation of the OTRS GUI, an extension module or a "
"manual, please sign up for a free translators account on <ulink "
"url=\"https://www.transifex.com\">Transifex</ulink>.  Then you can join your "
"language team and start updating your translation. No additional software or "
"files required.  The OTRS developers will download the translations from "
"time to time into the OTRS source code repositories, you don't have to "
"submit them anywhere."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/translate.xml:26
msgid "Adding a new frontend translation"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/translate.xml:28
msgid ""
"If you want to translate the OTRS framework into a new language, you can "
"propose a new language translation on <ulink "
"url=\"https://www.transifex.com/otrs/OTRS/\">the Transifex OTRS project "
"page</ulink>. After it is approved, you can just start translating."
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/ui-design.xml:5
msgid "User Interface Design"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/ui-design.xml:8
msgid "Capitalization"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/ui-design.xml:11
msgid ""
"This section talks about how the different parts of the English user "
"interface should be capitalized. For further information, you may want to "
"review <ulink "
"url=\"https://msdn.microsoft.com/en-us/library/dn742478.aspx\">this helpful "
"page</ulink>."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/ui-design.xml:19
msgid ""
"Headings (h1-h6) and Titles (Names, such as <literal>Queue View</literal>) "
"are set in \"title style\" capitalization, that means all first letters will "
"be capitalized (with a few exceptions such as \"this\", \"and\", \"or\" "
"etc.)."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/ui-design.xml:24
msgid ""
"Examples: <literal>Action List</literal>, <literal>Manage Customer-Group "
"Relations</literal>."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/ui-design.xml:29
msgid ""
"Other structural elements such as buttons, labels, tabs, menu items are set "
"in \"sentence style\" capitalization (only the first letter of a phrase is "
"capitalized), but no final dot is added to complete the phrase as a "
"sentence."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/ui-design.xml:35
msgid ""
"Examples: <literal>First name</literal>, <literal>Select queue refresh "
"time</literal>, <literal>Print this ticket</literal>."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/ui-design.xml:41
msgid "Descriptive texts and tooltip contents are written as complete sentences."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/ui-design.xml:44
msgid "Example: <literal>This value is required.</literal>"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/ui-design.xml:49
msgid ""
"For translations, it has to be checked if the title style capitalization is "
"also appropriate in the target language. It might have to be changed to "
"sentence style capitalization or something else."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/unit-tests.xml:5 en/content/how-to-publish-otrs-extensions/package-porting.xml:661
msgid "Unit Tests"
msgstr ""

#. type: Content of: <section><para>
#: en/content/contributing/unit-tests.xml:7
msgid "OTRS provides unit tests for core modules."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/unit-tests.xml:11
msgid "Creating a test file"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/unit-tests.xml:13
msgid ""
"The test files are stored in .t files under "
"<filename>/scripts/test/*.t</filename>.  For example the file "
"<filename>/scripts/test/Calendar.t</filename> for the Calendar Module."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/unit-tests.xml:17
msgid ""
"A test file consists of the function call of the function to be tested and "
"the analysis of the return value.  Example "
"(<filename>/scripts/test/Calendar.t</filename>):"
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:21
#, no-wrap
msgid ""
"# --\n"
"# Calendar.t - Calendar\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"use strict;\n"
"use warnings;\n"
"use utf8;\n"
"\n"
"use vars qw($Self);\n"
"\n"
"use Kernel::System::CalendarEvent;\n"
"\n"
"my $EventObject = $Kernel::OM->Get('Kernel::System::CalendarEvent');\n"
"\n"
"\n"
"my $EventID = $EventObject->EventAdd(\n"
"    Title => 'Some Test',\n"
"    StartTime => '1977-10-27 20:15',\n"
"    EndTime => '1977-10-27 21:00',\n"
"    State => 'public',\n"
"    UserIDs => [1],\n"
");\n"
"\n"
"$Self->True(\n"
"    $EventID,\n"
"    'EventAdd()',\n"
");\n"
"\n"
"[..]\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/unit-tests.xml:21 en/content/contributing/unit-tests.xml:76 en/content/contributing/unit-tests.xml:113 en/content/contributing/unit-tests.xml:127 en/content/contributing/unit-tests.xml:141 en/content/contributing/unit-tests.xml:156 en/content/contributing/unit-tests.xml:172 en/content/contributing/unit-tests.xml:188 en/content/contributing/code-style-guide/css.xml:60 en/content/contributing/code-style-guide/css.xml:84 en/content/contributing/code-style-guide/css.xml:108 en/content/contributing/code-style-guide/javascript.xml:21 en/content/contributing/code-style-guide/perl.xml:17 en/content/contributing/code-style-guide/perl.xml:47 en/content/contributing/code-style-guide/perl.xml:57 en/content/contributing/code-style-guide/perl.xml:71 en/content/contributing/code-style-guide/perl.xml:80 en/content/contributing/code-style-guide/perl.xml:95 en/content/contributing/code-style-guide/perl.xml:111 en/content/contributing/code-style-guide/perl.xml:153 en/content/contributing/code-style-guide/perl.xml:170 en/content/contributing/code-style-guide/perl.xml:192 en/content/contributing/code-style-guide/perl.xml:235 en/content/contributing/code-style-guide/perl.xml:244 en/content/contributing/code-style-guide/perl.xml:256 en/content/contributing/code-style-guide/perl.xml:268 en/content/contributing/code-style-guide/perl.xml:280 en/content/contributing/code-style-guide/perl.xml:321 en/content/contributing/code-style-guide/perl.xml:342 en/content/contributing/code-style-guide/perl.xml:375 en/content/contributing/code-style-guide/perl.xml:384 en/content/contributing/code-style-guide/perl.xml:395 en/content/contributing/code-style-guide/perl.xml:408 en/content/contributing/code-style-guide/perl.xml:437 en/content/contributing/code-style-guide/perl.xml:448 en/content/contributing/code-style-guide/perl.xml:467 en/content/contributing/code-style-guide/perl.xml:478 en/content/contributing/code-style-guide/perl.xml:491 en/content/contributing/code-style-guide/perl.xml:506 en/content/contributing/code-style-guide/perl.xml:515 en/content/contributing/code-style-guide/perl.xml:525 en/content/contributing/code-style-guide/perl.xml:543 en/content/contributing/code-style-guide/perl.xml:558 en/content/contributing/code-style-guide/perl.xml:609 en/content/contributing/code-style-guide/perl.xml:745 en/content/contributing/code-style-guide/perl.xml:769 en/content/contributing/code-style-guide/perl.xml:780 en/content/how-it-works/config-mechanism.xml:52 en/content/how-it-works/config-mechanism.xml:68 en/content/how-it-works/config-mechanism.xml:107 en/content/how-it-works/config-mechanism.xml:119 en/content/how-it-works/config-mechanism.xml:137 en/content/how-it-works/config-mechanism.xml:150 en/content/how-it-works/config-mechanism.xml:163 en/content/how-it-works/config-mechanism.xml:179 en/content/how-it-works/config-mechanism.xml:195 en/content/how-it-works/config-mechanism.xml:208 en/content/how-it-works/config-mechanism.xml:236 en/content/how-it-works/config-mechanism.xml:282 en/content/how-it-works/config-mechanism.xml:313 en/content/how-it-works/config-mechanism.xml:321 en/content/how-it-works/database-mechanism.xml:81 en/content/how-it-works/database-mechanism.xml:89 en/content/how-it-works/database-mechanism.xml:97 en/content/how-it-works/loader.xml:93 en/content/how-it-works/loader.xml:110 en/content/how-it-works/loader.xml:156 en/content/how-it-works/loader.xml:185 en/content/how-it-works/loader.xml:215 en/content/how-it-works/loader.xml:264 en/content/how-it-works/loader.xml:320 en/content/how-it-works/loader.xml:347 en/content/how-it-works/loader.xml:400 en/content/how-it-works/log-mechanism.xml:13 en/content/how-it-works/skins.xml:41 en/content/how-it-works/skins.xml:54 en/content/how-it-works/skins.xml:110 en/content/how-it-works/skins.xml:122 en/content/how-it-works/skins.xml:132 en/content/how-it-works/skins.xml:167 en/content/how-it-works/skins.xml:180 en/content/how-it-works/templates.xml:60 en/content/how-it-works/templates.xml:79 en/content/how-it-works/templates.xml:89 en/content/how-it-works/templates.xml:106 en/content/how-it-works/templates.xml:118 en/content/how-it-works/templates.xml:127 en/content/how-it-works/templates.xml:139 en/content/how-it-works/templates.xml:174 en/content/how-it-works/templates.xml:189 en/content/how-it-works/templates.xml:215 en/content/how-it-works/templates.xml:224 en/content/how-it-works/templates.xml:233 en/content/how-it-works/templates.xml:242 en/content/how-it-works/templates.xml:261 en/content/how-it-works/templates.xml:283 en/content/how-it-works/templates.xml:311 en/content/how-it-works/templates.xml:335 en/content/how-it-works/templates.xml:370 en/content/how-it-works/templates.xml:419 en/content/how-it-works/templates.xml:473 en/content/how-it-works/templates.xml:529 en/content/how-it-works/translations.xml:22 en/content/how-it-works/translations.xml:45 en/content/how-it-works/translations.xml:107 en/content/how-it-works/translations.xml:157 en/content/how-to-extend-otrs/writing-otrs-application.xml:41 en/content/how-to-extend-otrs/writing-otrs-application.xml:79 en/content/how-to-extend-otrs/writing-otrs-application.xml:139 en/content/how-to-extend-otrs/writing-otrs-application.xml:190 en/content/how-to-extend-otrs/writing-otrs-application.xml:219 en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:181 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:24 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:88 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:181 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:156 en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:173 en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:40 en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:69 en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:97 en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:151 en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:166 en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:240 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:144 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:173 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:223 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:320 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:367 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:37 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:66 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:95 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:154 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:186 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:475 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:489 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:510 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:538 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:558 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:588 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:609 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:83 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:114 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:139 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:190 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:247 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:285 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:331 en/content/how-to-extend-otrs/otrs-module-layers/log.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/log.xml:133 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:42 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:126 en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:31 en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:56 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:24 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:136 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:24 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:136 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:24 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:134 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:41 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:65 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:94 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:106 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:205 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:220 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:239 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:252 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:283 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:358 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:372 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:415 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:453 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:661 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:721 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:751 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:807 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:856 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1096 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1101 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:25 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:140 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:46 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:67 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:102 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:154 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:174 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:189 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:211 en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:257 en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:57 en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:87 en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:105 en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:165 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:60 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:22 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:31 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:49 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:75 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:61 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:16 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:31 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:58 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:73 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:145 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:189 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:16 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:42 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:76 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:122 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:157 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:296 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:363 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:512 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:27 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:49 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:72 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:30 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:63 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:138 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:231 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:299 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:357 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:366 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:376 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:386 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:396 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:405 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:414 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:424 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:447 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:458 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:470 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:479 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:490 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:501 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:515 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:525 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:535 en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:25 en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:52 en/content/how-to-publish-otrs-extensions/package-building.xml:22 en/content/how-to-publish-otrs-extensions/package-building.xml:33 en/content/how-to-publish-otrs-extensions/package-building.xml:44 en/content/how-to-publish-otrs-extensions/package-building.xml:52 en/content/how-to-publish-otrs-extensions/package-building.xml:65 en/content/how-to-publish-otrs-extensions/package-building.xml:76 en/content/how-to-publish-otrs-extensions/package-building.xml:87 en/content/how-to-publish-otrs-extensions/package-building.xml:98 en/content/how-to-publish-otrs-extensions/package-building.xml:110 en/content/how-to-publish-otrs-extensions/package-building.xml:123 en/content/how-to-publish-otrs-extensions/package-building.xml:136 en/content/how-to-publish-otrs-extensions/package-building.xml:147 en/content/how-to-publish-otrs-extensions/package-building.xml:159 en/content/how-to-publish-otrs-extensions/package-building.xml:171 en/content/how-to-publish-otrs-extensions/package-building.xml:183 en/content/how-to-publish-otrs-extensions/package-building.xml:196 en/content/how-to-publish-otrs-extensions/package-building.xml:212 en/content/how-to-publish-otrs-extensions/package-building.xml:240 en/content/how-to-publish-otrs-extensions/package-building.xml:261 en/content/how-to-publish-otrs-extensions/package-building.xml:277 en/content/how-to-publish-otrs-extensions/package-building.xml:295 en/content/how-to-publish-otrs-extensions/package-building.xml:313 en/content/how-to-publish-otrs-extensions/package-building.xml:331 en/content/how-to-publish-otrs-extensions/package-building.xml:349 en/content/how-to-publish-otrs-extensions/package-building.xml:367 en/content/how-to-publish-otrs-extensions/package-building.xml:392 en/content/how-to-publish-otrs-extensions/package-building.xml:410 en/content/how-to-publish-otrs-extensions/package-building.xml:431 en/content/how-to-publish-otrs-extensions/package-building.xml:455 en/content/how-to-publish-otrs-extensions/package-building.xml:476 en/content/how-to-publish-otrs-extensions/package-building.xml:501 en/content/how-to-publish-otrs-extensions/package-building.xml:511 en/content/how-to-publish-otrs-extensions/package-building.xml:530 en/content/how-to-publish-otrs-extensions/package-porting.xml:36 en/content/how-to-publish-otrs-extensions/package-porting.xml:61 en/content/how-to-publish-otrs-extensions/package-porting.xml:91 en/content/how-to-publish-otrs-extensions/package-porting.xml:173 en/content/how-to-publish-otrs-extensions/package-porting.xml:207 en/content/how-to-publish-otrs-extensions/package-porting.xml:249 en/content/how-to-publish-otrs-extensions/package-porting.xml:265 en/content/how-to-publish-otrs-extensions/package-porting.xml:326 en/content/how-to-publish-otrs-extensions/package-porting.xml:428 en/content/how-to-publish-otrs-extensions/package-porting.xml:470 en/content/how-to-publish-otrs-extensions/package-porting.xml:677
msgid "<placeholder type=\"programlisting\" id=\"0\"/>"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/unit-tests.xml:61
msgid "Prerequisites for testing"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/unit-tests.xml:63
msgid ""
"To be able to run the unit tests, you need to have all optional Perl modules "
"installed, except those for different database backends than what you are "
"using. Run <filename>bin/otrs.CheckModules.pl</filename> to verify your "
"module installation."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/unit-tests.xml:66
msgid ""
"You also need to have an instance of the OTRS web frontend running on the "
"FQDN that is configured in your local OTRS's <filename>Config.pm</filename> "
"file. This OTRS instance must use the same database that is configured for "
"the unit tests."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/unit-tests.xml:71
msgid "Testing"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/unit-tests.xml:73
msgid ""
"To check your tests, just use <filename>bin/otrs.Console.pl "
"Dev::UnitTest::Run --test Calendar</filename> to use "
"<filename>/scripts/test/Calendar.t</filename>."
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:76
#, no-wrap
msgid ""
"shell:/opt/otrs> bin/otrs.Console.pl Dev::UnitTest::Run --test Calendar\n"
"+-------------------------------------------------------------------+\n"
"/opt/otrs/scripts/test/Calendar.t:\n"
"+-------------------------------------------------------------------+\n"
"ok 1 - EventAdd()\n"
"=====================================================================\n"
"Product:   OTRS 5.0.x git\n"
"Test Time: 0 s\n"
"Time:      2010-04-02 12:58:37\n"
"Host:      yourhost.example.com\n"
"Perl:      5.8.9\n"
"OS:        linux\n"
"TestOk:    1\n"
"TestNotOk: 0\n"
"=====================================================================\n"
"shell:/opt/otrs>\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/unit-tests.xml:98
msgid "UnitTest API"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/unit-tests.xml:100
msgid ""
"OTRS provides a small and simple API for unit testing that was used in the "
"previous example.  Here we'll list the most important functions, please also "
"see the online API reference of <ulink "
"url=\"https://doc.otrs.com/doc/api/otrs/5.0/Perl/Kernel/System/UnitTest.pm.html\"> "
"<literal>Kernel::System::UnitTest</literal> </ulink>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/unit-tests.xml:108
msgid "True()"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/unit-tests.xml:110
msgid "This function tests whether given scalar value is a true value in Perl."
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:113
#, no-wrap
msgid ""
"$Self->True(\n"
"    $EventID,\n"
"    'EventAdd()',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/unit-tests.xml:122
msgid "False()"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/unit-tests.xml:124
msgid "This function tests whether given scalar value is a false value in Perl."
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:127
#, no-wrap
msgid ""
"$Self->False(\n"
"    $EventID,\n"
"    'EventAdd()',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/unit-tests.xml:136
msgid "Is()"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/unit-tests.xml:138
msgid "This function tests whether the given scalar variables are equal."
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:141
#, no-wrap
msgid ""
"$Self->Is(\n"
"    $A,\n"
"    $B,\n"
"    'Test Name',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/unit-tests.xml:151
msgid "IsNot()"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/unit-tests.xml:153
msgid "This function tests whether the given scalar variables are inequal."
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:156
#, no-wrap
msgid ""
"$Self->IsNot(\n"
"    $A,\n"
"    $B,\n"
"    'Test Name',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/unit-tests.xml:166
msgid "IsDeeply()"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/unit-tests.xml:168
msgid ""
"This function compares complex data structures for "
"equality. <literal>$A</literal> and <literal>$B</literal> have to be "
"references."
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:172
#, no-wrap
msgid ""
"$Self->IsDeeply(\n"
"    $A,\n"
"    $B,\n"
"    'Test Name',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/unit-tests.xml:182
msgid "IsNotDeeply()"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/unit-tests.xml:184
msgid ""
"This function compares complex data structures for "
"inequality. <literal>$A</literal> and <literal>$B</literal> have to be "
"references."
msgstr ""

#. type: CDATA
#: en/content/contributing/unit-tests.xml:188
#, no-wrap
msgid ""
"$Self->IsNotDeeply(\n"
"    $A,\n"
"    $B,\n"
"    'Test Name',\n"
");\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/code-style-guide/css.xml:5
msgid "CSS"
msgstr ""

#. type: Content of: <section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:10
msgid "Minimum resolution is 1024x768px."
msgstr ""

#. type: Content of: <section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:15
msgid ""
"The layout is liquid, which means that if the screen is wider, the space "
"will be used."
msgstr ""

#. type: Content of: <section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:20
msgid ""
"Absolute size measurements should be specified in px to have a consistent "
"look on many platforms and browsers."
msgstr ""

#. type: Content of: <section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:25
msgid ""
"Documentation is made with CSSDOC (see CSS files for examples). All logical "
"blocks should have a CSSDOC comment."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/css.xml:32
msgid "Architecture"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:37
msgid ""
"We follow the <ulink "
"url=\"http://wiki.github.com/stubbornella/oocss/\">Object Oriented "
"CSS</ulink> approach.  In essence, this means that the layout is achieved by "
"combining different generic building blocks to realize a particular design."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:43
msgid ""
"Wherever possible, module specific design should not be used.  Therefore we "
"also do not work with IDs on the <literal>body</literal> element, for "
"example, if it can be avoided."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/css.xml:51
msgid "Style"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:56
msgid ""
"All definitions have a <literal>{</literal> in the same line as the "
"selector, all rules are defined in one row per rule, the definition ends "
"with a row with a single <literal>}</literal> in it. See the following "
"example:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/css.xml:60
#, no-wrap
msgid ""
"#Selector {\n"
"    width: 10px;\n"
"    height: 20px;\n"
"    padding: 4px;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:71
msgid "Between <literal>:</literal> and the rule value, there is a space."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:76
msgid "Every rule has an indent of 4 spaces."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:81
msgid ""
"If multiple selectors are specified, separate them with comma and put each "
"one on an own line:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/css.xml:84
#, no-wrap
msgid ""
"#Selector1,\n"
"#Selector2,\n"
"#Selector3 {\n"
"    width: 10px;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:95
msgid ""
"If rules are combinable, combine them (e.g. combine "
"<literal>background-position</literal>, <literal>background-image</literal>, "
"... into <literal>background</literal>)."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:100
msgid ""
"Rules should be in a logical order within a definition (all color specific "
"rule together, all positioning rules together, ...)."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/css.xml:105
msgid "All IDs and Names are written in CamelCase notation:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/css.xml:108
#, no-wrap
msgid "<div class=\"NavigationBar\" id=\"AdminMenu\"></div>\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/code-style-guide/javascript.xml:5
msgid "JavaScript"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:8
msgid "Browser Handling"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/code-style-guide/javascript.xml:10
msgid ""
"All JavaScript is loaded in all browsers (no browser hacks in the template "
"files).  The code is responsible to decide if it has to skip or execute "
"certain parts of itself only in certain browsers."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:16
msgid "Directory Structure"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/code-style-guide/javascript.xml:18
msgid "Directory structure inside the <literal>js/</literal> folder:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/javascript.xml:21
#, no-wrap
msgid ""
"* js\n"
"    * thirdparty              # thirdparty libs always have the version "
"number inside the directory\n"
"        * ckeditor-3.0.1\n"
"        * jquery-1.3.2\n"
"    * Core.Agent.*            # stuff specific to the agent interface\n"
"    * Core.Customer.*         # customer interface\n"
"    * Core.*                  # common API\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:33
msgid "Thirdparty Code"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/javascript.xml:35
msgid ""
"Every thirdparty module gets its own subdirectory: \"module name\"-\"version "
"number\" (e.g. ckeditor-3.0.1, jquery-1.3.2).  Inside of that, file names "
"should not have a version number or postfix included (wrong: "
"<literal>jquery/jquery-1.4.3.min.js</literal>, right: "
"<literal>jquery-1.4.3/jquery.js</literal>)."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:43 en/content/contributing/code-style-guide/perl.xml:366
msgid "Variables"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:46
msgid "Variable names should be CamelCase, just like in Perl."
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:47
msgid ""
"Variables that hold a jQuery object should start with <literal>$</literal>, "
"for example: <literal>$Tooltip</literal>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:53
msgid "Functions"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:56
msgid "Function names should be CamelCase, just like in Perl."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:62
msgid "Namespaces"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:65
msgid "TODO..."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:71 en/content/contributing/code-style-guide/perl.xml:637
msgid "Code Comments"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/contributing/code-style-guide/javascript.xml:73
msgid ""
"The <link linkend=\"code-style-guide-perl-code-comments\">commenting "
"guidelines for Perl code</link> also apply to JavaScript."
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:77
msgid "Single line comments are done with <literal>//</literal>."
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:78
msgid "Longer comments are done with <literal>/* ... */</literal>."
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:80
msgid ""
"If you comment out parts of your JavaScript code, only use "
"<literal>//</literal> because <literal>/* ... */</literal> can cause "
"problems with Regular Expressions in the code."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/javascript.xml:88
msgid "Event Handling"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:92
msgid ""
"Always use <literal>$.bind()</literal> instead of the event-shorthand "
"methods of jQuery for better readability (wrong: "
"<literal>$SomeObject.click(...)</literal>, right: "
"<literal>$SomeObject.bind('click', ...</literal>)."
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:96
msgid ""
"Do not use <literal>$.live()</literal>! We had severe performance issues "
"with <literal>$.live()</literal> in correlation with mouse events.  Until it "
"can be verified that <literal>$.live()</literal> works with other event "
"types without problems."
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/javascript.xml:101
msgid ""
"If you <literal>$.bind()</literal> events, make sure to "
"<literal>$.unbind()</literal> them beforehand, to make sure that events will "
"not be bound twice, should the code be executed another time."
msgstr ""

#. type: Content of: <section><title>
#: en/content/contributing/code-style-guide/perl.xml:5
msgid "Perl"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:8
msgid "Formatting"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:12
msgid "Whitespace"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:14
msgid "TAB: We use 4 spaces. Examples for braces:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:17
#, no-wrap
msgid ""
"if ($Condition) {\n"
"    Foo();\n"
"}\n"
"else {\n"
"    Bar();\n"
"}\n"
"\n"
"while ($Condition == 1) {\n"
"    Foo();\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:34
msgid "Length of lines"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:36
msgid ""
"Lines should generally not be longer than 120 characters, unless it is "
"necessary for special reasons."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:42
msgid "Spaces and parentheses"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:44
msgid ""
"To gain more readability, we use spaces between keywords and opening "
"parenthesis."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:47
#, no-wrap
msgid ""
"if ()...\n"
"for ()...\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:54
msgid ""
"If there is just one single variable, the parenthesis enclose the variable "
"with no spaces inside."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:57
#, no-wrap
msgid ""
"if ($Condition) { ... }\n"
"\n"
"# instead of\n"
"\n"
"if ( $Condition ) { ... }\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:67
msgid ""
"If the condition is not just one single variable, we use spaces between the "
"parenthesis and the condition.  And there is still the space between the "
"keyword (e.g. <literal>if</literal>) and the opening parenthesis."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:71
#, no-wrap
msgid "if ( $Condition && $ABC ) { ... }\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:77
msgid "Note that for Perl builtin functions, we do not use parentheses:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:80
#, no-wrap
msgid "chomp $Variable;\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:89
msgid "Source code header and charset"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:91
msgid ""
"Attach the following header to every source file.  Source files are saved in "
"UTF-8 charset."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:95
#, no-wrap
msgid ""
"# --\n"
"# (file name) - a short description what it does\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:108
msgid "Executable files (<filename>*.pl</filename>) have a special header."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:111
#, no-wrap
msgid ""
"#!/usr/bin/perl\n"
"# --\n"
"# (file name) - a short description what it does\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This program is free software: you can redistribute it and/or modify\n"
"# it under the terms of the GNU General Public License as published by\n"
"# the Free Software Foundation, either version 3 of the License, or\n"
"# (at your option) any later version.\n"
"#\n"
"# This program is distributed in the hope that it will be useful,\n"
"# but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n"
"# GNU General Public License for more details.\n"
"#\n"
"# You should have received a copy of the GNU General Public License\n"
"# along with this program. If not, see "
"https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:137
msgid "Using the Perl language"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:140
msgid "Control flow"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:143
msgid "Conditions"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:145
msgid ""
"Conditions can be quite complex and there can be \"chained\" conditions "
"(linked with logical 'or' or 'and' operations).  When coding for OTRS, you "
"have to be aware of several situations."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:149
msgid ""
"Perl Best Practices says, that high precedence operators "
"(<literal>&amp;&amp;</literal> and <literal>||</literal>) shouldn't mixed up "
"with low precedence operators (<literal>and</literal> and "
"<literal>or</literal>).  To avoid confusion, we always use the high "
"precedence operators."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:153
#, no-wrap
msgid ""
"if ( $Condition1 && $Condition2 ) { ... }\n"
"\n"
"# instead of\n"
"\n"
"if ( $Condition and $Condition2 ) { ... }\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:163
msgid ""
"This means that you have to be aware of traps. Sometimes you need to use "
"parenthesis to make clear what you want."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:166
msgid ""
"If you have long conditions (line is longer than 120 characters over all), "
"you have to break it in several lines.  And the start of the conditions is "
"in a new line (not in the line of the <literal>if</literal>)."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:170
#, no-wrap
msgid ""
"if (\n"
"    $Condition1\n"
"    && $Condition2\n"
"    )\n"
"{ ... }\n"
"\n"
"# instead of\n"
"\n"
"if ( $Condition1\n"
"    && $Condition2\n"
"    )\n"
"{ ... }\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:187
msgid ""
"Also note, that the right parenthesis is in a line on its own and the left "
"curly bracket is also in a new line and with the same indentation as the "
"<literal>if</literal>.  The operators are at the beginning of a new line! "
"The subsequent examples show how to do it..."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:192
#, no-wrap
msgid ""
"if (\n"
"    $XMLHash[0]->{otrs_stats}[1]{StatType}[1]{Content}\n"
"    && $XMLHash[0]->{otrs_stats}[1]{StatType}[1]{Content} eq 'static'\n"
"    )\n"
"{ ... }\n"
"\n"
"if ( $TemplateName eq 'AgentTicketCustomer' ) {\n"
"    ...\n"
"}\n"
"\n"
"if (\n"
"    ( $Param{Section} eq 'Xaxis' || $Param{Section} eq 'All' )\n"
"    && $StatData{StatType} eq 'dynamic'\n"
"    )\n"
"{ ... }\n"
"\n"
"if (\n"
"    $Self->{TimeObject}->TimeStamp2SystemTime( String => $Cell->{TimeStop} "
")\n"
"    > $Self->{TimeObject}->TimeStamp2SystemTime(\n"
"        String => $ValueSeries{$Row}{$TimeStop}\n"
"    )\n"
"    || $Self->{TimeObject}->TimeStamp2SystemTime( String => "
"$Cell->{TimeStart} )\n"
"    < $Self->{TimeObject}->TimeStamp2SystemTime(\n"
"        String => $ValueSeries{$Row}{$TimeStart}\n"
"    )\n"
"    )\n"
"{ ... }\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:226
msgid "Postfix <literal>if</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:228
msgid ""
"Generally we use \"postfix <literal>if</literal>\" statements to reduce the "
"number of levels.  But we don't use it for multiline statements and is only "
"allowed when involves return statements in functions or to end a loop or to "
"go next iteration."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:232 en/content/contributing/code-style-guide/perl.xml:265
msgid "This is correct:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:235
#, no-wrap
msgid "next ITEM if !$ItemId;\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:241 en/content/contributing/code-style-guide/perl.xml:277 en/content/contributing/code-style-guide/perl.xml:555
msgid "This is wrong:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:244
#, no-wrap
msgid ""
"return $Self->{LogObject}->Log(\n"
"    Priority => 'error',\n"
"    Message  => 'ItemID needed!',\n"
") if !$ItemId;\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:253
msgid "This is less maintainable than this:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:256
#, no-wrap
msgid ""
"if( !$ItemId ) {\n"
"    $Self->{LogObject}->Log( ... );\n"
"    return;\n"
"}\n"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:268
#, no-wrap
msgid ""
"for my $Needed (1..10) {\n"
"    next if $Needed == 5;\n"
"    last  if $Needed == 9;\n"
"}\n"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:280
#, no-wrap
msgid "my $Var = 1 if $Something == 'Yes';\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:289
msgid "Restrictions for the use of some Perl builtins"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:291
msgid "Some builtin subroutines of Perl may not be used in every place:"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:296
msgid ""
"Don't use <literal>die</literal> and <literal>exit</literal> in "
"<filename>.pm</filename> files."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:299
msgid "Don't use the <literal>Dumper</literal> function in released files."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:302
msgid "Don't use <literal>print</literal> in <filename>.pm</filename> files."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:305
msgid ""
"Don't use <literal>require</literal>, use <literal>Main::Require()</literal> "
"instead."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:308
msgid ""
"Use the functions of the <literal>TimeObject</literal> instead of the "
"builtin functions like <literal>time()</literal>, "
"<literal>localtime()</literal>, etc."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:315
msgid "Regular Expressions"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:317
msgid ""
"For regular expressions we always use the <literal>m//</literal> operator "
"with curly braces as delimiters. We also use the modifiers "
"<literal>x</literal>, <literal>m</literal> and <literal>s</literal>.  The "
"<literal>x</literal> modifiers allows you to comment your regex and use "
"spaces to \"group\" logical groups."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:321
#, no-wrap
msgid ""
"$Date =~ m{ \\A \\d{4} - \\d{2} - \\d{2} \\z }xms\n"
"$Date =~ m{\n"
"    \\A      # beginning of the string\n"
"    \\d{4} - # year\n"
"    \\d{2} - # month\n"
"    [^\\n]   # everything but newline\n"
"    #..\n"
"}xms;\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:334
msgid ""
"As the space no longer has a special meaning, you have to use a single "
"character class to match a single space (<literal>[ ]</literal>).  If you "
"want to match any whitespace you can use <literal>\\s</literal>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:338
msgid ""
"In the regex, the dot (<literal>.</literal>) includes the newline (whereas "
"in regex without <literal>s</literal> modifier the dot means 'everything but "
"newline').  If you want to match anything but newline, you have to use the "
"negated single character class (<literal>[^\\n]</literal>)."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:342
#, no-wrap
msgid ""
"$Text =~ m{\n"
"    Test\n"
"    [ ]    # there must be a space between 'Test' and 'Regex'\n"
"    Regex\n"
"}xms;\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:353
msgid "Naming"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:355
msgid ""
"Names and comments are written in English. Variables, objects and methods "
"must be descriptive nouns or noun phrases with the first letter set upper "
"case (<ulink "
"url=\"https://en.wikipedia.org/wiki/CamelCase\">CamelCase</ulink>)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:359
msgid ""
"Names should be as descriptive as possible.  A reader should be able to say "
"what is meant by a name without digging too deep into the code. E.g. use "
"<literal>$ConfigItemID</literal> instead of "
"<literal>$ID</literal>. Examples: <literal>@TicktIDs</literal>, "
"<literal>$Output</literal>, <literal>StateSet()</literal>, etc."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:369
msgid "Declaration"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:372
msgid ""
"If you have several variables, you can declare them in one line if they "
"\"belong together\":"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:375
#, no-wrap
msgid "my ($Minute, $Hour, $Year);\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:381
msgid "Otherwise break it into separate lines:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:384
#, no-wrap
msgid ""
"\n"
"my $Minute;\n"
"my $ID;\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:392
msgid ""
"Do not set to <literal>undef</literal> or <literal>''</literal> in the "
"declaration as this might hide mistakes in code."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:395
#, no-wrap
msgid ""
"my $Variable = undef;\n"
"\n"
"# is the same as\n"
"\n"
"my $Variable;\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:405
msgid ""
"You can set a variable to <literal>''</literal> if you want to concatenate "
"strings:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:408
#, no-wrap
msgid ""
"my $SqlStatement = '';\n"
"for my $Part ( @Parts ) {\n"
"    $SqlStatement .= $Part;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:417
msgid "Otherwise you would get an \"uninitialized\" warning."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:423
msgid "Subroutines"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:426
msgid "Handling of parameters"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:429
msgid ""
"To fetch the parameters passed to subroutines, OTRS normally uses the hash "
"<literal>%Param</literal> (not <literal>%Params</literal>).  This leads to "
"more readable code as every time we use <literal>%Param</literal> in the "
"subroutine code we know it is the parameter hash passed to the subroutine."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:433
msgid ""
"Just in some exceptions a regular list of parameters should be used.  So we "
"want to avoid something like this:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:437
#, no-wrap
msgid ""
"sub TestSub {\n"
"    my ( $Self, $Param1, $Param2 ) = @_;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:445
msgid "We want to use this instead:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:448
#, no-wrap
msgid ""
"sub TestSub {\n"
"    my ( $Self, %Param ) = @_;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:456
msgid ""
"This has several advantages: We do not have to change the code in the "
"subroutine when a new parameter should be passed, and calling a function "
"with named parameters is much more readable."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:462
msgid "Multiple named parameters"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:464
msgid ""
"If a function call requires more than one named parameter, split them into "
"multiple lines:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:467
#, no-wrap
msgid ""
"    $Self->{LogObject}->Log(\n"
"        Priority => 'error',\n"
"        Message  => \"Need $Needed!\",\n"
"    );\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:475
msgid "Instead of:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:478
#, no-wrap
msgid ""
"    $Self->{LogObject}->Log( Priority => 'error', Message  => \"Need "
"$Needed!\", );\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:485
msgid "<literal>return</literal> statements"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:487
msgid ""
"Subroutines have to have a <literal>return</literal> statement.  The "
"explicit <literal>return</literal> statement is preferred over the implicit "
"way (result of last statement in subroutine) as this clarifies what the "
"subroutine returns."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:491
#, no-wrap
msgid ""
"sub TestSub {\n"
"    ...\n"
"    return; # return undef, but not the result of the last statement\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:501
msgid "Explicit return values"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:503
msgid ""
"Explicit return values means that you should not have a "
"<literal>return</literal> statement followed by a subroutine call."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:506
#, no-wrap
msgid "return $Self->{DBObject}->Do( ... );\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:512
msgid ""
"The following example is better as this says explicitly what is "
"returned. With the example above the reader doesn't know what the return "
"value is as he might not know what <literal>Do()</literal> returns."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:515
#, no-wrap
msgid ""
"return if !$Self->{DBObject}->Do( ... );\n"
"return 1;\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:522
msgid ""
"If you assign the result of a subroutine to a variable, a \"good\" variable "
"name indicates what was returned:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:525
#, no-wrap
msgid ""
"my $SuccessfulInsert = $Self->{DBObject}->Do( ... );\n"
"return $SuccessfulInsert;\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:535
msgid "Packages"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:538
msgid "<literal>use</literal> statements"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:540
msgid ""
"<literal>use strict</literal> and <literal>use warnings</literal> have to be "
"the first two \"use\"s in a module. This is correct:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:543
#, no-wrap
msgid ""
"package Kernel::System::ITSMConfigItem::History;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::User;\n"
"use Kernel::System::Time;\n"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:558
#, no-wrap
msgid ""
"package Kernel::System::ITSMConfigItem::History;\n"
"\n"
"use Kernel::System::User;\n"
"use Kernel::System::Time;\n"
"\n"
"use strict;\n"
"use warnings;\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:572
msgid "Objects and their allocation"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:574
msgid ""
"In OTRS many objects are available. But you should not use every object in "
"every file to keep the frontend/backend separation."
msgstr ""

#. type: Content of: <section><section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:580
msgid ""
"Don't use the <literal>LayoutObject</literal> in core modules "
"(<filename>Kernel/System</filename>)."
msgstr ""

#. type: Content of: <section><section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:583
msgid ""
"Don't use the <literal>ParamObject</literal> in core modules "
"(<filename>Kernel/System</filename>)."
msgstr ""

#. type: Content of: <section><section><section><section><para><itemizedlist><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:586
msgid ""
"Don't use the <literal>DBObject</literal> in frontend modules "
"(<filename>Kernel/Modules</filename>)."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:597
msgid "Writing good documentation"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:600
msgid "Perldoc"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:603
msgid "Documenting subroutines"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:606
msgid ""
"Subroutines should always be documented. The documentation contains a "
"general description about what the subroutine does, a sample subroutine call "
"and what the subroutine returns. It should be in this order. A sample "
"documentation looks like this:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:609
#, no-wrap
msgid ""
"=item LastTimeObjectChanged()\n"
"\n"
"calculates the last time the object was changed. It returns a hash reference "
"with\n"
"    information about the object and the time.\n"
"\n"
"    my $Info = $Object->LastTimeObjectChanged(\n"
"        Param => 'Value',\n"
"    );\n"
"\n"
"This returns something like:\n"
"\n"
"    my $Info = {\n"
"        ConfigItemID    => 1234,\n"
"        HistoryType     => 'foo',\n"
"        LastTimeChanged => '08.10.2009',\n"
"    };\n"
"\n"
"=cut\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:631
msgid ""
"You can copy and paste a <literal>Data::Dumper</literal> output for the "
"return values."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:640
msgid ""
"In general, you should try to write your code as readable and "
"self-explaining as possible.  Don't write a comment to explain what obvious "
"code does, this is unnecessary duplication.  Good comments should explain "
"<emphasis>why</emphasis> there is some code, possible side effects and "
"anything that might be special or unusually complicated about the code."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:647
msgid "Please adhere to the following guidelines:"
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><term>
#: en/content/contributing/code-style-guide/perl.xml:653
msgid "Make the code so readable that comments are not needed, if possible."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:656
msgid ""
"It's always preferable to write code so that it is very readable and "
"self-explaining, for example with precise variable and function names."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><term>
#: en/content/contributing/code-style-guide/perl.xml:661
msgid "Don't say what the code says (DRY)."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:664
msgid "Don't repeat (obvious) code in the comments."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:666
#, no-wrap
msgid ""
"# WRONG:\n"
"\n"
"# get config object\n"
"my $ConfigObject = $Kernel::OM->Get('Kernel::Config');\n"
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><term>
#: en/content/contributing/code-style-guide/perl.xml:675
msgid "Document <emphasis>why</emphasis> the code is there, not how it works."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:678
msgid ""
"Usually, code comments should explain the <emphasis>purpose</emphasis> of "
"code, not how it works in detail. There might be exceptions for specially "
"complicated code, but in this case also a refactoring to make it more "
"readable could be commendable."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><term>
#: en/content/contributing/code-style-guide/perl.xml:683
msgid "Document pitfalls."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:686
msgid ""
"Everything that is unclear, tricky or that puzzled you during development "
"should be documented."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><term>
#: en/content/contributing/code-style-guide/perl.xml:691
msgid "Use full-line sentence-style comments to document algorithm paragraphs."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:694
msgid ""
"Always use full sentences (uppercase first letter and final "
"period). Subsequent lines of a sentence should be indented."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:696
#, no-wrap
msgid ""
"# Check if object name is provided.\n"
"if ( !$_[1] ) {\n"
"    $_[0]->_DieWithError(\n"
"        Error => \"Error: Missing parameter (object name)\",\n"
"    );\n"
"}\n"
"\n"
"# Record the object we are about to retrieve to potentially build better "
"error messages.\n"
"# Needs to be a statement-modifying 'if', otherwise 'local' is local\n"
"#   to the scope of the 'if'-block.\n"
"local $CurrentObject = $_[1] if !$CurrentObject;\n"
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><term>
#: en/content/contributing/code-style-guide/perl.xml:712
msgid "Use short end-of-line comments to add detail information."
msgstr ""

#. type: Content of: <section><section><section><variablelist><varlistentry><listitem><para>
#: en/content/contributing/code-style-guide/perl.xml:715
msgid ""
"These can either be a complete sentence (capital first letter and period) or "
"just a phrase (lowercase first letter and no period)."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:717
#, no-wrap
msgid ""
"$BuildMode = oct $Param{Mode};   # *from* octal, not *to* octal\n"
"\n"
"# or\n"
"\n"
"$BuildMode = oct $Param{Mode};   # Convert *from* octal, not *to* octal.\n"
"\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:733
msgid "Database interaction"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:736
msgid "Declaration of SQL statements"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:738
msgid ""
"If there is no chance for changing the SQL statement, it should be used in "
"the <literal>Prepare</literal> function.  The reason for this is, that the "
"SQL statement and the bind parameters are closer to each other."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:742
msgid ""
"The SQL statement should be written as one nicely indented string without "
"concatenation like this:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:745
#, no-wrap
msgid ""
"return if !$Self->{DBObject}->Prepare(\n"
"    SQL => '\n"
"        SELECT art.id\n"
"        FROM article art, article_sender_type ast\n"
"        WHERE art.ticket_id = ?\n"
"            AND art.article_sender_type_id = ast.id\n"
"            AND ast.name = ?\n"
"        ORDER BY art.id',\n"
"    Bind => [ \\$Param{TicketID}, \\$Param{SenderType} ],\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:759
msgid ""
"This is easy to read and modify, and the whitespace can be handled well by "
"our supported DBMSs.  For auto-generated SQL code (like in "
"<literal>TicketSearch</literal>), this indentation is not necessary."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:764
msgid "Returning on errors"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:766
msgid ""
"Whenever you use database functions you should handle errors. If anything "
"goes wrong, return from subroutine:"
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:769
#, no-wrap
msgid "return if !$Self->{DBObject}->Prepare( ... );\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:775
msgid "Using Limit"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:777
msgid "Use <literal>Limit => 1</literal> if you expect just one row to be returned."
msgstr ""

#. type: CDATA
#: en/content/contributing/code-style-guide/perl.xml:780
#, no-wrap
msgid ""
"$Self->{DBObject}->Prepare(\n"
"    SQL   => 'SELECT id FROM users WHERE username = ?',\n"
"    Bind  => [ \\$Username ],\n"
"    Limit => 1,\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/contributing/code-style-guide/perl.xml:790
msgid "Using the <literal>while</literal> loop"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/contributing/code-style-guide/perl.xml:792
msgid ""
"Always use the <literal>while</literal> loop, even when you expect one row "
"to be returned, as some databases do not release the statement handle and "
"this can lead to weird bugs."
msgstr ""

#. type: Content of: <section><title>
#: en/content/get-started/architecture.xml:5
msgid "Architecture Overview"
msgstr ""

#. type: Content of: <section><para>
#: en/content/get-started/architecture.xml:7
msgid ""
"The OTRS framework is modular. The following picture shows the basic layer "
"architecture of OTRS."
msgstr ""

#. type: Content of: <section><para><figure><title>
#: en/content/get-started/architecture.xml:12
msgid "OTRS Architecture"
msgstr ""

#. type: Content of: <section><para><figure><screenshot>
#: en/content/get-started/architecture.xml:14
msgid ""
"<graphic fileref=\"screenshots/architecture.png\" scalefit=\"1\" "
"width=\"100%\" contentdepth=\"100%\"></graphic>"
msgstr ""

#. type: Content of: <section><section><para><figure>
#: en/content/get-started/architecture.xml:13 en/content/get-started/architecture.xml:25 en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:12 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:16 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:20 en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:146 en/content/how-to-publish-otrs-extensions/package-building.xml:597
msgid "<placeholder type=\"screenshot\" id=\"0\"/>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:11 en/content/get-started/architecture.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:10 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:14 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:144 en/content/how-to-publish-otrs-extensions/package-building.xml:595
msgid "<placeholder type=\"figure\" id=\"0\"/>"
msgstr ""

#. type: Content of: <section><para>
#: en/content/get-started/architecture.xml:19
msgid ""
"Introduced in OTRS 3.1, the OTRS Generic Interface continues OTRS "
"modularity. The next picture shows the basic layer architecture of the "
"Generic Interface."
msgstr ""

#. type: Content of: <section><para><figure><title>
#: en/content/get-started/architecture.xml:24
msgid "Generic Interface Architecture"
msgstr ""

#. type: Content of: <section><para><figure><screenshot>
#: en/content/get-started/architecture.xml:26
msgid ""
"<graphic fileref=\"screenshots/giarchitecture.png\" scalefit=\"1\" "
"width=\"100%\" contentdepth=\"100%\"></graphic>"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:31
msgid "Directories"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><thead><row><entry>
#: en/content/get-started/architecture.xml:37
msgid "Directory"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><thead><row><entry>
#: en/content/get-started/architecture.xml:38
msgid "Description"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:43
msgid "bin/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:44
msgid "commandline tools"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:47
msgid "bin/cgi-bin/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:48
msgid "web handle"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:51
msgid "bin/fcgi-bin/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:52
msgid "fast cgi web handle"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:55
msgid "Kernel"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:56
msgid "application codebase"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:59
msgid "Kernel/Config/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:60 en/content/get-started/architecture.xml:64
msgid "configuration files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:63
msgid "Kernel/Config/Files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:67
msgid "Kernel/GenericInterface/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:68
msgid "the Generic Interface API"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:71
msgid "Kernel/GenericInterface/Invoker/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:72
msgid "invoker modules for Generic Interface"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:75
msgid "Kernel/GenericInterface/Mapping/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:76
msgid "mapping modules for Generic Interface, e.g. Simple"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:79
msgid "Kernel/GenericInterface/Operation/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:80
msgid "operation modules for Generic Interface"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:83
msgid "Kernel/GenericInterface/Transport/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:84
msgid "transport modules for Generic Interface, e.g. \"HTTP SOAP\""
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:87
msgid "Kernel/Language"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:88
msgid "language translation files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:91
msgid "Kernel/Scheduler/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:92
msgid "Scheduler files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:95
msgid "Kernel/Scheduler/TaskHandler"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:96
msgid "handler modules for scheduler tasks, e.g. GenericInterface"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:99
msgid "Kernel/System/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:100
msgid "core modules, e.g. Log, Ticket..."
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:103
msgid "Kernel/Modules/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:104
msgid "frontend modules, e.g. QueueView..."
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:107
msgid "Kernel/Output/HTML/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:108
msgid "html templates"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:111
msgid "var/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:112
msgid "variable data"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:115
msgid "var/log"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:116
msgid "logfiles"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:119
msgid "var/cron/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:120
msgid "cron files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:123
msgid "var/httpd/htdocs/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:124
msgid "htdocs directory with index.html"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:127
msgid "var/httpd/htdocs/skins/Agent/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:128
msgid "available skins for the Agent interface"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:131
msgid "var/httpd/htdocs/skins/Customer/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:132
msgid "available skins for the Customer interface"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:135
msgid "var/httpd/htdocs/js/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:136
msgid "JavaScript files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:139
msgid "scripts/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:140
msgid "misc files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:143
msgid "scripts/test/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:144
msgid "unit test files"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:147
msgid "scripts/test/sample/"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/get-started/architecture.xml:148
msgid "unit test sample data files"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:156
msgid "Files"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:157
msgid ".pl = Perl"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:158
msgid ".pm = Perl Module"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:159
msgid ".tt = Template::Toolkit template files"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:160
msgid ".dist = Default templates of files"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:161
msgid ".yaml or .yml = YAML files, used for Web Service configuration"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:164
msgid "Core Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:166
msgid ""
"Core modules are located under "
"<filename>$OTRS_HOME/Kernel/System/*</filename>. This layer is for the "
"logical work. Core modules are used to handle system routines like \"lock "
"ticket\" and \"create ticket\". A few main core modules are:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:173
msgid "<literal>Kernel::System::Config</literal> (to access config options)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:176
msgid "<literal>Kernel::System::Log</literal> (to log into OTRS log backend)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:179
msgid "<literal>Kernel::System::DB</literal> (to access the database backend)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:182
msgid "<literal>Kernel::System::Auth</literal> (to check user authentication)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:185
msgid "<literal>Kernel::System::User</literal> (to manage users)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:188
msgid "<literal>Kernel::System::Group</literal> (to manage groups)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:191
msgid "<literal>Kernel::System::Email</literal> (for sending emails)"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:196 en/content/get-started/architecture.xml:288 en/content/get-started/architecture.xml:306 en/content/get-started/architecture.xml:318 en/content/get-started/architecture.xml:337 en/content/get-started/architecture.xml:354 en/content/get-started/architecture.xml:369
msgid ""
"For more information, see: <ulink "
"url=\"http://otrs.github.io/doc/\">http://otrs.github.io/doc/</ulink>"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:201
msgid "Frontend Handle"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:203
msgid ""
"The interface between the browser, web server and the frontend modules. A "
"frontend module can be used via the HTTP-link."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:207
msgid "<ulink url=\"\">http://localhost/otrs/index.pl?Action=Module</ulink>"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:211 en/content/how-to-extend-otrs/otrs-module-layers.xml:40
msgid "Frontend Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:213
msgid ""
"Frontend modules are located under "
"<filename>$OTRS_HOME/Kernel/Modules/*.pm</filename>. There are two public "
"functions in there - <code>new()</code> and <code>run()</code> - which are "
"accessed from the Frontend Handle (e.g. <filename>index.pl</filename>)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:218
msgid ""
"<code>new()</code> is used to create a frontend module object. The Frontend "
"Handle provides the used frontend module with the basic framework "
"objects. These are, for example: <literal>ParamObject</literal> (to get web "
"form params), <literal>DBObject</literal> (to use existing database "
"connections), <literal>LayoutObject</literal> (to use templates and other "
"html layout functions), <literal>ConfigObject</literal> (to access config "
"settings), <literal>LogObject</literal> (to use the framework log system), "
"<literal>UserObject</literal> (to get the user functions from the current "
"user), <literal>GroupObject</literal> (to get the group functions)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:227
msgid ""
"For more information on core modules see: <ulink "
"url=\"http://otrs.github.io/doc/\">http://otrs.github.io/doc/</ulink>"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:232
msgid "CMD Frontend"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:234
msgid ""
"The CMD (Command) Frontend is like the Web Frontend Handle and the Web "
"Frontend Module in one (just without the <literal>LayoutObject</literal>) "
"and uses the core modules for some actions in the system."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:240 en/content/how-to-extend-otrs/otrs-module-layers.xml:47
msgid "Generic Interface Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:242
msgid ""
"Generic Interface modules are located under "
"<filename>$OTRS_HOME/Kernel/GenericInterface/*</filename>.  Generic "
"Interface modules are used to handle each part of a web service execution on "
"the system. The main modules for the Generic Interface are:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:250
msgid ""
"<literal>Kernel::GenericInterface::Transport</literal> (to interact with "
"remote systems)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:255
msgid ""
"<literal>Kernel::GenericInterface::Mapping</literal> (to transform data into "
"a required format)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:260
msgid ""
"<literal>Kernel::GenericInterface::Requester</literal> (to use OTRS as a "
"client for the web service)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:266
msgid ""
"<literal>Kernel::GenericInterface::Provider</literal> (to use OTRS as a "
"server for web service)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:271
msgid ""
"<literal>Kernel::GenericInterface::Operation</literal> (to execute Provider "
"actions)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:276
msgid ""
"<literal>Kernel::GenericInterface::Invoker</literal> (to execute Requester "
"actions)"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/architecture.xml:281
msgid ""
"<literal>Kernel::GenericInterface::Debugger</literal> (to track web service "
"communication, using log entries)"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/get-started/architecture.xml:292
msgid "Generic Interface Invoker Modules"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/get-started/architecture.xml:294
msgid ""
"Generic Interface Invoker modules are located under "
"<filename>$OTRS_HOME/Kernel/GenericInterface/Invoker/*</filename>. Each "
"Invoker is contained in a folder called <literal>Controller</literal>. This "
"approach helps to define a name space not only for internal classes and "
"methods but for filenames too. For example: "
"<filename>$OTRS_HOME/Kernel/GenericInterface/Invoker/Test/</filename> is the "
"Controller for all Test-type invokers."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/get-started/architecture.xml:302
msgid ""
"Generic Interface Invoker modules are used as a backend to create requests "
"for Remote Systems to execute actions."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/get-started/architecture.xml:311
msgid "Generic Interface Mapping Modules"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/get-started/architecture.xml:313
msgid ""
"Generic Interface Mapping modules are located under "
"<filename>$OTRS_HOME/Kernel/GenericInterface/Mapping/*</filename>. These "
"modules are used to transform data (keys and values) from one format to "
"another."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/get-started/architecture.xml:323
msgid "Generic Interface Operation Modules"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/get-started/architecture.xml:325
msgid ""
"Generic Interface Operation modules are located under "
"<filename>$OTRS_HOME/Kernel/GenericInterface/Operation/*</filename>. Each "
"Operation is contained in a folder called "
"<literal>Controller</literal>. This approach help to define a name space not "
"only for internal classes and methods but for filenames too. For example: "
"<filename>$OTRS_HOME/Kernel/GenericInterface/Operation/Ticket/</filename> is "
"the Controller for all Ticket-type operations."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/get-started/architecture.xml:333
msgid ""
"Generic Interface operation modules are used as a backend to perform actions "
"requested by a remote system."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/get-started/architecture.xml:342
msgid "Generic Interface Transport Modules"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/get-started/architecture.xml:344
msgid ""
"Generic Interface Network Transport modules are located under "
"<filename>$OTRS_HOME/Kernel/GenericInterface/Operation/*</filename>. Each "
"transport module should be placed in a directory named as the Network "
"Protocol used. For example: The \"HTTP SOAP\" transport module, located in "
"<filename>$OTRS_HOME/Kernel/GenericInterface/Transport/HTTP/SOAP.pm</filename>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/get-started/architecture.xml:350
msgid ""
"Generic Interface transport modules are used send data to, and receive data "
"from a Remote System."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:360
msgid "Scheduler Task Handler Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:362
msgid ""
"Scheduler Task Handler modules are located under "
"<filename>$OTRS_HOME/Kernel/Scheduler/TaskHandler/*</filename>. These "
"modules are used to perform asynchronous tasks. For example, the "
"<literal>GenericInterface</literal> task handler perform Generic Interface "
"Requests to Remote Systems outside the apache process. This helps the system "
"to be more responsive, preventing possible performance issues."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/architecture.xml:374
msgid "Database"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:376
msgid "The database interface supports different databases."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/architecture.xml:379
msgid ""
"For the OTRS data model please refer to the files in your "
"<filename>/doc</filename> directory. Alternatively you can look at the data "
"model <ulink "
"url=\"https://github.com/OTRS/otrs/blob/master/development/diagrams/Database/OTRSDatabaseDiagram.png\"> "
"on github </ulink>."
msgstr ""

#. type: Content of: <section><title>
#: en/content/get-started/development-environment.xml:5
msgid "Development Environment"
msgstr ""

#. type: Content of: <section><para>
#: en/content/get-started/development-environment.xml:7
msgid ""
"To facilitate the writing of OTRS expansion modules, the creation of a "
"development environment is necessary.  The source code of OTRS and "
"additional public modules can be found on <ulink "
"url=\"http://otrs.github.io\">github</ulink>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/development-environment.xml:12
msgid "Framework checkout"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:14
msgid ""
"First of all a directory must be created in which the modules can be "
"stored.  Then switch to the new directory using the command line and check "
"them out by using the following command:"
msgstr ""

#. type: CDATA
#: en/content/get-started/development-environment.xml:18
#, no-wrap
msgid ""
"# for git master\n"
"shell> git clone git@github.com:OTRS/otrs.git -b master\n"
"# for a specific branch like OTRS 3.3\n"
"shell> git clone git@github.com:OTRS/otrs.git -b rel-3_3\n"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/get-started/development-environment.xml:18 en/content/get-started/development-environment.xml:29 en/content/get-started/development-environment.xml:78 en/content/get-started/development-environment.xml:91 en/content/get-started/development-environment.xml:101 en/content/how-it-works/config-mechanism.xml:26 en/content/how-it-works/skins.xml:225 en/content/how-to-extend-otrs/writing-otrs-application.xml:20 en/content/how-to-publish-otrs-extensions/package-building.xml:580 en/content/how-to-publish-otrs-extensions/package-management.xml:28 en/content/how-to-publish-otrs-extensions/package-management.xml:58 en/content/how-to-publish-otrs-extensions/package-management.xml:83 en/content/how-to-publish-otrs-extensions/package-management.xml:107 en/content/how-to-publish-otrs-extensions/package-management.xml:132
msgid "<placeholder type=\"screen\" id=\"0\"/>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:26
msgid ""
"Check out the <literal>module-tools</literal> module (from github) too, for "
"your development environment. It contains a number of useful tools:"
msgstr ""

#. type: CDATA
#: en/content/get-started/development-environment.xml:29
#, no-wrap
msgid "shell> git clone git@github.com:OTRS/module-tools.git\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:34
msgid ""
"Please configure the OTRS system according to the <ulink "
"url=\"http://otrs.github.io/doc/manual/admin/stable/en/html/installation.html\">installation "
"instructions</ulink> in the admin manual."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/development-environment.xml:41
msgid "Useful Tools"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:43
msgid ""
"There are two modules that are highly recommended for OTRS development: "
"<ulink url=\"https://github.com/OTRS/otrscodepolicy\">OTRSCodePolicy</ulink> "
"and <ulink url=\"https://github.com/OTRS/Fred\">Fred</ulink>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:48
msgid ""
"OTRSCodePolicy is a code quality checker that enforces the use of common "
"coding standards also for the OTRS development team. It is highly "
"recommended to use it if you plan to make contributions. You can use it as a "
"standalone test script or even register it as a git commit hook that runs "
"every time that you create a commit. Please see <ulink "
"url=\"https://github.com/OTRS/otrscodepolicy/blob/master/doc/en/OTRSCodePolicy.xml\"> "
"the module documentation </ulink> for details."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:57
msgid ""
"Fred is a little development helper module that you can actually install or "
"link (as described below)  into your development system. It features several "
"helpful modules that you can activate, such as an SQL logger or an STDERR "
"console. You can find some more details in its <ulink "
"url=\"https://github.com/OTRS/Fred/blob/master/doc/en/Fred.xml\">module "
"documentation</ulink>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:63
msgid ""
"By the way, these tools are also open source, and we will be happy about any "
"improvements that you can contribute."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/get-started/development-environment.xml:69
msgid "Linking Expansion Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:71
msgid ""
"A clear separation between OTRS and the modules is necessary for proper "
"developing.  Particularly when using a git clone, a clear separation is "
"crucial.  In order to facilitate the OTRS access the files, links must be "
"created.  This is done by a script in the directory module tools "
"repository.  Example: Linking the Calendar Module:"
msgstr ""

#. type: CDATA
#: en/content/get-started/development-environment.xml:78
#, no-wrap
msgid "shell> ~/src/module-tools/link.pl ~/src/Calendar/ ~/src/otrs/\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:83
msgid "Whenever new files are added, they must be linked as described above."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:86
msgid ""
"As soon as the linking is completed, the SysConfig must be rebuilt to "
"register the module in OTRS.  Additional SQL or Perl code from the module "
"must also be executed.  Example:"
msgstr ""

#. type: CDATA
#: en/content/get-started/development-environment.xml:91
#, no-wrap
msgid ""
"shell> ~/src/otrs/bin/otrs.Console.pl Maint::Config::Rebuild\n"
"shell> ~/src/module-tools/DatabaseInstall.pl -m Calendar.sopm -a install\n"
"shell> ~/src/module-tools/CodeInstall.pl -m Calendar.sopm -a install\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/get-started/development-environment.xml:98
msgid "To remove links from OTRS enter the following command:"
msgstr ""

#. type: CDATA
#: en/content/get-started/development-environment.xml:101
#, no-wrap
msgid "shell> ~/src/module-tools/remove_links.pl ~/src/otrs/\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-it-works/config-mechanism.xml:5
msgid "Config Mechanism"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/config-mechanism.xml:7
msgid ""
"OTRS comes with a dedicated mechanism to manage configuration options via a "
"graphical interface (SysConfig).  This section describes how it works "
"internally and how you can provide new configuration options or change "
"existing default values."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/config-mechanism.xml:13
msgid "<filename>Defaults.pm</filename>: OTRS Default Configuration"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:15
msgid ""
"The default configuration file of OTRS is "
"<filename>Kernel/Config/Defaults.pm</filename>.  This file should be left "
"untouched as it is automatically updated on framework updates."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/config-mechanism.xml:21
msgid "Automatically Generated Configuration Files"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:23
msgid ""
"In <filename>Kernel/Config/Files</filename> you can find some automatically "
"generated configuration files:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:26
#, no-wrap
msgid ""
"ZZZAAuto.pm                 # Perl cache of the XML configuration's default "
"values\n"
"ZZZACL.pm                   # Perl cache of ACL configuration from "
"database\n"
"ZZZAuto.pm                  # Contains all the settings the user changed in "
"their SysConfig\n"
"ZZZProcessManagement.pm     # Perl cache of ProcessManagement configuration "
"from database\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:34
msgid ""
"These files should never be manually changed as they are overwritten by "
"OTRS."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/config-mechanism.xml:39
msgid "XML Config Options"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:41
msgid ""
"In OTRS, configuration options that the administrator can configure via "
"SysConfig are provided via XML files with a special format.  XML config "
"files are located at "
"<filename>$OTRS_HOME/Kernel/Config/Files/*.xml</filename>.  The file "
"<filename>Kernel/Config/Files/ZZZAAuto.pm</filename> is a cached Perl "
"version of the XML that contains all settings with their default value. It "
"can be (re-)generated with <filename>bin/otrs.Console.pl "
"Maint::Config::Rebuild</filename>.  All changes the administrator makes are "
"stored in <filename>Kernel/Config/Files/ZZZAuto.pm</filename>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:49
msgid "Each XML config file has the following layout:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:52
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n"
"<otrs_config version=\"1.0\" init=\"Changes\">\n"
"\n"
"    <!--  config items will be here -->\n"
"\n"
"</otrs_config>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:62
msgid ""
"The <literal>init</literal> attribute describes where the config options "
"should be loaded. There are different levels available and will be "
"loaded/overloaded in the following order: <literal>Framework</literal> (for "
"framework settings e. g. session option), <literal>Application</literal> "
"(for application settings e. g. ticket options), <literal>Config</literal> "
"(for extensions to existing applications e. g. ITSM options) and "
"<literal>Changes</literal> (for custom development e. g. to overwrite "
"framework or ticket options)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:65
msgid "If you want to add config options, here is an example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:68
#, no-wrap
msgid ""
"<ConfigItem Name=\"Ticket::Hook\" Required=\"1\" Valid=\"1\" "
"ConfigLevel=\"300\">\n"
"    <Description Lang=\"en\">The identifier for a ticket. The default is "
"Ticket#.</Description>\n"
"    <Description Lang=\"de\">Ticket-Identifikator. Als Standard wird Ticket# "
"verwendet.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Core::Ticket</SubGroup>\n"
"    <Setting>\n"
"        <String Regex=\"\">Ticket#</String>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:81
msgid ""
"If <literal>required</literal> is set to <literal>1</literal>, the config "
"variable is included and cannot be disabled."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:84
msgid ""
"If <literal>valid</literal> is set to <literal>1</literal>, the config "
"variable is active.  If it is set to <literal>0</literal>, the config "
"variable is inactive."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:88
msgid ""
"If the optional attribute <literal>ConfigLevel</literal> is set, the config "
"variable might not be edited by the administrator, depending on his own "
"config level. The config variable <literal>ConfigLevel</literal> sets the "
"level of technical experience of the administrator. It can be 100 (Expert), "
"200 (Advanced) or 300 (Beginner).  As a guideline which config level should "
"be given to an option, it is recommended that all options having to do with "
"the configuration of external interaction, like Sendmail, LDAP, SOAP, and "
"others should get a config level of at least 200 (Advanced)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:96
msgid "The config variable is defined in the <literal>Setting</literal> element."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:100
msgid "Types of XML Config Variables"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:102
msgid "The XML config settings support various types of variables."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:105
msgid "String"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:107
#, no-wrap
msgid ""
"<Setting>\n"
"    <String Regex=\"\" Check=\"File\"></String>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:114
msgid ""
"A config element for numbers and single-line strings.  Checking the validity "
"with a regular expression is possible (optional).  The optional "
"<literal>Check</literal> attribute checks elements on the file system."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:119
#, no-wrap
msgid ""
"<Setting>\n"
"    <String Translatable=\"1\">My Setting</String>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:126
msgid ""
"The optional <literal>Translatable</literal> attribute marks this setting as "
"translatable, which will cause it to be included in the OTRS translation "
"files.  This attribute can be placed on any tag (see also below)."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:132
msgid "Textarea"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:134
msgid "A config element for multiline text."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:137
#, no-wrap
msgid ""
"<Setting>\n"
"    <TextArea></TextArea>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:145
msgid "Options"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:147
msgid "This config element offers preset values as a pull-down menu."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:150
#, no-wrap
msgid ""
"<Setting>\n"
"    <Option SelectedID=\"0\">\n"
"        <Item Key=\"0\" Translatable=\"1\">No</Item>\n"
"        <Item Key=\"1\" Translatable=\"1\">Yes</Item>\n"
"    </Option>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:160
msgid "You can also choose the default value by \"Value\":"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:163
#, no-wrap
msgid ""
"<Setting>\n"
"    <Option SelectedValue=\"No\">\n"
"        <Item Key=\"0\" Translatable=\"1\">No</Item>\n"
"        <Item Key=\"1\" Translatable=\"1\">Yes</Item>\n"
"    </Option>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:174
msgid "Array"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:176
msgid "With this config element arrays can be displayed."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:179
#, no-wrap
msgid ""
"<Setting>\n"
"    <Array>\n"
"        <Item>First item</Item>\n"
"        <Item>Second item</Item>\n"
"    </Array>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:190
msgid "Hash"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:192
msgid "With this config element hashes can be displayed."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:195
#, no-wrap
msgid ""
"<Setting>\n"
"    <Hash>\n"
"        <Item Key=\"1\" Translatable=\"1\">Value 1</Item>\n"
"        <Item Key=\"2\" Translatable=\"1\">Value 2</Item>\n"
"    </Hash>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:205
msgid "A hash can also contain nested arrays or hashes."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:208
#, no-wrap
msgid ""
"<Setting>\n"
"    <Hash>\n"
"        <Item Key=\"\"></Item>\n"
"        <Item Key=\"\">\n"
"            <Hash>\n"
"                <Item Key=\"\"></Item>\n"
"                <Item Key=\"\"></Item>\n"
"            </Hash>\n"
"        </Item>\n"
"        <Item Key=\"\">\n"
"            <Array>\n"
"                <Item></Item>\n"
"                <Item></Item>\n"
"            </Array>\n"
"        </Item>\n"
"        <Item Key=\"\"></Item>\n"
"    </Hash>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:231
msgid "FrontendModuleReg (NavBar)"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:233
msgid "Module registration for Agent Interface:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:236
#, no-wrap
msgid ""
"<Setting>\n"
"    <FrontendModuleReg>\n"
"        <Description>Agent Dashboard</Description>\n"
"        <Title></Title>\n"
"        <NavBarName>Dashboard</NavBarName>\n"
"        <NavBar>\n"
"            <Description Translatable=\"1\"></Description>\n"
"            <Name Translatable=\"1\">Dashboard</Name>\n"
"            <Link>Action=AgentDashboard</Link>\n"
"            <LinkOption></LinkOption>\n"
"            <NavBar>Dashboard</NavBar>\n"
"            <Type>Menu</Type>\n"
"            <Block>ItemArea</Block>\n"
"            <AccessKey>d</AccessKey>\n"
"            <Prio>50</Prio>\n"
"        </NavBar>\n"
"        <Loader>\n"
"            <CSS>Core.Agent.Dashboard.css</CSS>\n"
"            <CSS>Core.AllocationList.css</CSS>\n"
"            <CSS>thirdparty/fullcalendar-1.6.1/fullcalendar.css</CSS>\n"
"            <CSS>thirdparty/d3js/nv.d3.css</CSS>\n"
"            <JavaScript>thirdparty/flot-0.8.3/excanvas.js</JavaScript>\n"
"            <JavaScript>thirdparty/flot-0.8.3/jquery.flot.js</JavaScript>\n"
"            "
"<JavaScript>thirdparty/fullcalendar-1.6.1/fullcalendar.min.js</JavaScript>\n"
"            <JavaScript>thirdparty/d3js/d3.v3.min.js</JavaScript>\n"
"            <JavaScript>thirdparty/d3js/nv.d3.min.js</JavaScript>\n"
"            "
"<JavaScript>thirdparty/d3js/models/OTRSmultiBarChart.js</JavaScript>\n"
"            "
"<JavaScript>thirdparty/d3js/models/OTRSstackedAreaChart.js</JavaScript>\n"
"            <JavaScript>Core.UI.Chart.js</JavaScript>\n"
"            <JavaScript>Core.UI.AdvancedChart.js</JavaScript>\n"
"            <JavaScript>Core.UI.AllocationList.js</JavaScript>\n"
"            <JavaScript>Core.Agent.TableFilters.js</JavaScript>\n"
"            <JavaScript>Core.Agent.Dashboard.js</JavaScript>\n"
"        </Loader>\n"
"    </FrontendModuleReg>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/config-mechanism.xml:277
msgid "FrontendModuleReg (NavBarModule)"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/config-mechanism.xml:279
msgid "Module registration for Admin Interface:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:282
#, no-wrap
msgid ""
"<Setting>\n"
"    <FrontendModuleReg>\n"
"        <Group>admin</Group>\n"
"        <Description>Admin</Description>\n"
"        <Title Translatable=\"1\">Customers &lt;-&gt; Groups</Title>\n"
"        <NavBarName>Admin</NavBarName>\n"
"        <NavBarModule>\n"
"            <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>\n"
"            <Name Translatable=\"1\">Customer User &lt;-&gt; Groups</Name>\n"
"            <Description Translatable=\"1\">Link customer user to "
"groups.</Description>\n"
"            <Block>Customer</Block>\n"
"            <Prio>400</Prio>\n"
"        </NavBarModule>\n"
"    </FrontendModuleReg>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/config-mechanism.xml:305
msgid "Accessing Config Options at Runtime"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:307
msgid ""
"You can read and write (for one request) the config options via the core "
"module <literal>Kernel::Config</literal>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:310
msgid "If you want to read a config option:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:313
#, no-wrap
msgid ""
"my $ConfigOption = "
"$Kernel::OM->Get('Kernel::Config')->Get('Prefix::Option');\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/config-mechanism.xml:318
msgid ""
"If you want to change a config option at runtime and just for this one "
"request/process:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/config-mechanism.xml:321
#, no-wrap
msgid ""
"$Kernel::OM->Get('Kernel::Config')->Set(\n"
"    Key => 'Prefix::Option'\n"
"    Value => 'SomeNewValue',\n"
");\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-it-works/database-mechanism.xml:5
msgid "Database Mechanism"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/database-mechanism.xml:7
msgid "OTRS comes with a database layer that supports different databases."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/database-mechanism.xml:10 en/content/how-it-works/loader.xml:16
msgid "How it works"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/database-mechanism.xml:12
msgid ""
"The database layer (<literal>Kernel::System::DB</literal>) has two input "
"options: SQL and XML."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:15
msgid "SQL"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:17
msgid ""
"The SQL interface should be used for normal database actions (SELECT, "
"INSERT, UPDATE, ...). It can be used like a normal Perl DBI interface."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:21
msgid "INSERT/UPDATE/DELETE"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:22
#, no-wrap
msgid ""
"$Kernel::OM->Get('Kernel::System::DB')->Do(\n"
"    SQL=> \"INSERT INTO table (name, id) VALUES ('SomeName', 123)\",\n"
");\n"
"\n"
"$Kernel::OM->Get('Kernel::System::DB')->Do(\n"
"    SQL=> \"UPDATE table SET name = 'SomeName', id = 123\",\n"
");\n"
"\n"
"$Kernel::OM->Get('Kernel::System::DB')->Do(\n"
"    SQL=> \"DELETE FROM table WHERE id = 123\",\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:37
msgid "SELECT"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:38
#, no-wrap
msgid ""
"my $SQL = \"SELECT id FROM table WHERE tn = '123'\";\n"
"\n"
"$Kernel::OM->Get('Kernel::System::DB')->Prepare(SQL => $SQL, Limit => 15);\n"
"\n"
"while (my @Row = $Kernel::OM->Get('Kernel::System::DB')->FetchrowArray()) "
"{\n"
"    $Id = $Row[0];\n"
"}\n"
"return $Id;\n"
msgstr ""

#. type: Content of: <section><section><section><section><note><para>
#: en/content/how-it-works/database-mechanism.xml:50
msgid ""
"Take care to use <literal>Limit</literal> as param and not in the SQL string "
"because not all databases support LIMIT in SQL strings."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:54
#, no-wrap
msgid ""
"my $SQL = \"SELECT id FROM table WHERE tn = ? AND group = ?\";\n"
"\n"
"$Kernel::OM->Get('Kernel::System::DB')->Prepare(\n"
"    SQL   => $SQL,\n"
"    Limit => 15,\n"
"    Bind  => [ $Tn, $Group ],\n"
");\n"
"\n"
"while (my @Row = $Kernel::OM->Get('Kernel::System::DB')->FetchrowArray()) "
"{\n"
"    $Id = $Row[0];\n"
"}\n"
"return $Id;\n"
msgstr ""

#. type: Content of: <section><section><section><section><note><para>
#: en/content/how-it-works/database-mechanism.xml:70
msgid ""
"Use the <literal>Bind</literal> attribute where ever you can, especially for "
"long statements. If you use <literal>Bind</literal> you do not need the "
"function <code>Quote()</code>."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:76
msgid "QUOTE"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:78
msgid "String:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:81
#, no-wrap
msgid ""
"my $QuotedString = $Kernel::OM->Get('Kernel::System::DB')->Quote(\"It's a "
"problem!\");\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:86
msgid "Integer:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:89
#, no-wrap
msgid ""
"my $QuotedInteger = $Kernel::OM->Get('Kernel::System::DB')->Quote('123', "
"'Integer');\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:94
msgid "Number:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:97
#, no-wrap
msgid ""
"my $QuotedNumber = $Kernel::OM->Get('Kernel::System::DB')->Quote('21.35', "
"'Number');\n"
msgstr ""

#. type: Content of: <section><section><section><section><note><para>
#: en/content/how-it-works/database-mechanism.xml:103
msgid ""
"Please use the <literal>Bind</literal> attribute instead of "
"<code>Quote()</code> where ever you can."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:109
msgid "XML"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:111
msgid ""
"The XML interface should be used for INSERT, CREATE TABLE, DROP TABLE and "
"ALTER TABLE.  As this syntax is different from database to database, using "
"it makes sure that you write applications that can be used in all of them."
msgstr ""

#. type: Content of: <section><section><section><note><para>
#: en/content/how-it-works/database-mechanism.xml:117
msgid ""
"The <literal>&lt;Insert&gt;</literal> syntax has changed in >=2.2. Values "
"are now used in the tag content (not longer in an attribute)."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:121
msgid "INSERT"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:122
#, no-wrap
msgid ""
"<Insert Table=\"some_table\">\n"
"    <Data Key=\"id\">1</Data>\n"
"    <Data Key=\"description\" Type=\"Quote\">exploit</Data>\n"
"</Insert>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:130
msgid "CREATE TABLE"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:132
msgid ""
"Possible data types are: BIGINT, SMALLINT, INTEGER, VARCHAR "
"(Size=1-1000000), DATE (Format: yyyy-mm-dd hh:mm:ss) and LONGBLOB."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:134
#, no-wrap
msgid ""
"<TableCreate Name=\"calendar_event\">\n"
"    <Column Name=\"id\" Required=\"true\" PrimaryKey=\"true\" "
"AutoIncrement=\"true\" Type=\"BIGINT\"/>\n"
"    <Column Name=\"title\" Required=\"true\" Size=\"250\" "
"Type=\"VARCHAR\"/>\n"
"    <Column Name=\"content\" Required=\"false\" Size=\"250\" "
"Type=\"VARCHAR\"/>\n"
"    <Column Name=\"start_time\" Required=\"true\" Type=\"DATE\"/>\n"
"    <Column Name=\"end_time\" Required=\"true\" Type=\"DATE\"/>\n"
"    <Column Name=\"owner_id\" Required=\"true\" Type=\"INTEGER\"/>\n"
"    <Column Name=\"event_status\" Required=\"true\" Size=\"50\" "
"Type=\"VARCHAR\"/>\n"
"    <Index Name=\"calendar_event_title\">\n"
"        <IndexColumn Name=\"title\"/>\n"
"    </Index>\n"
"    <Unique Name=\"calendar_event_title\">\n"
"        <UniqueColumn Name=\"title\"/>\n"
"    </Unique>\n"
"    <ForeignKey ForeignTable=\"users\">\n"
"        <Reference Local=\"owner_id\" Foreign=\"id\"/>\n"
"    </ForeignKey>\n"
"</TableCreate>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:156
msgid "DROP TABLE"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:157
#, no-wrap
msgid "<TableDrop Name=\"calendar_event\"/>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:162
msgid "ALTER TABLE"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:164
msgid "The following shows an example of add, change and drop columns."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:166
#, no-wrap
msgid ""
"<TableAlter Name=\"calendar_event\">\n"
"    <ColumnAdd Name=\"test_name\" Type=\"varchar\" Size=\"20\" "
"Required=\"true\"/>\n"
"\n"
"    <ColumnChange NameOld=\"test_name\" NameNew=\"test_title\" "
"Type=\"varchar\" Size=\"30\" Required=\"true\"/>\n"
"\n"
"    <ColumnChange NameOld=\"test_title\" NameNew=\"test_title\" "
"Type=\"varchar\" Size=\"100\" Required=\"false\"/>\n"
"\n"
"    <ColumnDrop Name=\"test_title\"/>\n"
"\n"
"    <IndexCreate Name=\"index_test3\">\n"
"        <IndexColumn Name=\"test3\"/>\n"
"    </IndexCreate>\n"
"\n"
"    <IndexDrop Name=\"index_test3\"/>\n"
"\n"
"    <UniqueCreate Name=\"uniq_test3\">\n"
"        <UniqueColumn Name=\"test3\"/>\n"
"    </UniqueCreate>\n"
"\n"
"    <UniqueDrop Name=\"uniq_test3\"/>\n"
"</TableAlter>\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/database-mechanism.xml:190
msgid "The next shows an example how to rename a table."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:192
#, no-wrap
msgid "<TableAlter NameOld=\"calendar_event\" NameNew=\"calendar_event_new\"/>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/database-mechanism.xml:197
msgid "Code to process XML"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/database-mechanism.xml:198
#, no-wrap
msgid ""
"my @XMLARRAY = @{$Self->ParseXML(String => $XML)};\n"
"\n"
"my @SQL = $Kernel::OM->Get('Kernel::System::DB')->SQLProcessor(\n"
"    Database => \\@XMLARRAY,\n"
");\n"
"push(@SQL, $Kernel::OM->Get('Kernel::System::DB')->SQLProcessorPost());\n"
"\n"
"for (@SQL) {\n"
"    $Kernel::OM->Get('Kernel::System::DB')->Do(SQL => $_);\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/database-mechanism.xml:214
msgid "Database Drivers"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/database-mechanism.xml:216
msgid ""
"The database drivers are located under "
"<filename>$OTRS_HOME/Kernel/System/DB/*.pm</filename>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/database-mechanism.xml:220
msgid "Supported Databases"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/database-mechanism.xml:224
msgid "MySQL"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/database-mechanism.xml:227
msgid "PostgreSQL"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/database-mechanism.xml:230
msgid "Oracle"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/database-mechanism.xml:233
msgid ""
"Microsoft SQL Server (only for external database connections, not as OTRS "
"database)"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-it-works/loader.xml:5
msgid "The CSS and JavaScript \"Loader\""
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/loader.xml:7
msgid ""
"Starting with OTRS 3.0, the CSS and JavaScript code in OTRS grew to a large "
"amount. To be able to satisfy both development concerns (good "
"maintainability by a large number of separate files) and performance issues "
"(making few HTTP requests and serving minified content without unneccessary "
"whitespace and documentation)  had to be addressed. To achieve these goals, "
"the Loader was invented."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:18
msgid "To put it simple, the Loader"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/loader.xml:22
msgid ""
"determines for each request precisely which CSS and JavaScript files are "
"needed at the client side by the current application module"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/loader.xml:29
msgid "collects all the relevant data"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/loader.xml:34
msgid "minifies the data, removing unnecessary whitespace and documentation"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/loader.xml:39
msgid ""
"serves it to the client in only a few HTTP requests instead of many "
"individual ones, allowing the client to cache these snippets in the browser "
"cache"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/loader.xml:45
msgid ""
"performs these tasks in a highly performing way, utilizing the caching "
"mechanisms of OTRS."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:52
msgid ""
"Of course, there is a little bit more detailed involved, but this should "
"suffice as a first overview."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/loader.xml:58
msgid "Basic Operation"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:60
msgid ""
"With the configuration settings <literal>Loader::Enabled::CSS</literal> and "
"<literal>Loader::Enabled::JavaScript</literal>, the loader can be turned on "
"and off for CSS and JavaScript, respectively (it is on by default)."
msgstr ""

#. type: Content of: <section><section><warning><para>
#: en/content/how-it-works/loader.xml:66
msgid ""
"Because of rendering problems in Internet Explorer, the Loader cannot be "
"turned off for CSS files for this client browser (config setting will be "
"overridden).  Up to version 8, Internet Explorer cannot handle more than 32 "
"CSS files on a page."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:72
msgid ""
"To learn about how the Loader works, please turn it off in your OTRS "
"installation with the aforementioned configuration settings. Now look at the "
"source code of the application module that you are currently using in this "
"OTRS system (after a reload, of course). You will see that there are many "
"CSS files loaded in the <literal>&lt;head&gt;</literal> section of the page, "
"and many JavaScript files at the bottom of the page, just before the closing "
"<literal>&lt;/body&gt;</literal> element."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:81
msgid ""
"Having the content like this in many individual files with a readable "
"formatting makes the development much easier, and even possible at "
"all. However, this has the disadvantage of a large number of HTTP requests "
"(network latency has a big effect)  and unnecessary content (whitespace and "
"documentation) which needs to be transferred to the client."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:88
msgid ""
"The Loader solves this problem by performing the steps outlined in the short "
"description above. Please turn on the Loader again and reload your page "
"now. Now you can see that there are only very few CSS and JavaScript tags in "
"the HTML code, like this:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:93
#, no-wrap
msgid ""
"<script type=\"text/javascript\" "
"src=\"/otrs30-dev-web/js/js-cache/CommonJS_d16010491cbd4faaaeb740136a8ecbfd.js\"></script>\n"
"\n"
"<script type=\"text/javascript\" "
"src=\"/otrs30-dev-web/js/js-cache/ModuleJS_b54ba9c085577ac48745f6849978907c.js\"></script>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:100
msgid ""
"What just happened? During the original request generating the HTML code for "
"this page, the Loader generated these two files (or took them from the "
"cache) and put the shown <literal>&lt;script&gt;</literal> tags on the page "
"which link to these files, instead of linking to all relevant JavaScript "
"files separately (as you saw it without the loader being active)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:107
msgid "The CSS section looks a little more complicated:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:110
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\" "
"href=\"/otrs30-dev-web/skins/Agent/default/css-cache/CommonCSS_00753c78c9be7a634c70e914486bfbad.css\" "
"/>\n"
"\n"
"<!--[if IE 7]>\n"
"    <link rel=\"stylesheet\" type=\"text/css\" "
"href=\"/otrs30-dev-web/skins/Agent/default/css-cache/CommonCSS_IE7_59394a0516ce2e7359c255a06835d31f.css\" "
"/>\n"
"<![endif]-->\n"
"\n"
"<!--[if IE 8]>\n"
"    <link rel=\"stylesheet\" type=\"text/css\" "
"href=\"/otrs30-dev-web/skins/Agent/default/css-cache/CommonCSS_IE8_ff58bd010ef0169703062b6001b13ca9.css\" "
"/>\n"
"<![endif]-->\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:123
msgid ""
"The reason is that Internet Explorer 7 and 8 need special treatment in "
"addition to the default CSS because of their lacking support of web standard "
"technologies.  So we have some normal CSS that is loaded in all browsers, "
"and some special CSS that is inside of so-called \"conditional comments\" "
"which cause it to be loaded <emphasis>only</emphasis> by Internet Explorer "
"7/8. All other browsers will ignore it."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:130
msgid ""
"Now we have outlined how the loader works. Let's look at how you can utilize "
"that in your own OTRS extensions by adding configuration data to the loader, "
"telling it to load additional or alternative CSS or JavaScript content."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/loader.xml:137
msgid "Configuring the Loader: JavaScript"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:139
msgid ""
"To be able to operate correctly, the Loader needs to know which content it "
"has to load for a particular OTRS application module. First, it will look "
"for JavaScript files which <emphasis>always</emphasis> have to be loaded, "
"and then it looks for special files which are only relevant for the current "
"application module."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/loader.xml:145
msgid "Common JavaScript"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:147
msgid ""
"The list of JavaScript files to be loaded is configured in the configuration "
"settings <literal>Loader::Agent::CommonJS</literal> (for the agent "
"interface) and <literal>Loader::Customer::CommonJS</literal> (for the "
"customer interface)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:152
msgid ""
"These settings are designed as hashes, so that OTRS extensions can add their "
"own hash keys for additional content to be loaded. Let's look at an example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:156
#, no-wrap
msgid ""
"<ConfigItem Name=\"Loader::Agent::CommonJS###000-Framework\" Required=\"1\" "
"Valid=\"1\">\n"
"    <Description Translatable=\"1\">List of JS files to always be loaded for "
"the agent interface.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Core::Web</SubGroup>\n"
"    <Setting>\n"
"        <Array>\n"
"            <Item>thirdparty/json/json2.js</Item>\n"
"            <Item>thirdparty/jquery-1.4.4/jquery.js</Item>\n"
"\n"
"            ...\n"
"\n"
"            <Item>Core.App.js</Item>\n"
"            <Item>Core.Agent.js</Item>\n"
"            <Item>Core.Agent.Search.js</Item>\n"
"        </Array>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:177
msgid ""
"This is the list of JavaScript files which always need to be loaded for the "
"agent interface of OTRS."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:181
msgid ""
"To add new content which is supposed to be loaded always in the agent "
"interface, just add an XML configuration file with another hash entry:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:185
#, no-wrap
msgid ""
"<ConfigItem Name=\"Loader::Agent::CommonJS###100-CustomPackage\" "
"Required=\"0\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">List of JS files to always be loaded for "
"the agent interface for package \"CustomPackage\".</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Core::Web</SubGroup>\n"
"    <Setting>\n"
"        <Array>\n"
"            <Item>CustomPackage.App.js</Item>\n"
"        </Array>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:199
msgid "Simple, isn't it?"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/loader.xml:204
msgid "Module-Specific JavaScript"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:206
msgid ""
"Not all JavaScript is usable for all application modules of OTRS.  Therefore "
"it is possible to specify module-specific JavaScript files.  Whenever a "
"certain module is used (such as <literal>AgentDashboard</literal>), the "
"module-specific JavaScript for this module will also be loaded.  The "
"configuration is done in the frontend module registration in the XML "
"configurations.  Again, an example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:215
#, no-wrap
msgid ""
"<ConfigItem Name=\"Frontend::Module###AgentDashboard\" Required=\"0\" "
"Valid=\"1\">\n"
"    <Description Translatable=\"1\">Frontend module registration for the "
"agent interface.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Frontend::Agent::ModuleRegistration</SubGroup>\n"
"    <Setting>\n"
"        <FrontendModuleReg>\n"
"            <Description>Agent Dashboard</Description>\n"
"            <Title></Title>\n"
"            <NavBarName>Dashboard</NavBarName>\n"
"            <NavBar>\n"
"                <Description Translatable=\"1\"></Description>\n"
"                <Name Translatable=\"1\">Dashboard</Name>\n"
"                <Link>Action=AgentDashboard</Link>\n"
"                <NavBar>Dashboard</NavBar>\n"
"                <Type>Menu</Type>\n"
"                <Description Translatable=\"1\"></Description>\n"
"                <Block>ItemArea</Block>\n"
"                <AccessKey>d</AccessKey>\n"
"                <Prio>50</Prio>\n"
"            </NavBar>\n"
"            <Loader>\n"
"                <JavaScript>thirdparty/flot/excanvas.js</JavaScript>\n"
"                <JavaScript>thirdparty/flot/jquery.flot.js</JavaScript>\n"
"                <JavaScript>Core.UI.Chart.js</JavaScript>\n"
"                <JavaScript>Core.UI.DnD.js</JavaScript>\n"
"                <JavaScript>Core.Agent.Dashboard.js</JavaScript>\n"
"            </Loader>\n"
"        </FrontendModuleReg>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:249
msgid ""
"It is possible to put a <literal>&lt;Loader&gt;</literal> tag in the "
"frontend module registrations which may contain "
"<literal>&lt;JavaScript&gt;</literal> tags, one for each file that is "
"supposed to be loaded for this application module."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:255
msgid ""
"Now you have all information you need to configure the way the Loader "
"handles JavaScript code."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:259
msgid ""
"There is one special case: for <literal>ToolbarModule</literal>s, you can "
"also add custom JavaScript files. Just add a <literal>JavaScript</literal> "
"attribute to the configuration like this:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:264
#, no-wrap
msgid ""
"<ConfigItem Name=\"Frontend::ToolBarModule###410-Ticket::AgentTicketEmail\" "
"Required=\"0\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">Toolbar Item for a "
"shortcut.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::Agent::ToolBarModule</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"Module\">Kernel::Output::HTML::ToolBarLink</Item>\n"
"            <Item Key=\"Name\">New email ticket</Item>\n"
"            <Item Key=\"Priority\">1009999</Item>\n"
"            <Item Key=\"Link\">Action=AgentTicketEmail</Item>\n"
"            <Item Key=\"Action\">AgentTicketEmail</Item>\n"
"            <Item Key=\"AccessKey\">l</Item>\n"
"            <Item Key=\"CssClass\">EmailTicket</Item>\n"
"            <Item "
"Key=\"JavaScript\">OTRS.Agent.CustomToolbarModule.js</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/loader.xml:288
msgid "Configuring the Loader: CSS"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/loader.xml:290
msgid ""
"The loader handles CSS files very similar to JavaScript files, as described "
"in the previous <link linkend=\"loader-javascript\">section</link>, and "
"extending the settings works in the same way too."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/loader.xml:296
msgid "Common CSS"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:298
msgid ""
"The way common CSS is handled is very similar to the way <link "
"linkend=\"loader-common-javascript\">common JavaScript</link> is "
"loaded. Here, the configuration settings are called "
"<literal>Loader::Agent::CommonCSS</literal> and "
"<literal>Loader::Customer::CommonCSS</literal>, respectively."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:305
msgid ""
"However, as we already noted above, Internet Explorer 7 and 8 (and for the "
"customer interface also 6) need special treatment.  That's why there are "
"special configuration settings for them, to specify common CSS which should "
"only be loaded in these browsers.  The respective settings are "
"<literal>Loader::Agent::CommonCSS::IE7</literal>, "
"<literal>Loader::Agent::CommonCSS::IE8</literal>, "
"<literal>Loader::Customer::CommonCSS::IE6</literal>, "
"<literal>Loader::Customer::CommonCSS::IE7</literal> and "
"<literal>Loader::Customer::CommonCSS::IE8</literal>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:317
msgid "An example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:320
#, no-wrap
msgid ""
"<ConfigItem Name=\"Loader::Agent::CommonCSS::IE8###000-Framework\" "
"Required=\"1\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">List of IE8-specific CSS files to always "
"be loaded for the agent interface.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Core::Web</SubGroup>\n"
"    <Setting>\n"
"        <Array>\n"
"            <Item>Core.OverviewSmall.IE8.css</Item>\n"
"        </Array>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:334
msgid ""
"This is the list of common CSS files for the agent interface which should "
"only be loaded in Internet Explorer 8."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/loader.xml:340
msgid "Module-Specific CSS"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:342
msgid ""
"Module-specific CSS is handled very similar to the way <link "
"linkend=\"loader-module-javascript\">module-specific JavaScript</link> is "
"handled. It is also configured in the frontend module "
"registrations. Example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:347
#, no-wrap
msgid ""
"<ConfigItem Name=\"Frontend::Module###Admin\" Required=\"0\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">Frontend module registration for the "
"agent interface.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Frontend::Admin::ModuleRegistration</SubGroup>\n"
"    <Setting>\n"
"        <FrontendModuleReg>\n"
"            <Group>admin</Group>\n"
"            <Description>Admin-Area</Description>\n"
"            <Title></Title>\n"
"            <NavBarName>Admin</NavBarName>\n"
"            <NavBar>\n"
"                <Type>Menu</Type>\n"
"                <Description Translatable=\"1\"></Description>\n"
"                <Block>ItemArea</Block>\n"
"                <Name Translatable=\"1\">Admin</Name>\n"
"                <Link>Action=Admin</Link>\n"
"                <NavBar>Admin</NavBar>\n"
"                <AccessKey>a</AccessKey>\n"
"                <Prio>10000</Prio>\n"
"            </NavBar>\n"
"            <NavBarModule>\n"
"                <Module>Kernel::Output::HTML::NavBarModuleAdmin</Module>\n"
"            </NavBarModule>\n"
"            <Loader>\n"
"                <CSS>Core.Agent.Admin.css</CSS>\n"
"                <CSS_IE7>Core.Agent.AdminIE7.css</CSS_IE7>\n"
"                <JavaScript>Core.Agent.Admin.SysConfig.js</JavaScript>\n"
"            </Loader>\n"
"        </FrontendModuleReg>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:382
msgid ""
"Here we have a module (the admin overview page of the agent interface)  "
"which has special JavaScript, normal CSS (tagname "
"<literal>&lt;CSS&gt;</literal>) and special CSS for Internet Explorer 7 "
"(tagname <literal>&lt;CSS_IE7&gt;</literal>).  All of these need to be "
"loaded in addition to the common JavaScript and CSS defined for the agent "
"interface."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:390
msgid ""
"It is also possible to specify module-specific CSS for Internet Explorer 8 "
"(tagname <literal>&lt;CSS_IE8&gt;</literal>) and, in the case of the "
"customer interface, for Internet Explorer 6 (tagname "
"<literal>&lt;CSS_IE6&gt;</literal>)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/loader.xml:395
msgid ""
"There is one special case: for <literal>ToolbarModule</literal>s, you can "
"also add custom CSS files. Just add a <literal>CSS</literal>, "
"<literal>CSS_IE7</literal> or <literal>CSS_IE8</literal> attribute to the "
"configuration like this:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/loader.xml:400
#, no-wrap
msgid ""
"<ConfigItem Name=\"Frontend::ToolBarModule###410-Ticket::AgentTicketEmail\" "
"Required=\"0\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">Toolbar Item for a "
"shortcut.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::Agent::ToolBarModule</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"Module\">Kernel::Output::HTML::ToolBarLink</Item>\n"
"            <Item Key=\"Name\">New email ticket</Item>\n"
"            <Item Key=\"Priority\">1009999</Item>\n"
"            <Item Key=\"Link\">Action=AgentTicketEmail</Item>\n"
"            <Item Key=\"Action\">AgentTicketEmail</Item>\n"
"            <Item Key=\"AccessKey\">l</Item>\n"
"            <Item Key=\"CssClass\">EmailTicket</Item>\n"
"            <Item Key=\"CSS\">OTRS.Agent.CustomToolbarModule.css</Item>\n"
"            <Item "
"Key=\"CSS_IE7\">OTRS.Agent.CustomToolbarModule.IE7.css</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-it-works/log-mechanism.xml:5
msgid "Log Mechanism"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/log-mechanism.xml:7
msgid ""
"OTRS comes with a log backend that can be used for application logging and "
"debugging."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/log-mechanism.xml:10
msgid ""
"The <literal>Log</literal> object can be accessed and used via the "
"<literal>ObjectManager</literal> like this:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/log-mechanism.xml:13
#, no-wrap
msgid ""
"$Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"    Priority => 'error',\n"
"    Message => 'Need something!',\n"
");\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-it-works/skins.xml:5
msgid "Skins"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/skins.xml:7
msgid "Since OTRS 3.0, the visual appearance of OTRS is controlled by \"skins\"."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/skins.xml:10
msgid ""
"A skin is a set of CSS and image files, which together control how the GUI "
"is presented to the user. Skins do not change the HTML content that is "
"generated by OTRS (this is what \"Themes\" do), but they control how it is "
"displayed. With the help of modern CSS standards it is possible to change "
"the display thoroughly (e.g.  repositioning parts of dialogs, hiding "
"elements, ...)."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/skins.xml:18
msgid "Skin Basics"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:20
msgid ""
"All skins are in "
"<filename>$OTRS_HOME/var/httpd/htdocs/skins/$SKIN_TYPE/$SKIN_NAME</filename>.  "
"There are two types of skins: agent and customer skins."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:24
msgid ""
"Each of the agents can select individually, which of the installed agent "
"skins they want to \"wear\"."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:27
msgid ""
"For the customer interface, a skin has to be selected globally with the "
"config setting <literal>Loader::Customer::SelectedSkin</literal>. All "
"customers will see this skin."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/skins.xml:33
msgid "How skins are loaded"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:35
msgid ""
"It is important to note that the \"default\" skin will "
"<emphasis>always</emphasis> be loaded <emphasis>first</emphasis>.  If the "
"agent selected another skin than the \"default\" one, then the other one "
"will be loaded only <emphasis>after</emphasis> the default skin. By "
"\"loading\" here we mean that OTRS will put tags into the HTML content which "
"cause the CSS files to be loaded by the browser. Let's see an example of "
"this:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:41
#, no-wrap
msgid ""
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css-cache/CommonCSS_179376764084443c181048401ae0e2ad.css\" "
"/>\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/ivory/css-cache/CommonCSS_e0783e0c2445ad9cc59c35d6e4629684.css\" "
"/>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:47
msgid ""
"Here it can clearly be seen that the default skin is loaded first, and then "
"the custom skin specified by the agent. In this example, we see the result "
"of the activated loader (<literal>Loader::Enabled</literal> set to 1), which "
"gathers all CSS files, concatenates and minifies them and serves them as one "
"chunk to the browser. This saves bandwidth and also reduces the number of "
"HTTP requests. Let's see the same example with the Loader turned off:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:54
#, no-wrap
msgid ""
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Reset.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Default.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Header.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.OverviewControl.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.OverviewSmall.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.OverviewMedium.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.OverviewLarge.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Footer.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Grid.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Form.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Table.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Widget.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.WidgetMenu.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.TicketDetail.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Tooltip.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Dialog.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Print.css\" />\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Agent.CustomerUser.GoogleMaps.css\" "
"/>\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/default/css/Core.Agent.CustomerUser.OpenTicket.css\" "
"/>\n"
"<link rel=\"stylesheet\" "
"href=\"/otrs-web/skins/Agent/ivory/css/Core.Dialog.css\" />\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:78
msgid "Here we can better see the individual files that come from the skins."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:81
msgid ""
"There are different types of CSS files: common files which must always be "
"loaded, and \"module-specific\" files which are only loaded for special "
"modules within the OTRS framework."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:86
msgid ""
"In addition, it is possible to specify CSS files which only must be loaded "
"on IE7 or IE8 (in the case of the customer interface, also IE6). This is "
"unfortunate, but it was not possible to develop a modern GUI on these "
"browsers without having special CSS for them."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:91
msgid ""
"For details regarding the CSS file types, please see the <link "
"linkend=\"loader\">section on the Loader</link>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:94
msgid ""
"For each HTML page generation, the loader will first take all configured CSS "
"files from the default skin, and then for each file look if it is also "
"available in a custom skin (if a custom skin is selected) and load them "
"after the default files."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:99
msgid ""
"That means a) that CSS files in custom skins need to have the same names as "
"in the default skins, and b) that a custom skin does not need to have all "
"files of the default skin. That is the big advantage of loading the default "
"skin first: a custom skin has all default CSS rules present and only needs "
"to change those which should result in a different display. That can often "
"be done in a single file, like in the example above."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:106
msgid ""
"Another effect of this is that you need to be careful to overwrite all "
"default CSS rules in your custom skins that you want to change. Let's see an "
"example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:110
#, no-wrap
msgid ""
".Header h1 {\n"
"    font-weight: bold;\n"
"    color: #000;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:118
msgid ""
"This defines special headings inside of the <literal>.Header</literal> "
"element as bold, black text. Now if you want to change that in your skin to "
"another color and normal text, it is not enough to write this:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:122
#, no-wrap
msgid ""
".Header h1 {\n"
"    color: #F00;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:129
msgid ""
"Because the original rule for <literal>font-weight</literal> still "
"applies. You need to override it explicitly:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:132
#, no-wrap
msgid ""
".Header h1 {\n"
"    font-weight: normal;\n"
"    color: #F00;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/skins.xml:142
msgid "Creating a New Skin"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:144
msgid ""
"In this section, we will be creating a new agent skin which replaces the "
"default OTRS background color (white) with a custom company color (light "
"grey) and the default logo by a custome one. Also we will configure that "
"skin to be the one which all agents will see by default."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:149
msgid "There are only three simple steps we need to take to achieve this goal:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/skins.xml:151
msgid "create the skin files"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/skins.xml:152
msgid "configure the new logo and"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-it-works/skins.xml:153
msgid "make the skin known to the OTRS system."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:157
msgid ""
"Let's start by creating the files needed for our new skin. First of all, we "
"need to create a new folder for this skin (we'll call it "
"<literal>custom</literal>). This folder will be "
"<filename>$OTRS_HOME/var/httpd/htdocs/skins/Agent/custom</filename>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:162
msgid ""
"In there, we need to place the new CSS file in a new directory "
"<filename>css</filename> which defines the new skin's appearance. We'll call "
"it <filename>Core.Default.css</filename> (remember that it must have the "
"same name as one of the files in the \"default\" skin). This is the code "
"needed for the CSS file:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:167
#, no-wrap
msgid ""
"body {\n"
"    background-color: #c0c0c0; /* not very beautiful but it meets our "
"purpose */\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:174
msgid ""
"Now follows the second step, adding a new logo and making the new skin known "
"to the OTRS system. For this, we first need to place our custom logo "
"(e.g. <filename>logo.png</filename>) in a new directory "
"(e.g. <filename>img</filename>) in our skin directory.  Then we need to "
"create a new config file "
"<filename>$OTRS_HOME/Kernel/Config/Files/CustomSkin.xml</filename>, which "
"will contain the needed settings as follows:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:180
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n"
"<otrs_config version=\"1.0\" init=\"Changes\">\n"
"    <ConfigItem Name=\"AgentLogo\" Required=\"0\" Valid=\"1\">\n"
"        <Description Translatable=\"1\">The logo shown in the header of the "
"agent interface. The URL to the image must be a relative URL to the skin "
"image directory.</Description>\n"
"        <Group>Framework</Group>\n"
"        <SubGroup>Frontend::Agent</SubGroup>\n"
"        <Setting>\n"
"            <Hash>\n"
"                <Item Key=\"URL\">skins/Agent/custom/img/logo.png</Item>\n"
"                <Item Key=\"StyleTop\">13px</Item>\n"
"                <Item Key=\"StyleRight\">75px</Item>\n"
"                <Item Key=\"StyleHeight\">67px</Item>\n"
"                <Item Key=\"StyleWidth\">244px</Item>\n"
"            </Hash>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
"    <ConfigItem Name=\"Loader::Agent::Skin###100-custom\" Required=\"0\" "
"Valid=\"1\">\n"
"        <Description Translatable=\"1\">Custom skin for the development "
"manual.</Description>\n"
"        <Group>Framework</Group>\n"
"        <SubGroup>Frontend::Agent</SubGroup>\n"
"        <Setting>\n"
"            <Hash>\n"
"                <Item Key=\"InternalName\">custom</Item>\n"
"                <Item Key=\"VisibleName\">Custom</Item>\n"
"                <Item Key=\"Description\">Custom skin for the development "
"manual.</Item>\n"
"                <Item Key=\"HomePage\">www.yourcompany.com</Item>\n"
"            </Hash>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
"</otrs_config>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:214
msgid ""
"To make this configuration active, we need to navigate to the SysConfig "
"module in the admin area of OTRS (alternatively, you can run the script "
"<filename>$OTRS_HOME/bin/otrs.Console.pl "
"Maint::Config::Rebuild</filename>).  This will regenerate the Perl cache of "
"the XML configuration files, so that our new skin is now known and can be "
"selected in the system. To make it the default skin that new agents see "
"before they made their own skin selection, edit the SysConfig setting "
"<literal>Loader::Agent::DefaultSelectedSkin</literal> and set it to "
"\"custom\"."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/skins.xml:221
msgid ""
"In conclusion: to create a new skin in OTRS, we had to place the new logo "
"file, and create one CSS and one XML file, resulting in three new files:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/skins.xml:225
#, no-wrap
msgid ""
"$OTRS_HOME/Kernel/Config/Files/CustomSkin.xml\n"
"$OTRS_HOME/var/httpd/htdocs/skins/Agent/custom/img/custom-logo.png\n"
"$OTRS_HOME/var/httpd/htdocs/skins/Agent/custom/css/Core.Header.css\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-it-works/templates.xml:5
msgid "Templating Mechanism"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/templates.xml:7
msgid ""
"Internally, OTRS uses a templating mechanism to dynamically generate its "
"HTML pages (and other content), while keeping the program logic (Perl) and "
"the presentation (HTML) separate. Typically, a frontend module will use an "
"own template file, pass some data to it and return the rendered result to "
"the user."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/templates.xml:14
msgid ""
"The template files are located at: "
"<filename>$OTRS_HOME/Kernel/Output/HTML/Standard/*.tt</filename>"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/templates.xml:18
msgid ""
"OTRS relies on <ulink url=\"http://www.template-toolkit.org/\">the "
"Template::Toolkit rendering engine</ulink>. The full Template::Toolkit "
"syntax can be used in OTRS templates.  This section describes some example "
"use cases and OTRS extensions to the Template::Toolkit syntax."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/templates.xml:25
msgid "Template Commands"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/templates.xml:28
msgid "Inserting dynamic data"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/templates.xml:30
msgid ""
"In templates, dynamic data must be inserted, quoted etc. This section lists "
"the relevant commands to do that."
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-it-works/templates.xml:35 en/content/how-to-publish-otrs-extensions/package-porting.xml:501
msgid "<literal>[% Data.Name %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:37
msgid ""
"If data parameters are given to the templates by the application module, "
"these data can be output to the template. <literal>[% Data.Name %]</literal> "
"is the most simple, but also most dangerous one. It will insert the data "
"parameter whose name is <literal>Name</literal> into the template as it is, "
"without further processing."
msgstr ""

#. type: Content of: <section><section><section><section><warning><para>
#: en/content/how-it-works/templates.xml:44 en/content/how-it-works/templates.xml:157
msgid ""
"Because of the missing HTML quoting, this can result in security problems.  "
"Never output data that was input by a user without quoting in HTML context.  "
"The user could - for example - just insert a "
"<literal>&lt;script&gt;</literal> tag, and it would be output on the HTML "
"page generated by OTRS."
msgstr ""

#. type: Content of: <section><section><section><section><warning><para>
#: en/content/how-it-works/templates.xml:50
msgid ""
"Whenever possible, use <link linkend=\"data-html\"><literal>[% Data.Name | "
"html %]</literal></link> (in HTML) or <link linkend=\"data-uri\"><literal>[% "
"Data.Name | uri %]</literal></link> (in Links) instead."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:55
msgid ""
"Example: Whenever we generate HTML in the application, we need to output it "
"to the template without HTML quoting, like <literal>&lt;select&gt;</literal> "
"elements, which are generated by the function "
"<literal>Layout::BuildSelection()</literal> in OTRS."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:60
#, no-wrap
msgid ""
"<label for=\"Dropdown\">Example Dropdown</label>\n"
"[% Data.DropdownString\"]\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:66
msgid ""
"If you have data entries with complex names containing special characters, "
"you cannot use the dot (<literal>.</literal>) notation to access this "
"data. Use <literal>item()</literal> instead: <literal>[% "
"Data.item('Complex-name') %]</literal>."
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-it-works/templates.xml:73 en/content/how-to-publish-otrs-extensions/package-porting.xml:509
msgid "<literal>[% Data.Name | html %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:75
msgid ""
"This command has the same function as <link linkend=\"data-raw\">the "
"previous one</link>, but it performs HTML quoting on the data as it is "
"inserted to the template."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:79
#, no-wrap
msgid "The name of the author is [% Data.Name | html %].\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:84
msgid ""
"It's also possible specify a maximum length for the value.  If, for example, "
"you just want to show 8 characters of a variable (result will be "
"\"SomeName[...]\"), use the following:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:89
#, no-wrap
msgid ""
"The first 20 characters of the author's name: [% Data.Name | truncate(20) | "
"html %].\n"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-it-works/templates.xml:96 en/content/how-to-publish-otrs-extensions/package-porting.xml:517
msgid "<literal>[% Data.Name | uri %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:98
msgid ""
"This command performs <ulink "
"url=\"http://en.wikipedia.org/wiki/Percent-encoding\">URL encoding</ulink> "
"on the data as it is inserted to the template. This should be used to output "
"single parameter names or values of URLs, to prevent security problems.  It "
"cannot be used for complete URLs because it will also mask "
"<literal>=</literal>, for example."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:106
#, no-wrap
msgid ""
"<a href=\"[% Env(\"Baselink\") %];Location=[% Data.File | uri %]\">[% "
"Data.File | truncate(110) | html %]</a>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:113
msgid "<literal>[% Data.Name | JSON %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:115
msgid ""
"This command outputs a string or another data structure as a JavaScript JSON "
"string."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:118
#, no-wrap
msgid "var Text = [% Data.Text | JSON %];\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:123
msgid ""
"Please note that the filter notation will only work for simple strings.  To "
"output complex data as JSON, please use it as a function:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:127
#, no-wrap
msgid "var TreeData = [% JSON(Data.TreeData) %];\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:134
msgid "<literal>[% Env() %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:136
msgid ""
"Inserts environment variables provided by the "
"<literal>LayoutObject</literal>. Some examples:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:139
#, no-wrap
msgid ""
"The current user name is: [% Env(\"UserFullname\") %]\n"
"\n"
"Some other common predefined variables are:\n"
"\n"
"[% Env(\"Action\") %] --> the current action\n"
"[% Env(\"Baselink\") %] --> the baselink --> index.pl?SessionID=...\n"
"[% Env(\"CGIHandle\") %] --> the current CGI handle e. g.  index.pl\n"
"[% Env(\"SessionID\") %] --> the current session id\n"
"[% Env(\"Time\") %] --> the current time e. g.  Thu Dec 27 16:00:55 2001\n"
"[% Env(\"UserFullname\") %] --> e. g. Dirk Seiffert\n"
"[% Env(\"UserIsGroup[admin]\") %] = Yes\n"
"[% Env(\"UserIsGroup[users]\") %] = Yes --> user groups (useful for own "
"links)\n"
"[% Env(\"UserLogin\") %] --> e. g. mgg@x11.org\n"
msgstr ""

#. type: Content of: <section><section><section><section><warning><para>
#: en/content/how-it-works/templates.xml:163 en/content/how-it-works/templates.xml:199
msgid "Don't forget to add the <literal>| html</literal> filter where appropriate."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:169
msgid "<literal>[% Config() %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:171
msgid ""
"Inserts config variables into the template. Let's see an example "
"<filename>Kernel/Config.pm</filename>:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:174
#, no-wrap
msgid ""
"[Kernel/Config.pm]\n"
"    # FQDN\n"
"    # (Full qualified domain name of your system.)\n"
"    $Self->{FQDN} = 'otrs.example.com';\n"
"    # AdminEmail\n"
"    # (Email of the system admin.)\n"
"    $Self->{AdminEmail} = 'admin@example.com';\n"
"[...]\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:186
msgid "To output values from it in the template, use:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:189
#, no-wrap
msgid ""
"The hostname is '$Config{\"FQDN\"}'\n"
"The admin email address is '[% Config(\"AdminEmail\") %]'\n"
msgstr ""

#. type: Content of: <section><section><section><section><warning><para>
#: en/content/how-it-works/templates.xml:196
msgid "Because of the missing HTML quoting, this can result in security problems."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/templates.xml:207
msgid "Localization Commands"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:209
msgid "<literal>[% Translate() %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:211
msgid ""
"Translates a string into the current user's selected language.  If no "
"translation is found, the original string will be used."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:215
#, no-wrap
msgid "Translate this text: [% Translate(\"Help\") | html %]\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:220
msgid ""
"You can also translate dynamic data by using <literal>Translate</literal> as "
"a filter:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:224
#, no-wrap
msgid "Translate data from the application: [% Data.Type | Translate | html %]\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:229
msgid ""
"You can also specify one or more parameters (<literal>%s</literal>) inside "
"of the string which should be replaced with dynamic data:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:233
#, no-wrap
msgid ""
"Translate this text and insert the given data: [% Translate(\"Change %s "
"settings\", Data.Type) | html %]\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:238
msgid ""
"Strings in JavaScript can be translated and processed with <link "
"linkend=\"data-json\">the JSON filter</link>."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:242
#, no-wrap
msgid "var Text = [% Translate(\"Change %s settings\", Data.Type) | JSON %];\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:249
msgid "<literal>[% Localize() %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:251
msgid ""
"Inserts a localized date/time stamp (including a possible time zone "
"difference of the current agent)."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:255
msgid ""
"In different cultural areas, different convention for date and time "
"formatting are used. For example, what is the 01.02.2010 in Germany, would "
"be 02/01/2010 in the USA. <literal>[% Localize() %]</literal> abstracts this "
"away from the templates. Let's see an example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:261
#, no-wrap
msgid ""
"[% Data.CreateTime ǀ Localize(\"TimeLong\") %]\n"
"# Result for US English locale:\n"
"06/09/2010 15:45:41\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:268
msgid ""
"First, the data is inserted from the application module with "
"<literal>Data</literal>.  Here always an ISO UTC timestamp (2010-06-09 "
"15:45:41) must be passed as data to <literal>[% Localize() "
"%]</literal>. Then it will be output it according to the date/time "
"definition of the current locale."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:274
msgid ""
"The data passed to <literal>[% Localize() %]</literal> must be UTC. If a "
"time zone offset is specified for the current agent, it will be applied to "
"the UTC timestamp before the output is generated."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:279
msgid ""
"There are three different possible output formats: "
"<literal>TimeLong</literal> (full date/time), <literal>TimeShort</literal> "
"(no seconds) and <literal>Date</literal> (no time)."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:283
#, no-wrap
msgid ""
"[% Data.CreateTime ǀ Localize(\"TimeLong\") %]\n"
"# Result for US English locale:\n"
"06/09/2010 15:45:41\n"
"\n"
"[% Data.CreateTime ǀ Localize(\"TimeShort\") %]\n"
"# Result for US English locale:\n"
"06/09/2010 15:45\n"
"\n"
"[% Data.CreateTime ǀ Localize(\"TimeShort\") %]\n"
"# Result for US English locale:\n"
"06/09/2010\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/templates.xml:301
msgid "Template Processing Commands"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:304
msgid "Comment"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:306
msgid ""
"Lines starting with a # at the beginning of will not be shown in the html "
"output. This can be used both for commenting the Template code or for "
"disabling parts of it."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:311
#, no-wrap
msgid ""
"# this section is temporarily disabled\n"
"# <div class=\"AsBlock\">\n"
"#     <a href=\"...\">link</a>\n"
"# </div>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:321
msgid "<literal>[% InsertTemplate(\"Copyright.tt\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><warning><para>
#: en/content/how-it-works/templates.xml:324
msgid ""
"Please note that the <literal>InsertTemplate</literal> command was added to "
"provide better backwards compatibility to the old DTL system. It might be "
"deprecated in a future version of OTRS and removed later.  If you don't use "
"<link linkend=\"block\">block commands</link> in your included template, you "
"don't need <literal>InsertTemplate</literal> and can use standard "
"Template::Toolkit syntax like <literal>INCLUDE/PROCESS</literal> instead."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:331
msgid ""
"Includes another template file into the current one. The included file may "
"also contain template commands."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:335
#, no-wrap
msgid ""
"# include Copyright.tt\n"
"[% InsertTemplate(\"Copyright\") %]\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:341
msgid ""
"Please note this is not the same as Template::Toolkit's <literal>[% INCLUDE "
"%]</literal> command, which just processes the referenced "
"template. <literal>[% InsertTemplate() %]</literal> actually adds the "
"content of the referenced template into the current template, so that it can "
"be processed together. That makes it possible for the embedded template to "
"access the same environment/data as the main template."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-it-works/templates.xml:350
msgid ""
"<literal>[% RenderBlockStart %]</literal> / <literal>[% RenderBlockEnd "
"%]</literal>"
msgstr ""

#. type: Content of: <section><section><section><section><warning><para>
#: en/content/how-it-works/templates.xml:353
msgid ""
"Please note that the blocks commands were added to provide better backwards "
"compatibility to the old DTL system. They might be deprecated in a future "
"version of OTRS and removed later.  We advise you to develop any new code "
"without using the blocks commands.  You can use standard Template::Toolkit "
"syntax like <literal>IF/ELSE</literal>, <literal>LOOP</literal>s and other "
"helpful things for conditional template output."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:360
msgid ""
"With this command, one can specify parts of a template file as a block. This "
"block needs to be explicitly filled with a function call from the "
"application, to be present in the generated output. The application can call "
"the block 0 (it will not be present in the output), 1 or more times (each "
"with possibly a different set of data parameters passed to the template)."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:367
msgid "One common use case is the filling of a table with dynamic data:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:370
#, no-wrap
msgid ""
"<table class=\"DataTable\">\n"
"    <thead>\n"
"        <tr>\n"
"            <th>[% Translate(\"Name\") | html %]</th>\n"
"            <th>[% Translate(\"Type\") | html %]</th>\n"
"            <th>[% Translate(\"Comment\") | html %]</th>\n"
"            <th>[% Translate(\"Validity\") | html %]</th>\n"
"            <th>[% Translate(\"Changed\") | html %]</th>\n"
"            <th>[% Translate(\"Created\") | html %]</th>\n"
"        </tr>\n"
"    </thead>\n"
"    <tbody>\n"
"[% RenderBlockStart(\"NoDataFoundMsg\") %]\n"
"        <tr>\n"
"            <td colspan=\"6\">\n"
"                [% Translate(\"No data found.\") | html %]\n"
"            </td>\n"
"        </tr>\n"
"[% RenderBlockEnd(\"NoDataFoundMsg\") %]\n"
"[% RenderBlockStart(\"OverviewResultRow\") %]\n"
"        <tr>\n"
"            <td><a class=\"AsBlock\" href=\"[% Env(\"Baselink\") %]Action=[% "
"Env(\"Action\") %];Subaction=Change;ID=[% Data.ID | uri %]\">[% Data.Name | "
"html %]</a></td>\n"
"            <td>[% Translate(Data.TypeName) | html %]</td>\n"
"            <td title=\"[% Data.Comment | html %]\">[% Data.Comment | "
"truncate(20) | html %]</td>\n"
"            <td>[% Translate(Data.Valid) | html %]</td>\n"
"            <td>[% Data.ChangeTime | Localize(\"TimeShort\") %]</td>\n"
"            <td>[% Data.CreateTime | Localize(\"TimeShort\") %]</td>\n"
"        </tr>\n"
"[% RenderBlockEnd(\"OverviewResultRow\") %]\n"
"    </tbody>\n"
"</table>\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:405
msgid ""
"The surrounding table with the header is always generated.  If no data was "
"found, the block <literal>NoDataFoundMsg</literal> is called once, resulting "
"in a table with one data row with the message \"No data found.\""
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:410
msgid ""
"If data was found, for each row there is one function call made for the "
"block <literal>OverViewResultRow</literal> (each time passing in the data "
"for this particular row), resulting in a table with as many data rows as "
"results were found."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:416
msgid "Let's look at how the blocks are called from the application module:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:419
#, no-wrap
msgid ""
"my %List = $Kernel::OM->Get('Kernel::System::State)->StateList(\n"
"    UserID => 1,\n"
"    Valid  => 0,\n"
");\n"
"\n"
"# if there are any states, they are shown\n"
"if (%List) {\n"
"\n"
"    # get valid list\n"
"    my %ValidList = "
"$Kernel::OM->Get('Kernel::System::Valid')->ValidList();\n"
"    for my $ListKey ( sort { $List{$a} cmp $List{$b} } keys %List ) {\n"
"\n"
"        my %Data = $Kernel::OM->Get('Kernel::System::State)->StateGet( ID => "
"$ListKey );\n"
"        $Kernel::OM->Get('Kernel::Output::HTML::Layout')->Block(\n"
"            Name => 'OverviewResultRow',\n"
"            Data => {\n"
"                Valid => $ValidList{ $Data{ValidID} },\n"
"                %Data,\n"
"            },\n"
"        );\n"
"    }\n"
"}\n"
"\n"
"# otherwise a no data found msg is displayed\n"
"else {\n"
"    $Kernel::OM->Get('Kernel::Output::HTML::Layout')->Block(\n"
"        Name => 'NoDataFoundMsg',\n"
"        Data => {},\n"
"    );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:453
msgid ""
"Note how the blocks have both their name and an optional set of data passed "
"in as separate parameters to the block function call. Data inserting "
"commands inside a block always need the data provided to the block function "
"call of this block, not the <link linkend=\"using-templates\">general "
"template rendering call</link>."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-it-works/templates.xml:460
msgid ""
"For details, please refer to the documentation of "
"<literal>Kernel::Output::HTML::Layout</literal> on <ulink "
"url=\"http://otrs.github.io/doc\">otrs.github.io/doc</ulink>."
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-it-works/templates.xml:466 en/content/how-to-publish-otrs-extensions/package-porting.xml:584
msgid "<literal>[% WRAPPER JSOnDocumentComplete %]...[% END %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/templates.xml:468
msgid ""
"Marks JavaScript code which should be executed after all CSS, JavaScript and "
"other external content has been loaded and the basic JavaScript "
"initialization was finished. Again, let's look at an example:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:473
#, no-wrap
msgid ""
"<form action=\"[% Env(\"CGIHandle\") %]\" method=\"post\" "
"enctype=\"multipart/form-data\" name=\"MoveTicketToQueue\" class=\"Validate "
"PreventMultipleSubmits\" id=\"MoveTicketToQueue\">\n"
"    <input type=\"hidden\" name=\"Action\"       value=\"[% Env(\"Action\") "
"%]\"/>\n"
"    <input type=\"hidden\" name=\"Subaction\"    value=\"MoveTicket\"/>\n"
"\n"
"    ...\n"
"\n"
"    <div class=\"Content\">\n"
"        <fieldset class=\"TableLike FixedLabel\">\n"
"            <label class=\"Mandatory\" for=\"DestQueueID\"><span "
"class=\"Marker\">*</span> [% Translate(\"New Queue\") | html %]:</label>\n"
"            <div class=\"Field\">\n"
"                [% Data.MoveQueuesStrg %]\n"
"                <div id=\"DestQueueIDError\" class=\"TooltipErrorMessage\" "
"><p>[% Translate(\"This field is required.\") | html %]</p></div>\n"
"                <div id=\"DestQueueIDServerError\" "
"class=\"TooltipErrorMessage\"><p>[% Translate(\"This field is required.\") | "
"html %]</p></div>\n"
"[% WRAPPER JSOnDocumentComplete %]\n"
"<script type=\"text/javascript\">\n"
"    $('#DestQueueID').bind('change', function (Event) {\n"
"        $('#NoSubmit').val('1');\n"
"        Core.AJAX.FormUpdate($('#MoveTicketToQueue'), 'AJAXUpdate', "
"'DestQueueID', ['NewUserID', 'OldUserID', 'NewStateID', 'NewPriorityID' [% "
"Data.DynamicFieldNamesStrg %]]);\n"
"    });\n"
"</script>\n"
"[% END %]\n"
"                    </div>\n"
"                    <div class=\"Clear\"></div>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/templates.xml:500
msgid ""
"This snippet creates a small form and puts an <literal>onchange</literal> "
"handler on the <literal>&lt;select&gt;</literal> element which triggers an "
"AJAX based form update."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/templates.xml:504
msgid ""
"Why is it necessary to enclose the JavaScript code in <literal>[% WRAPPER "
"JSOnDocumentComplete %]...[% END %]</literal>? Starting with OTRS 3.0, "
"JavaScript loading was moved to the footer part of the page for performance "
"reasons. This means that within the <literal>&lt;body&gt;</literal> of the "
"page, no JavaScript libraries are loaded yet.  With <literal>[% WRAPPER "
"JSOnDocumentComplete %]...[% END %]</literal> you can make sure that this "
"JavaScript is moved to a part of the final HTML document, where it will be "
"executed only after the entire external JavaScript and CSS content has been "
"successfully loaded and initialized."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/templates.xml:515
msgid ""
"Inside the <literal>[% WRAPPER JSOnDocumentComplete %]...[% END %]</literal> "
"block, you can use <literal>&lt;script&gt;</literal> tags to enclose your "
"JavaScript code, but you do not have to do so.  It may be beneficial because "
"it will enable correct syntax highlighting in IDEs which support it."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/templates.xml:524
msgid "Using a template file"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/templates.xml:526
msgid ""
"Ok, but how to actually process a template file and generate the result? "
"This is really simple:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/templates.xml:529
#, no-wrap
msgid ""
"# render AdminState.tt\n"
"$Output .= $Kernel::OM->Get('Kernel::Output::HTML::Layout')->Output(\n"
"    TemplateFile => 'AdminState',\n"
"    Data         => \\%Param,\n"
");\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/templates.xml:538
msgid ""
"In the frontend modules, the <literal>Output()</literal> function of "
"<literal>Kernel::Output::HTML::Layout</literal> is called (after all the "
"needed blocks have been called in this template) to generate the final "
"output. An optional set of data parameters is passed to the template, for "
"all data inserting commands which are not inside of a block."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-it-works/translations.xml:5
msgid "Localization / Translation Mechanism"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-it-works/translations.xml:8
msgid ""
"There are four steps needed to translate / localize software: marking "
"localizable strings in the source files, generating the translation "
"database/file, the translation process itself, and the usage of translated "
"data within the code."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/translations.xml:14
msgid "Marking translatable strings in the source files"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:16
msgid ""
"In Perl code, all literal strings to be translated are automatically marked "
"for translation: <code>$LanguageObject->Translate('My string %s', "
"$Data)</code> will mark 'My string %s' for translation.  If you need to mark "
"strings, but NOT translate them in the code yet, you can use the NOOP method "
"<code>Kernel::Langauge::Translatable()</code>."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/translations.xml:22
#, no-wrap
msgid ""
"package MyPackage;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::Language (qw(Translatable));\n"
"\n"
"...\n"
"\n"
"my $UntranslatedString = Translatable('My string %s');\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:36
msgid ""
"In Template files, all literal strings enclosed in <link "
"linkend=\"translate-tag\">the <code>Translate()</code>-Tag</link> are "
"automatically marked for extraction: <code>[% Translate('My string %s', "
"Data.Data )%]</code>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:41
msgid ""
"In SysConfig and Database XML files you can mark strings for extraction with "
"the <literal>Translatable=\"1\"</literal> attribute."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/translations.xml:45
#, no-wrap
msgid ""
"# Database XML\n"
"<Insert Table=\"groups\">\n"
"    <Data Key=\"id\" Type=\"AutoIncrement\">1</Data>\n"
"    ...\n"
"    <Data Key=\"comments\" Type=\"Quote\" Translatable=\"1\">Group for "
"default access.</Data>\n"
"    ...\n"
"</Insert>\n"
"\n"
"# SysConfig XML\n"
"<Setting>\n"
"    <Option SelectedID=\"0\">\n"
"        <Item Key=\"0\" Translatable=\"1\">No</Item>\n"
"        <Item Key=\"1\" Translatable=\"1\">Yes</Item>\n"
"    </Option>\n"
"</Setting>\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/translations.xml:65
msgid "Collecting translatable strings into the translation database"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:67
msgid ""
"The console command <filename>otrs.Console.pl "
"Dev::Tools::TranslationsUpdate</filename> is used to extract all "
"translatable strings from the source files. These will be collected and "
"written into the translation files."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:70
msgid ""
"For the OTRS framework and all extension modules that also use Transifex for "
"managing the translations, .pot and .po files are written. These files are "
"used to push the translatable strings to Transifex and pull the translations "
"from there."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:73
msgid ""
"But OTRS requires the translations to be in Perl files for speed "
"reasons. These files will also be generated by <filename>otrs.Console.pl "
"Dev::Tools::TranslationsUpdate</filename>.  There are two different "
"translation cache file types which are used in the following order. If a "
"word/sentence is redefined in a translation file, the last definition will "
"be used."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/translations.xml:82 en/content/how-it-works/translations.xml:98
msgid "Default Framework Translation File"
msgstr ""

#. type: Content of: <section><section><orderedlist><listitem><para>
#: en/content/how-it-works/translations.xml:85
msgid "<filename>Kernel/Language/$Language.pm</filename>"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-it-works/translations.xml:90 en/content/how-it-works/translations.xml:147
msgid "Custom Translation File"
msgstr ""

#. type: Content of: <section><section><orderedlist><listitem><para>
#: en/content/how-it-works/translations.xml:93
msgid "<filename>Kernel/Language/$Language_Custom.pm</filename>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/translations.xml:100
msgid ""
"The Default Framework Translation File includes the basic translations. The "
"following is an example of a Default Framework Translation File."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/translations.xml:104 en/content/how-it-works/translations.xml:154
msgid "Format:"
msgstr ""

#. type: CDATA
#: en/content/how-it-works/translations.xml:107
#, no-wrap
msgid ""
"package Kernel::Language::de;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use vars qw(@ISA $VERSION);\n"
"\n"
"sub Data {\n"
"    my $Self = shift;\n"
"\n"
"    # $$START$$\n"
"\n"
"    # possible charsets\n"
"    $Self->{Charset} = ['iso-8859-1', 'iso-8859-15', ];\n"
"    # date formats "
"(%A=WeekDay;%B=LongMonth;%T=Time;%D=Day;%M=Month;%Y=Jear;)\n"
"    $Self->{DateFormat} = '%D.%M.%Y %T';\n"
"    $Self->{DateFormatLong} = '%A %D %B %T %Y';\n"
"    $Self->{DateFormatShort} = '%D.%M.%Y';\n"
"    $Self->{DateInputFormat} = '%D.%M.%Y';\n"
"    $Self->{DateInputFormatLong} = '%D.%M.%Y - %T';\n"
"\n"
"    $Self->{Translation} = {\n"
"    # Template: AAABase\n"
"    'Yes' => 'Ja',\n"
"    'No' => 'Nein',\n"
"    'yes' => 'ja',\n"
"    'no' => 'kein',\n"
"    'Off' => 'Aus',\n"
"    'off' => 'aus',\n"
"    };\n"
"    # $$STOP$$\n"
"    return 1;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-it-works/translations.xml:149
msgid ""
"The Custom Translation File is read out last and so its translation which "
"will be used. If you want to add your own wording to your installation, "
"create this file for your language."
msgstr ""

#. type: CDATA
#: en/content/how-it-works/translations.xml:157
#, no-wrap
msgid ""
"package Kernel::Language::xx_Custom;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use vars qw(@ISA $VERSION);\n"
"\n"
"sub Data {\n"
"    my $Self = shift;\n"
"\n"
"    # $$START$$\n"
"\n"
"    # own translations\n"
"    $Self->{Translation}->{'Lock'} = 'Lala';\n"
"    $Self->{Translation}->{'Unlock'} = 'Lulu';\n"
"\n"
"    # $$STOP$$\n"
"    return 1;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/translations.xml:184
msgid "The translation process itself"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:186
msgid ""
"OTRS uses Transifex to manage the translation process.  Please see <link "
"linkend=\"translate\">this section</link> for details."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-it-works/translations.xml:191
msgid "Using the translated data from the code"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-it-works/translations.xml:193
msgid ""
"You can use the method <code>$LanguageObject->Translate()</code> to "
"translate strings at runtime from Perl code, and <link "
"linkend=\"translate-tag\">the <code>Translate()</code>-Tag</link> in "
"templates."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:5
msgid "Using the power of the OTRS module layers"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:7
msgid ""
"OTRS has a large number of so-called \"module layers\" which make it very "
"easy to extend the system without patching existing code. One example is the "
"number generation mechanism for tickets. It is a \"module layer\" with <link "
"linkend=\"ticketnumber-generator\">pluggable modules</link>, and you can add "
"your own custom number generator modules if you wish to do so.  Let's look "
"at the different layers in detail!"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:16
msgid "Authentication and user management"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:23
msgid "Preferences"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:31
msgid "Other core functions"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:55
msgid "Daemon And Scheduler"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:61
msgid "Dynamic Fields"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers.xml:71
msgid "Email Handling"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:5
msgid "Writing a new OTRS frontend module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:7
msgid ""
"In this chapter, the writing of a new OTRS module is illustrated on the "
"basis of a simple small program.  Necessary prerequisite is an OTRS "
"development environment as specified in the chapter of the same name."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:12
msgid "What we want to write"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:14
msgid ""
"We want to write a little OTRS module that displays the text 'Hello World' "
"when called up.  First of all we must build the directory <filename>/Hello "
"World</filename> for the module in the developer directory.  In this "
"directory, all directories existent in OTRS can be created.  Each module "
"should at least contain the following directories:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:20
#, no-wrap
msgid ""
"Kernel\n"
"Kernel/System\n"
"Kernel/Modules\n"
"Kernel/Output/HTML/Templates/Standard\n"
"Kernel/Config\n"
"Kernel/Config/Files\n"
"Kernel/Language\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:33
msgid "Default Config File"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:35
msgid ""
"The creation of a module registration facilitates the display of the new "
"module in OTRS.  Therefore we create a file "
"<filename>/Kernel/Config/Files/HelloWorld.xml</filename>.  In this file, we "
"create a new config element.  The impact of the various settings is "
"described in the chapter 'Config Mechanism'."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:41
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n"
"<otrs_config version=\"1.0\" init=\"Application\">\n"
"        <ConfigItem Name=\"Frontend::Module###AgentHelloWorld\" "
"Required=\"1\" Valid=\"1\">\n"
"        <Description Translatable=\"1\">FrontendModuleRegistration for "
"HelloWorld module.</Description>\n"
"        <Group>HelloWorld</Group>\n"
"        <SubGroup>Frontend::Agent::ModuleRegistration</SubGroup>\n"
"        <Setting>\n"
"            <FrontendModuleReg>\n"
"                <Title>HelloWorld</Title>\n"
"                <Group>users</Group>\n"
"                <Description>HelloWorld</Description>\n"
"                <NavBarName>HelloWorld</NavBarName>\n"
"                <NavBar>\n"
"                    <Description>HelloWorld</Description>\n"
"                    <Name>HelloWorld</Name>\n"
"                    <Link>Action=AgentHelloWorld</Link>\n"
"                    <NavBar>HelloWorld</NavBar>\n"
"                    <Type>Menu</Type>\n"
"                    <Prio>8400</Prio>\n"
"                    <Block>ItemArea</Block>\n"
"                </NavBar>\n"
"            </FrontendModuleReg>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
"</otrs_config>\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:72
msgid "Frontend Module"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:74
msgid ""
"After creating the links and executing the Sysconfig, a new module with the "
"name 'HelloWorld' is displayed.  When calling it up, an error message is "
"displayed as OTRS cannot find the matching frontend module yet.  This is the "
"next thing to be created. To do so, we create the following file:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:79
#, no-wrap
msgid ""
"# --\n"
"# Kernel/Modules/AgentHelloWorld.pm - frontend module\n"
"# Copyright (C) (year) (name of author) (email of author)\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::Modules::AgentHelloWorld;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"# Frontend modules are not handled by the ObjectManager.\n"
"our $ObjectManagerDisabled = 1;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {%Param};\n"
"    bless ($Self, $Type);\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"    my %Data = ();\n"
"\n"
"    my $HelloWorldObject = $Kernel::OM->Get('Kernel::System::HelloWorld');\n"
"    my $LayoutObject     = "
"$Kernel::OM->Get('Kernel::Output::HTML::Layout');\n"
"\n"
"    $Data{HelloWorldText} = $HelloWorldObject->GetHelloWorldText();\n"
"\n"
"    # build output\n"
"    my $Output = $LayoutObject->Header(Title => \"HelloWorld\");\n"
"    $Output   .= $LayoutObject->NavigationBar();\n"
"    $Output   .= $LayoutObject->Output(\n"
"        Data         => \\%Data,\n"
"        TemplateFile => 'AgentHelloWorld',\n"
"    );\n"
"    $Output   .= $LayoutObject->Footer();\n"
"\n"
"    return $Output;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:134
msgid "Core Module"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:136
msgid ""
"Next, we create the file for the core module "
"<filename>/HelloWorld/Kernel/System/HelloWorld.pm</filename> with the "
"following content:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:139
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/HelloWorld.pm - core module\n"
"# Copyright (C) (year) (name of author) (email of author)\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::HelloWorld;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"# list your object dependencies (e.g. Kernel::System::DB) here\n"
"our @ObjectDependencies = (\n"
"    # 'Kernel::System::DB',\n"
");\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless ($Self, $Type);\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub GetHelloWorldText {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # Get the DBObject from the central object manager\n"
"    # my $DBObject = $Kernel::OM->Get('Kernel::System::DB');\n"
"\n"
"    return 'Hello World!';\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:184
msgid "Template File"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:186
msgid ""
"The last thing missing before the new module can run is the relevant HTML "
"template.  Thus, we create the following file:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:190
#, no-wrap
msgid ""
"# --\n"
"# Kernel/Output/HTML/Templates/Standard/AgentHelloWorld.tt - overview\n"
"# Copyright (C) (year) (name of author) (email of author)\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"<h1>[% Translate(\"Overview\") | html %]: [% Translate(\"HelloWorld\") "
"%]</h1>\n"
"<p>\n"
"    [% Data.HelloWorldText | Translate() | html %]\n"
"</p>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:206
msgid "The module is working now and displays the text 'Hello World' when called."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:211
msgid "Language File"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:213
msgid ""
"If the text 'Hello World!' is to be translated into for instance German, you "
"can create a translation file for this language in "
"<filename>HelloWorld/Kernel/Language/de_AgentHelloWorld.pm</filename>.  "
"Example:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:219
#, no-wrap
msgid ""
"package Kernel::Language::de_AgentHelloWorld;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"sub Data {\n"
"    my $Self = shift;\n"
"\n"
"    $Self->{Translation}->{'Hello World!'} = 'Hallo Welt!';\n"
"\n"
"    return 1;\n"
"}\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:238
msgid "Summary"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/writing-otrs-application.xml:240
msgid ""
"The example given above shows that it is not too difficult to write a new "
"module for OTRS.  It is important, though, to make sure that the module and "
"file name are unique and thus do not interfere with the framework or other "
"expansion modules.  When a module is finished, an OPM package must be "
"generated from it (see chapter <link linkend=\"package-building\">Package "
"Building</link>)."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:6
msgid "Agent Authentication Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:8
msgid ""
"There are several agent authentication modules (DB, LDAP and HTTPBasicAuth)  "
"which come with the OTRS framework. It is also possible to develop your own "
"authentication modules. The agent authentication modules are located under "
"<filename>Kernel/System/Auth/*.pm</filename>. For more information about "
"their configuration see the admin manual.  Following, there is an example of "
"a simple agent auth module. Save it under "
"<filename>Kernel/System/Auth/Simple.pm</filename>.  You just need 3 "
"functions: <code>new()</code>, <code>GetOption()</code> and "
"<code>Auth()</code>. Return the uid, then the authentication is ok."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:17 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:17 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:17 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:33 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:16
msgid "Code Example"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:19
msgid ""
"The interface class is called <literal>Kernel::System::Auth</literal>. The "
"example agent authentication may be called "
"<literal>Kernel::System::Auth::CustomAuth</literal>. You can find an example "
"below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:23
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Auth/CustomAuth.pm - provides the CustomAuth "
"authentication\n"
"# based on Martin Edenhofer's Kernel::System::Auth::DB\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# ID: CustomAuth.pm,v 1.1 2010/05/10 15:30:34 fk Exp $\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Auth::CustomAuth;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Authen::CustomAuth;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for (qw(LogObject ConfigObject DBObject)) {\n"
"        $Self->{$_} = $Param{$_} || die \"No $_!\";\n"
"    }\n"
"\n"
"    # Debug 0=off 1=on\n"
"    $Self->{Debug} = 0;\n"
"\n"
"    # get config\n"
"    $Self->{Die} = $Self->{ConfigObject}->Get( 'AuthModule::CustomAuth::Die' "
". $Param{Count} );\n"
"\n"
"    # get user table\n"
"    $Self->{CustomAuthHost} = $Self->{ConfigObject}->Get( "
"'AuthModule::CustomAuth::Host' . $Param{Count} )\n"
"        || die \"Need AuthModule::CustomAuth::Host$Param{Count}.\";\n"
"    $Self->{CustomAuthSecret}\n"
"        = $Self->{ConfigObject}->Get( 'AuthModule::CustomAuth::Password' "
". $Param{Count} )\n"
"        || die \"Need AuthModule::CustomAuth::Password$Param{Count}.\";\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub GetOption {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    if ( !$Param{What} ) {\n"
"        $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"What!\" );\n"
"        return;\n"
"    }\n"
"\n"
"    # module options\n"
"    my %Option = ( PreAuth => 0, );\n"
"\n"
"    # return option\n"
"    return $Option{ $Param{What} };\n"
"}\n"
"\n"
"sub Auth {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    if ( !$Param{User} ) {\n"
"        $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"User!\" );\n"
"        return;\n"
"    }\n"
"\n"
"    # get params\n"
"    my $User       = $Param{User}      || '';\n"
"    my $Pw         = $Param{Pw}        || '';\n"
"    my $RemoteAddr = $ENV{REMOTE_ADDR} || 'Got no REMOTE_ADDR env!';\n"
"    my $UserID     = '';\n"
"    my $GetPw      = '';\n"
"\n"
"    # just in case for debug!\n"
"    if ( $Self->{Debug} > 0 ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: '$User' tried to authenticate with Pw: '$Pw' "
"($RemoteAddr)\",\n"
"        );\n"
"    }\n"
"\n"
"    # just a note\n"
"    if ( !$User ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"No User given!!! (REMOTE_ADDR: $RemoteAddr)\",\n"
"        );\n"
"        return;\n"
"    }\n"
"\n"
"    # just a note\n"
"    if ( !$Pw ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: $User authentication without Pw!!! "
"(REMOTE_ADDR: $RemoteAddr)\",\n"
"        );\n"
"        return;\n"
"    }\n"
"\n"
"    # Create a RADIUS object\n"
"    my $CustomAuth = Authen::CustomAuth->new(\n"
"        Host   => $Self->{CustomAuthHost},\n"
"        Secret => $Self->{CustomAuthecret},\n"
"    );\n"
"    if ( !$CustomAuth ) {\n"
"        if ( $Self->{Die} ) {\n"
"            die \"Can't connect to $Self->{CustomAuthHost}: $@\";\n"
"        }\n"
"        else {\n"
"            $Self->{LogObject}->Log(\n"
"                Priority => 'error',\n"
"                Message  => \"Can't connect to $Self->{CustomAuthHost}: "
"$@\",\n"
"            );\n"
"            return;\n"
"        }\n"
"    }\n"
"    my $AuthResult = $CustomAuth->check_pwd( $User, $Pw );\n"
"\n"
"    # login note\n"
"    if ( defined($AuthResult) && $AuthResult == 1 ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: $User authentication ok (REMOTE_ADDR: "
"$RemoteAddr).\",\n"
"        );\n"
"        return $User;\n"
"    }\n"
"\n"
"    # just a note\n"
"    else {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: $User authentication with wrong Pw!!! "
"(REMOTE_ADDR: $RemoteAddr)\"\n"
"        );\n"
"        return;\n"
"    }\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:173 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:80 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:175 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:150 en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:234 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:361 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:148 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:325 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:118 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:130 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:130 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:128 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:132
msgid "Configuration Example"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:175
msgid ""
"There is the need to activate your custom agent authenticate module.  This "
"can be done using the Perl configuration below.  It is not recommended to "
"use the XML configuration because you can lock you out via the sysconfig."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:181
#, no-wrap
msgid "            $Self->{'AuthModule'} = 'Kernel::System::Auth::CustomAuth';\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:187 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:195 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:180 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:144 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:150 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:147 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:158
msgid "Use Case Example"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:189
msgid ""
"A useful example of an authentication implementation could be a SOAP "
"backend."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:193 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:100 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:201 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:186 en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:202 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:151 en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:152 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:156 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:156 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:153 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:691 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1073 en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:58 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:173 en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:57
msgid "Release Availability"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><thead><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:199 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:106 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:207 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:192 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:157 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:162 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:162 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:159 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:179
msgid "Name"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><thead><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:200 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:107 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:208 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:193 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:158 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:163 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:163 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:160 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:180
msgid "Release"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:205 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:213 en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:198
msgid "DB"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:206 en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:214 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:214 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:222
msgid "1.0"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:209 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:217
msgid "HTTPBasicAuth"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:210 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:218 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:172 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:180
msgid "1.2"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:213 en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:112 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:221
msgid "LDAP"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:217 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:225
msgid "RADIUS"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/agent-auth.xml:218 en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:226
msgid "1.3"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:6
msgid "Authentication Synchronization Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:8
msgid ""
"There is an LDAP authentication synchronization module which come with the "
"OTRS framework. It is also possible to develop your own authentication "
"modules. The authentication synchronization modules are located under "
"<filename>Kernel/System/Auth/Sync/*.pm</filename>. For more information "
"about their configuration see the admin manual.  Following, there is an "
"example of an authentication synchronization module.  Save it under "
"<filename>Kernel/System/Auth/Sync/CustomAuthSync.pm</filename>.  You just "
"need 2 functions: <code>new()</code> and <code>Sync()</code>. Return 1, then "
"the synchronization is ok."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:20
msgid ""
"The interface class is called <literal>Kernel::System::Auth</literal>. The "
"example agent authentication may be called "
"<literal>Kernel::System::Auth::Sync::CustomAuthSync</literal>. You can find "
"an example below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:24
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Auth/Sync/CustomAuthSync.pm - provides the CustomAuthSync\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# Id: CustomAuthSync.pm,v 1.9 2010/03/25 14:42:45 martin Exp $\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Auth::Sync::CustomAuthSync;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"use Net::LDAP;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for (qw(LogObject ConfigObject DBObject UserObject GroupObject "
"EncodeObject)) {\n"
"        $Self->{$_} = $Param{$_} || die \"No $_!\";\n"
"    }\n"
"\n"
"    # Debug 0=off 1=on\n"
"    $Self->{Debug} = 0;\n"
"\n"
"...\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub Sync {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for (qw(User)) {\n"
"        if ( !$Param{$_} ) {\n"
"            $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"$_!\" );\n"
"            return;\n"
"        }\n"
"    }\n"
"...\n"
"    return 1;\n"
"}\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:82
msgid ""
"You should activate your custom synchronization module.  This can be done "
"using the Perl configuration below.  It is not recommended to use the XML "
"configuration because this would allow you to lock yourself out via "
"SysConfig."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:88
#, no-wrap
msgid ""
"            $Self->{'AuthSyncModule'} = "
"'Kernel::System::Auth::Sync::LDAP';\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:94 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:150
msgid "Use Case Examples"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:96
msgid "Useful synchronization implementation could be a SOAP or RADIUS backend."
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:113 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:169 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:166 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:198
msgid "2.4"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:121 en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:196 en/content/how-to-extend-otrs/otrs-module-layers/log.xml:152 en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:136 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:685 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1067 en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:52 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:165 en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:48
msgid "Caveats and Warnings"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/auth-sync.xml:123
msgid ""
"Please note that the synchronization was part of the authentication class "
"<literal>Kernel::System::Auth</literal> before framework 2.4."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:6
msgid "Customer Authentication Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:8
msgid ""
"There are several customer authentication modules (DB, LDAP and "
"HTTPBasicAuth)  which come with the OTRS framework. It is also possible to "
"develop your own authentication modules. The customer authentication modules "
"are located under <filename>Kernel/System/CustomerAuth/*.pm</filename>. For "
"more information about their configuration see the admin manual.  Following, "
"there is an example of a simple customer auth module. Save it under "
"<filename>Kernel/System/CustomerAuth/Simple.pm</filename>.  You just need 3 "
"functions: <code>new()</code>, <code>GetOption()</code> and "
"<code>Auth()</code>. Return the uid, then the authentication is ok."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:19
msgid ""
"The interface class is called "
"<literal>Kernel::System::CustomerAuth</literal>. The example customer "
"authentication may be called "
"<literal>Kernel::System::CustomerAuth::CustomAuth</literal>. You can find an "
"example below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:23
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/CustomerAuth/CustomAuth.pm - provides the custom "
"Authentication\n"
"# based on Martin Edenhofer's Kernel::System::Auth::DB\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# Id: CustomAuth.pm,v 1.11 2009/09/22 15:16:05 mb Exp $\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::CustomerAuth::CustomAuth;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Authen::CustomAuth;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for (qw(LogObject ConfigObject DBObject)) {\n"
"        $Self->{$_} = $Param{$_} || die \"No $_!\";\n"
"    }\n"
"\n"
"    # Debug 0=off 1=on\n"
"    $Self->{Debug} = 0;\n"
"\n"
"    # get config\n"
"    $Self->{Die}\n"
"        = $Self->{ConfigObject}->Get( "
"'Customer::AuthModule::CustomAuth::Die' . $Param{Count} );\n"
"\n"
"    # get user table\n"
"    $Self->{CustomAuthHost}\n"
"        = $Self->{ConfigObject}->Get( "
"'Customer::AuthModule::CustomAuth::Host' . $Param{Count} )\n"
"        || die \"Need Customer::AuthModule::CustomAuth::Host$Param{Count} in "
"Kernel/Config.pm\";\n"
"    $Self->{CustomAuthSecret}\n"
"        = $Self->{ConfigObject}->Get( "
"'Customer::AuthModule::CustomAuth::Password' . $Param{Count} )\n"
"        || die \"Need "
"Customer::AuthModule::CustomAuth::Password$Param{Count} in "
"Kernel/Config.pm\";\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub GetOption {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    if ( !$Param{What} ) {\n"
"        $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"What!\" );\n"
"        return;\n"
"    }\n"
"\n"
"    # module options\n"
"    my %Option = ( PreAuth => 0, );\n"
"\n"
"    # return option\n"
"    return $Option{ $Param{What} };\n"
"}\n"
"\n"
"sub Auth {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    if ( !$Param{User} ) {\n"
"        $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"User!\" );\n"
"        return;\n"
"    }\n"
"\n"
"    # get params\n"
"    my $User       = $Param{User}      || '';\n"
"    my $Pw         = $Param{Pw}        || '';\n"
"    my $RemoteAddr = $ENV{REMOTE_ADDR} || 'Got no REMOTE_ADDR env!';\n"
"    my $UserID     = '';\n"
"    my $GetPw      = '';\n"
"\n"
"    # just in case for debug!\n"
"    if ( $Self->{Debug} > 0 ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: '$User' tried to authentificate with Pw: "
"'$Pw' ($RemoteAddr)\",\n"
"        );\n"
"    }\n"
"\n"
"    # just a note\n"
"    if ( !$User ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"No User given!!! (REMOTE_ADDR: $RemoteAddr)\",\n"
"        );\n"
"        return;\n"
"    }\n"
"\n"
"    # just a note\n"
"    if ( !$Pw ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: $User Authentication without Pw!!! "
"(REMOTE_ADDR: $RemoteAddr)\",\n"
"        );\n"
"        return;\n"
"    }\n"
"\n"
"    # Create a custom object\n"
"    my $CustomAuth = Authen::CustomAuth->new(\n"
"        Host   => $Self->{CustomAuthHost},\n"
"        Secret => $Self->{CustomAuthSecret},\n"
"    );\n"
"    if ( !$CustomAuth ) {\n"
"        if ( $Self->{Die} ) {\n"
"            die \"Can't connect to $Self->{CustomAuthHost}: $@\";\n"
"        }\n"
"        else {\n"
"            $Self->{LogObject}->Log(\n"
"                Priority => 'error',\n"
"                Message  => \"Can't connect to $Self->{CustomAuthHost}: "
"$@\",\n"
"            );\n"
"            return;\n"
"        }\n"
"    }\n"
"    my $AuthResult = $CustomAuth->check_pwd( $User, $Pw );\n"
"\n"
"    # login note\n"
"    if ( defined($AuthResult) && $AuthResult == 1 ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: $User Authentication ok (REMOTE_ADDR: "
"$RemoteAddr).\",\n"
"        );\n"
"        return $User;\n"
"    }\n"
"\n"
"    # just a note\n"
"    else {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'notice',\n"
"            Message  => \"User: $User Authentication with wrong Pw!!! "
"(REMOTE_ADDR: $RemoteAddr)\"\n"
"        );\n"
"        return;\n"
"    }\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:177
msgid ""
"There is the need to activate your custom customer authenticate module.  "
"This can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:181
#, no-wrap
msgid ""
"<ConfigItem Name=\"AuthModule\" Required=\"1\" Valid=\"1\">\n"
"    <Description Lang=\"en\">Module to authenticate "
"customers.</Description>\n"
"    <Description Lang=\"de\">Modul zum Authentifizieren der "
"Customer.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Frontend::CustomerAuthAuth</SubGroup>\n"
"    <Setting>\n"
"        <Option Location=\"Kernel/System/CustomerAuth/*.pm\" "
"SelectedID=\"Kernel::System::CustomerAuth::CustomAuth\"></Option>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-auth.xml:197
msgid "Useful authentication implementation could be a SOAP backend."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:6
msgid "Customer User Preferences Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:8
msgid ""
"There is a DB customer-user preferences module which come with the OTRS "
"framework.  It is also possible to develop your own customer-user "
"preferences modules.  The customer-user preferences modules are located "
"under <filename>Kernel/System/CustomerUser/Preferences/*.pm</filename>. For "
"more information about their configuration see the admin manual.  Following, "
"there is an example of a customer-user preferences module.  Save it under "
"<filename>Kernel/System/CustomerUser/Preferences/Custom.pm</filename>.  You "
"just need 4 functions: <code>new()</code>, <code>SearchPreferences()</code>, "
"<code>SetPreferences()</code> and <code>GetPreferences()</code>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:19
msgid ""
"The interface class is called "
"<literal>Kernel::System::CustomerUser</literal>. The example customer-user "
"preferences may be called "
"<literal>Kernel::System::CustomerUser::Preferences::Custom</literal>. You "
"can find an example below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:23
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/CustomerUser/Preferences/Custom.pm - some customer user "
"functions\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# Id: Custom.pm,v 1.20 2009/10/07 20:41:50 martin Exp $\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::CustomerUser::Preferences::Custom;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use vars qw(@ISA $VERSION);\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for my $Object (qw(DBObject ConfigObject LogObject)) {\n"
"        $Self->{$Object} = $Param{$Object} || die \"Got no $Object!\";\n"
"    }\n"
"\n"
"    # preferences table data\n"
"    $Self->{PreferencesTable} = "
"$Self->{ConfigObject}->Get('CustomerPreferences')->{Params}->{Table}\n"
"        || 'customer_preferences';\n"
"    $Self->{PreferencesTableKey}\n"
"        = "
"$Self->{ConfigObject}->Get('CustomerPreferences')->{Params}->{TableKey}\n"
"        || 'preferences_key';\n"
"    $Self->{PreferencesTableValue}\n"
"        = "
"$Self->{ConfigObject}->Get('CustomerPreferences')->{Params}->{TableValue}\n"
"        || 'preferences_value';\n"
"    $Self->{PreferencesTableUserID}\n"
"        = "
"$Self->{ConfigObject}->Get('CustomerPreferences')->{Params}->{TableUserID}\n"
"        || 'user_id';\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub SetPreferences {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $UserID = $Param{UserID} || return;\n"
"    my $Key    = $Param{Key}    || return;\n"
"    my $Value = defined( $Param{Value} ) ? $Param{Value} : '';\n"
"\n"
"    # delete old data\n"
"    return if !$Self->{DBObject}->Do(\n"
"        SQL => \"DELETE FROM $Self->{PreferencesTable} WHERE \"\n"
"            . \" $Self->{PreferencesTableUserID} = ? AND "
"$Self->{PreferencesTableKey} = ?\",\n"
"        Bind => [ \\$UserID, \\$Key ],\n"
"    );\n"
"\n"
"    $Value .= 'Custom';\n"
"\n"
"    # insert new data\n"
"    return if !$Self->{DBObject}->Do(\n"
"        SQL => \"INSERT INTO $Self->{PreferencesTable} "
"($Self->{PreferencesTableUserID}, \"\n"
"            . \" $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue}) \"\n"
"            . \" VALUES (?, ?, ?)\",\n"
"        Bind => [ \\$UserID, \\$Key, \\$Value ],\n"
"    );\n"
"\n"
"    return 1;\n"
"}\n"
"\n"
"sub GetPreferences {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $UserID = $Param{UserID} || return;\n"
"    my %Data;\n"
"\n"
"    # get preferences\n"
"\n"
"    return if !$Self->{DBObject}->Prepare(\n"
"        SQL => \"SELECT $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue} \"\n"
"            . \" FROM $Self->{PreferencesTable} WHERE "
"$Self->{PreferencesTableUserID} = ?\",\n"
"        Bind => [ \\$UserID ],\n"
"    );\n"
"    while ( my @Row = $Self->{DBObject}->FetchrowArray() ) {\n"
"        $Data{ $Row[0] } = $Row[1];\n"
"    }\n"
"\n"
"    # return data\n"
"    return %Data;\n"
"}\n"
"\n"
"sub SearchPreferences {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my %UserID;\n"
"    my $Key   = $Param{Key}   || '';\n"
"    my $Value = $Param{Value} || '';\n"
"\n"
"    # get preferences\n"
"    my $SQL = \"SELECT $Self->{PreferencesTableUserID}, "
"$Self->{PreferencesTableValue} \"\n"
"        . \" FROM \"\n"
"        . \" $Self->{PreferencesTable} \"\n"
"        . \" WHERE \"\n"
"        . \" $Self->{PreferencesTableKey} = '\"\n"
"        . $Self->{DBObject}->Quote($Key) . \"'\" . \" AND \"\n"
"        . \" LOWER($Self->{PreferencesTableValue}) LIKE LOWER('\"\n"
"        . $Self->{DBObject}->Quote( $Value, 'Like' ) . \"')\";\n"
"\n"
"    return if !$Self->{DBObject}->Prepare( SQL => $SQL );\n"
"    while ( my @Row = $Self->{DBObject}->FetchrowArray() ) {\n"
"        $UserID{ $Row[0] } = $Row[1];\n"
"    }\n"
"\n"
"    # return data\n"
"    return %UserID;\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:152
msgid ""
"There is the need to activate your custom customer-user preferences module.  "
"This can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:156
#, no-wrap
msgid ""
"<ConfigItem Name=\"CustomerPreferences\" Required=\"1\" Valid=\"1\">\n"
"    <Description Lang=\"en\">Parameters for the customer preference "
"table.</Description>\n"
"    <Description Lang=\"de\">Parameter für die Tabelle mit den Einstellungen "
"für die Customer.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Frontend::Customer::Preferences</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item "
"Key=\"Module\">Kernel::System::CustomerUser::Preferences::Custom</Item>\n"
"            <Item  Key=\"Params\">\n"
"                <Hash>\n"
"                    <Item Key=\"Table\">customer_preferences</Item>\n"
"                    <Item Key=\"TableKey\">preferences_key</Item>\n"
"                    <Item Key=\"TableValue\">preferences_value</Item>\n"
"                    <Item Key=\"TableUserID\">user_id</Item>\n"
"                </Hash>\n"
"            </Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:182
msgid "Useful preferences implementation could be a SOAP or LDAP backend."
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/customer-user-preferences.xml:199 en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:169
msgid "2.3"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:5
msgid "Dashboard Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:7
msgid "Dashboard module to display statistics in the form of a line graph."
msgstr ""

#. type: Content of: <section><para><figure><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:11
msgid "Dashboard Widget"
msgstr ""

#. type: Content of: <section><para><figure><screenshot>
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:13
msgid ""
"<graphic fileref=\"screenshots/dashboard.png\" scalefit=\"1\" width=\"100%\" "
"contentdepth=\"100%\"></graphic>"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:18
#, no-wrap
msgid ""
"# --\n"
"# Kernel/Output/HTML/DashboardTicketStatsGeneric.pm - message of the day\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::Output::HTML::DashboardTicketStatsGeneric;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {%Param};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # get needed objects\n"
"    for (\n"
"        qw(Config Name ConfigObject LogObject DBObject LayoutObject "
"ParamObject TicketObject UserID)\n"
"        )\n"
"    {\n"
"        die \"Got no $_!\" if !$Self->{$_};\n"
"    }\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub Preferences {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    return;\n"
"}\n"
"\n"
"sub Config {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $Key = $Self->{LayoutObject}->{UserLanguage} . '-' . $Self->{Name};\n"
"    return (\n"
"        %{ $Self->{Config} },\n"
"        CacheKey => 'TicketStats' . '-' . $Self->{UserID} . '-' . $Key,\n"
"    );\n"
"\n"
"}\n"
"\n"
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my %Axis = (\n"
"        '7Day' => {\n"
"            0 => { Day => 'Sun', Created => 0, Closed => 0, },\n"
"            1 => { Day => 'Mon', Created => 0, Closed => 0, },\n"
"            2 => { Day => 'Tue', Created => 0, Closed => 0, },\n"
"            3 => { Day => 'Wed', Created => 0, Closed => 0, },\n"
"            4 => { Day => 'Thu', Created => 0, Closed => 0, },\n"
"            5 => { Day => 'Fri', Created => 0, Closed => 0, },\n"
"            6 => { Day => 'Sat', Created => 0, Closed => 0, },\n"
"        },\n"
"    );\n"
"\n"
"    my @Data;\n"
"    my $Max = 1;\n"
"    for my $Key ( 0 .. 6 ) {\n"
"\n"
"        my $TimeNow = $Self->{TimeObject}->SystemTime();\n"
"        if ($Key) {\n"
"            $TimeNow = $TimeNow - ( 60 * 60 * 24 * $Key );\n"
"        }\n"
"        my ( $Sec, $Min, $Hour, $Day, $Month, $Year, $WeekDay )\n"
"            = $Self->{TimeObject}->SystemTime2Date(\n"
"            SystemTime => $TimeNow,\n"
"            );\n"
"\n"
"        $Data[$Key]->{Day} = $Self->{LayoutObject}->{LanguageObject}->Get(\n"
"            $Axis{'7Day'}->{$WeekDay}->{Day}\n"
"        );\n"
"\n"
"        my $CountCreated = $Self->{TicketObject}->TicketSearch(\n"
"\n"
"            # cache search result 20 min\n"
"            CacheTTL => 60 * 20,\n"
"\n"
"            # tickets with create time after ... (ticket newer than this "
"date) (optional)\n"
"            TicketCreateTimeNewerDate => \"$Year-$Month-$Day 00:00:00\",\n"
"\n"
"            # tickets with created time before ... (ticket older than this "
"date) (optional)\n"
"            TicketCreateTimeOlderDate => \"$Year-$Month-$Day 23:59:59\",\n"
"\n"
"            CustomerID => $Param{Data}->{UserCustomerID},\n"
"            Result     => 'COUNT',\n"
"\n"
"            # search with user permissions\n"
"            Permission => $Self->{Config}->{Permission} || 'ro',\n"
"            UserID => $Self->{UserID},\n"
"        );\n"
"        $Data[$Key]->{Created} = $CountCreated;\n"
"        if ( $CountCreated > $Max ) {\n"
"            $Max = $CountCreated;\n"
"        }\n"
"\n"
"        my $CountClosed = $Self->{TicketObject}->TicketSearch(\n"
"\n"
"            # cache search result 20 min\n"
"            CacheTTL => 60 * 20,\n"
"\n"
"            # tickets with create time after ... (ticket newer than this "
"date) (optional)\n"
"            TicketCloseTimeNewerDate => \"$Year-$Month-$Day 00:00:00\",\n"
"\n"
"            # tickets with created time before ... (ticket older than this "
"date) (optional)\n"
"            TicketCloseTimeOlderDate => \"$Year-$Month-$Day 23:59:59\",\n"
"\n"
"            CustomerID => $Param{Data}->{UserCustomerID},\n"
"            Result     => 'COUNT',\n"
"\n"
"            # search with user permissions\n"
"            Permission => $Self->{Config}->{Permission} || 'ro',\n"
"            UserID => $Self->{UserID},\n"
"        );\n"
"        $Data[$Key]->{Closed} = $CountClosed;\n"
"        if ( $CountClosed > $Max ) {\n"
"            $Max = $CountClosed;\n"
"        }\n"
"    }\n"
"\n"
"    @Data = reverse @Data;\n"
"    my $Source = $Self->{LayoutObject}->JSONEncode(\n"
"        Data => \\@Data,\n"
"    );\n"
"\n"
"    my $Content = $Self->{LayoutObject}->Output(\n"
"        TemplateFile => 'AgentDashboardTicketStats',\n"
"        Data         => {\n"
"            %{ $Self->{Config} },\n"
"            Key    => int rand 99999,\n"
"            Max    => $Max,\n"
"            Source => $Source,\n"
"        },\n"
"    );\n"
"\n"
"    return $Content;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:169
msgid ""
"To use this module add the following to the "
"<filename>Kernel/Config.pm</filename> and restart your web server (if you "
"use <literal>mod_perl</literal>)."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:173
#, no-wrap
msgid ""
"<ConfigItem Name=\"DashboardBackend###0250-TicketStats\" Required=\"0\" "
"Valid=\"1\">\n"
"    <Description Lang=\"en\">Parameters for the dashboard backend. \"Group\" "
"are used to restricted access to the plugin (e. g. Group: "
"admin;group1;group2;). \"Default\" means if the plugin is enabled per "
"default or if the user needs to enable it manually. \"CacheTTL\" means the "
"cache time in minutes for the plugin.</Description>\n"
"    <Description Lang=\"de\">Parameter für das Dashboard Backend. \"Group\" "
"ist verwendet um den Zugriff auf das Plugin einzuschränken (z. B. Group: "
"admin;group1;group2;). \"\"Default\" bedeutet ob das Plugin per default "
"aktiviert ist oder ob dies der Anwender manuell machen muss. \"CacheTTL\" "
"ist die Cache-Zeit in Minuten nach der das Plugin erneut aufgerufen "
"wird.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::Agent::Dashboard</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item "
"Key=\"Module\">Kernel::Output::HTML::DashboardTicketStatsGeneric</Item>\n"
"            <Item Key=\"Title\">7 Day Stats</Item>\n"
"            <Item Key=\"Created\">1</Item>\n"
"            <Item Key=\"Closed\">1</Item>\n"
"            <Item Key=\"Permission\">rw</Item>\n"
"            <Item Key=\"Block\">ContentSmall</Item>\n"
"            <Item Key=\"Group\"></Item>\n"
"            <Item Key=\"Default\">1</Item>\n"
"            <Item Key=\"CacheTTL\">45</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:198
msgid ""
"An excessive number of days or individual lines may lead to performance "
"degradation."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dashboard.xml:204
msgid "From version 2.4.0."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:5
msgid "Invoker"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:7
msgid ""
"The invoker is used to create a request from OTRS to a Remote System. This "
"part of the GI is in charge of perform necessary tasks in OTRS side, to "
"gather the necessary data in order to construct the request."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:12
msgid "Invoker backend"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:14
msgid ""
"Next we will show how to develop a new Invoker. Each invoker has to "
"implement these subroutines:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:20 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:126 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:20 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:44 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:16 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:705
msgid "<literal>new</literal>"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:23
msgid "<literal>PrepareRequest</literal>"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:26
msgid "<literal>HandleResponse</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:31
msgid ""
"We should implement each one of this methods in order to be able to execute "
"a request using the request handler "
"(<filename>Kernel/GenericInterface/Requester.pm</filename>)."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:35 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:139 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:32 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:70 en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:88 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:36 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:716 en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:14 en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:26
msgid "Code example"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:37
msgid ""
"In this section a sample invoker module is shown and each subroutine is "
"explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:40
#, no-wrap
msgid ""
"# --\n"
"# Kernel/GenericInterface/Invoker/Test.pm - GenericInterface test data "
"Invoker backend\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::GenericInterface::Invoker::Test::Test;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::VariableCheck qw(IsString IsStringWithData);\n"
"\n"
"# prevent 'Used once' warning for Kernel::OM\n"
"use Kernel::System::ObjectManager;\n"
"\n"
"our $ObjectManagerDisabled = 1;\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:64
msgid ""
"This is common header that can be found in common OTRS modules. The "
"class/package name is declared via the <literal>package</literal> "
"keyword. Invokers can not be instantiated by the Object Manager."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:69
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed params\n"
"    if ( !$Param{DebuggerObject} ) {\n"
"        return {\n"
"            Success      => 0,\n"
"            ErrorMessage => \"Got no DebuggerObject!\"\n"
"        };\n"
"    }\n"
"\n"
"    $Self->{DebuggerObject} = $Param{DebuggerObject};\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:92 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:218 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:90 en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:134
msgid ""
"The constructor <literal>new</literal> creates a new instance of the "
"class. According to the coding guidelines only objects of other classes not "
"handled by the object manager that are needed in this module have to be "
"created in <literal>new</literal>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:97
#, no-wrap
msgid ""
"sub PrepareRequest {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # we need a TicketNumber\n"
"    if ( !IsStringWithData( $Param{Data}->{TicketNumber} ) ) {\n"
"        return $Self->{DebuggerObject}->Error( Summary => 'Got no "
"TicketNumber' );\n"
"    }\n"
"\n"
"    my %ReturnData;\n"
"\n"
"    $ReturnData{TicketNumber} = $Param{Data}->{TicketNumber};\n"
"\n"
"    # check Action\n"
"    if ( IsStringWithData( $Param{Data}->{Action} ) ) {\n"
"        $ReturnData{Action} = $Param{Data}->{Action} . 'Test';\n"
"    }\n"
"\n"
"    # check request for system time\n"
"    if ( IsStringWithData( $Param{Data}->{GetSystemTime} ) && "
"$Param{Data}->{GetSystemTime} ) {\n"
"        $ReturnData{SystemTime} = "
"$Kernel::OM->Get('Kernel::System::Time')->SystemTime();\n"
"    }\n"
"\n"
"    return {\n"
"        Success => 1,\n"
"        Data    => \\%ReturnData,\n"
"    };\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:128
msgid ""
"The <literal>PrepareRequest</literal> function is used to handle and collect "
"all needed data to be sent into the request. Here we can receive data from "
"the request handler, use it, extend it, generate new data, and after that, "
"we can transfer the results to the mapping layer."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:134
msgid ""
"For this example we are expecting to receive a ticket number. If there isn't "
"then we use the debugger method <code>Error()</code> that creates an entry "
"in the debug log and also returns a structure with the parameter "
"<literal>Success</literal> as 0 and an error message as the passed "
"<literal>Summary</literal>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:140
msgid ""
"Also this example appends the word \"Test\" to the parameter "
"<literal>Action</literal> and if <literal>GetSystemTime</literal> is "
"requested, it will fill the <literal>SystemTime</literal> parameter with the "
"current system time. This part of the code is to prepare the data to be "
"sent. On a real invoker some calls to core modules "
"(<filename>Kernel/System/*.pm</filename>) should be made here."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:146
msgid ""
"If during any part of the <literal>PrepareRequest</literal> function the "
"request need to be stop without generating and error an entry in the debug "
"log the following code can be used:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:151
#, no-wrap
msgid ""
"# stop requester communication\n"
"return {\n"
"    Success           => 1,\n"
"    StopCommunication => 1,\n"
"};\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:160
msgid ""
"Using this, the Requester will understand that the request should not "
"continue (it will not be sent to Mapping layer and will also not be sent to "
"the Network Transport). The Requester will not send an error on the debug "
"log, it will only silently stop."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:166
#, no-wrap
msgid ""
"sub HandleResponse {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # if there was an error in the response, forward it\n"
"    if ( !$Param{ResponseSuccess} ) {\n"
"        if ( !IsStringWithData( $Param{ResponseErrorMessage} ) ) {\n"
"\n"
"            return $Self->{DebuggerObject}->Error(\n"
"                Summary => 'Got response error, but no response error "
"message!',\n"
"            );\n"
"        }\n"
"\n"
"        return {\n"
"            Success      => 0,\n"
"            ErrorMessage => $Param{ResponseErrorMessage},\n"
"        };\n"
"    }\n"
"\n"
"    # we need a TicketNumber\n"
"    if ( !IsStringWithData( $Param{Data}->{TicketNumber} ) ) {\n"
"\n"
"        return $Self->{DebuggerObject}->Error( Summary => 'Got no "
"TicketNumber!' );\n"
"    }\n"
"\n"
"    # prepare TicketNumber\n"
"    my %ReturnData = (\n"
"        TicketNumber => $Param{Data}->{TicketNumber},\n"
"    );\n"
"\n"
"    # check Action\n"
"    if ( IsStringWithData( $Param{Data}->{Action} ) ) {\n"
"        if ( $Param{Data}->{Action} !~ m{ \\A ( .*? ) Test \\z }xms ) {\n"
"\n"
"            return $Self->{DebuggerObject}->Error(\n"
"                Summary => 'Got Action but it is not in required format!',\n"
"            );\n"
"        }\n"
"        $ReturnData{Action} = $1;\n"
"    }\n"
"\n"
"    return {\n"
"        Success => 1,\n"
"        Data    => \\%ReturnData,\n"
"    };\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:215
msgid ""
"The <literal>HandleResponse</literal> function is used to receive and "
"process the data from the previous request, that was made to the Remote "
"System. This data already passed by Mapping layer, to transform it from "
"Remote System format to OTRS format (if needed)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:221
msgid ""
"For this particular example it checks the ticket number again and check if "
"the action ends with the word 'Test' (as was done in the "
"<literal>PrepareRequest</literal> function)."
msgstr ""

#. type: Content of: <section><section><section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:226
msgid ""
"This invoker is only used for tests, a real invoker will check if the "
"response was on the format described by the Remote System and can perform "
"some actions like: call another invoker, perform a call to a Core Module, "
"update the database, send an error, etc."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:236
msgid ""
"There is the need to register this invoker module to be accessible in the "
"OTRS GUI.  This can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-invoker.xml:240
#, no-wrap
msgid ""
"<ConfigItem Name=\"GenericInterface::Invoker::Module###Test::Test\" "
"Required=\"0\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">GenericInterface module registration for "
"the invoker layer.</Description>\n"
"    <Group>GenericInterface</Group>\n"
"    <SubGroup>GenericInterface::Invoker::ModuleRegistration</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"Name\">Test</Item>\n"
"            <Item Key=\"Controller\">Test</Item>\n"
"            <Item "
"Key=\"ConfigDialog\">AdminGenericInterfaceInvokerDefault</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:5
msgid "Mapping"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:7
msgid ""
"The mapping is used to convert data from OTRS to the external systems, and "
"vice versa.  This data can be represented as key =&gt; value pairs. Mapping "
"modules can be developed to transform not just values but also the keys."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:12
msgid "<emphasis>For example:</emphasis>"
msgstr ""

#. type: Content of: <section><informaltable><tgroup><thead><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:18
msgid "From"
msgstr ""

#. type: Content of: <section><informaltable><tgroup><thead><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:19
msgid "To"
msgstr ""

#. type: Content of: <section><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:24
msgid "Prio =&gt; Warning"
msgstr ""

#. type: Content of: <section><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:25
msgid "PriorityID =&gt; 3"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:31
msgid ""
"The mapping layer is not absolutely necessary, a web service can skip it "
"completely depending on the web service configuration and how invokers and "
"operation are implemented.  But if some data transformations are needed, is "
"highly recommended to use an existing mapping module or create a new one."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:37
msgid ""
"Mapping modules can be called more than one time during a normal "
"communication, take a look to the following examples."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:41
msgid "<emphasis>OTRS as provider example:</emphasis>"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:47
msgid ""
"The remote system sends the request with the data in the remote system "
"format"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:52
msgid "The data is mapped from the remote system format to the OTRS format"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:57
msgid "OTRS performs the operation and return the response in OTRS format"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:62 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:85
msgid "The data is mapped from the OTRS format to the remote system format"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:67
msgid ""
"The response with the data in the remote system format is sent to the remote "
"system"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:44 en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:77
msgid "<placeholder type=\"orderedlist\" id=\"0\"/>"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:74
msgid "<emphasis>OTRS as requester example:</emphasis>"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:80
msgid ""
"OTRS prepares the request to the remote system using the data in the OTRS "
"format"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:90
msgid ""
"The request is sent to the remote system which performs the action and sends "
"the response back to OTRS with the data in remote system format"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:96
msgid "The data is mapped form remote system format (again) to the OTRS format"
msgstr ""

#. type: Content of: <section><para><orderedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:101
msgid "OTRS processes the response"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:107
msgid "Mapping backend"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:109
msgid ""
"Generic Interface provides a mapping module called "
"<emphasis>Simple</emphasis>.  With this module most of the data "
"transformations including key and value mapping can be done, and also it "
"defines rules for to handling the default mappings for both keys and values."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:115
msgid ""
"So it is highly probable that you don't need to develop a custom mapping "
"module.  Please check <emphasis>Simple</emphasis> mapping module "
"(<filename>Kernel/GenericInterface/Mapping/Simple.pm</filename>)  and its "
"on-line documentation before continue."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:120
msgid ""
"If <emphasis>Simple</emphasis> mapping module does not match your needs then "
"we will show how to develop a new mapping backend. Each mapping backend has "
"to implement these subroutines:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:129
msgid "<literal>Map</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:134
msgid ""
"We should implement each one of this methods in order to be able to map the "
"data in the communication, handled either by the requester or provider. All "
"mapping backends are handled by the mapping module "
"(<filename>Kernel/GenericInterface/Mapping.pm</filename>)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:141
msgid ""
"In this section a sample mapping module is shown and each subroutine is "
"explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:144
#, no-wrap
msgid ""
"# --\n"
"# Kernel/GenericInterface/Mapping/Test.pm - GenericInterface test data "
"mapping backend\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::GenericInterface::Mapping::Test;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::VariableCheck qw(IsHashRefWithData IsStringWithData);\n"
"\n"
"our $ObjectManagerDisabled = 1;\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:165 en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:58 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:56 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:57 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:38
msgid ""
"This is common header that can be found in common OTRS modules. The "
"class/package name is declared via the <literal>package</literal> keyword."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:169
msgid ""
"We also include <literal>VariableCheck</literal> module to perform certain "
"validation over some variables. Mappings can not be instantiated by the "
"Object Manager."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:173
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed params\n"
"    for my $Needed (qw(DebuggerObject MappingConfig)) {\n"
"        if ( !$Param{$Needed} ) {\n"
"\n"
"            return {\n"
"                Success      => 0,\n"
"                ErrorMessage => \"Got no $Needed!\"\n"
"            };\n"
"        }\n"
"        $Self->{$Needed} = $Param{$Needed};\n"
"    }\n"
"\n"
"    # check mapping config\n"
"    if ( !IsHashRefWithData( $Param{MappingConfig} ) ) {\n"
"\n"
"        return $Self->{DebuggerObject}->Error(\n"
"            Summary => 'Got no MappingConfig as hash ref with content!',\n"
"        );\n"
"    }\n"
"\n"
"    # check config - if we have a map config, it has to be a non-empty hash "
"ref\n"
"    if (\n"
"        defined $Param{MappingConfig}->{Config}\n"
"        && !IsHashRefWithData( $Param{MappingConfig}->{Config} )\n"
"        )\n"
"    {\n"
"\n"
"        return $Self->{DebuggerObject}->Error(\n"
"            Summary => 'Got MappingConfig with Data, but Data is no hash ref "
"with content!',\n"
"        );\n"
"    }\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:223
#, no-wrap
msgid ""
"sub Map {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check data - only accept undef or hash ref\n"
"    if ( defined $Param{Data} && ref $Param{Data} ne 'HASH' ) {\n"
"\n"
"        return $Self->{DebuggerObject}->Error(\n"
"            Summary => 'Got Data but it is not a hash ref in Mapping Test "
"backend!'\n"
"        );\n"
"    }\n"
"\n"
"    # return if data is empty\n"
"    if ( !defined $Param{Data} || !%{ $Param{Data} } ) {\n"
"\n"
"        return {\n"
"            Success => 1,\n"
"            Data    => {},\n"
"        };\n"
"    }\n"
"\n"
"    # no config means that we just return input data\n"
"    if (\n"
"        !defined $Self->{MappingConfig}->{Config}\n"
"        || !defined $Self->{MappingConfig}->{Config}->{TestOption}\n"
"        )\n"
"    {\n"
"\n"
"        return {\n"
"            Success => 1,\n"
"            Data    => $Param{Data},\n"
"        };\n"
"    }\n"
"\n"
"    # check TestOption format\n"
"    if ( !IsStringWithData( $Self->{MappingConfig}->{Config}->{TestOption} ) "
") {\n"
"\n"
"        return $Self->{DebuggerObject}->Error(\n"
"            Summary => 'Got no TestOption as string with value!',\n"
"        );\n"
"    }\n"
"\n"
"    # parse data according to configuration\n"
"    my $ReturnData = {};\n"
"    if ( $Self->{MappingConfig}->{Config}->{TestOption} eq 'ToUpper' ) {\n"
"        $ReturnData = $Self->_ToUpper( Data => $Param{Data} );\n"
"    }\n"
"    elsif ( $Self->{MappingConfig}->{Config}->{TestOption} eq 'ToLower' ) "
"{\n"
"        $ReturnData = $Self->_ToLower( Data => $Param{Data} );\n"
"    }\n"
"    elsif ( $Self->{MappingConfig}->{Config}->{TestOption} eq 'Empty' ) {\n"
"        $ReturnData = $Self->_Empty( Data => $Param{Data} );\n"
"    }\n"
"    else {\n"
"        $ReturnData = $Param{Data};\n"
"    }\n"
"\n"
"    # return result\n"
"    return {\n"
"        Success => 1,\n"
"        Data    => $ReturnData,\n"
"    };\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:289
msgid ""
"The <literal>Map</literal> function is the main part of each mapping "
"module. It receives the mapping configuration (rules) and the data in the "
"original format (either OTRS or remote system format) and converts it to a "
"new format, even if the structure of the data can be changed during the "
"mapping process."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:295
msgid ""
"In this particular example there are three rules to map the values. This "
"rules are set in the mapping configuration key <literal>TestOption</literal> "
"and they are <literal>ToUpper</literal>, <literal>ToLower</literal> and "
"<literal>Empty</literal>."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:302
msgid "<literal>ToUpper</literal>: converts each data value to upper case."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:307
msgid "<literal>ToLower</literal>: converts each data value to lower case."
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:312
msgid "<literal>Empty</literal>: converts each data value into an empty string."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:317
msgid "In this example no data key transformations were implemented."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:320
#, no-wrap
msgid ""
"sub _ToUpper {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $ReturnData = {};\n"
"    for my $Key ( sort keys %{ $Param{Data} } ) {\n"
"        $ReturnData->{$Key} = uc $Param{Data}->{$Key};\n"
"    }\n"
"\n"
"    return $ReturnData;\n"
"}\n"
"\n"
"sub _ToLower {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $ReturnData = {};\n"
"    for my $Key ( sort keys %{ $Param{Data} } ) {\n"
"        $ReturnData->{$Key} = lc $Param{Data}->{$Key};\n"
"    }\n"
"\n"
"    return $ReturnData;\n"
"}\n"
"\n"
"sub _Empty {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $ReturnData = {};\n"
"    for my $Key ( sort keys %{ $Param{Data} } ) {\n"
"        $ReturnData->{$Key} = '';\n"
"    }\n"
"\n"
"    return $ReturnData;\n"
"}\n"
"\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:357
msgid "This are the helper functions that actually performs the string conversions."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:363
msgid ""
"There is the need to register this mapping module to be accessible in the "
"OTRS GUI.  This can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-mapping.xml:367
#, no-wrap
msgid ""
"<ConfigItem Name=\"GenericInterface::Mapping::Module###Test\" Required=\"0\" "
"Valid=\"1\">\n"
"    <Description Translatable=\"1\">GenericInterface module registration for "
"the mapping layer.</Description>\n"
"    <Group>GenericInterface</Group>\n"
"    <SubGroup>GenericInterface::Mapping::ModuleRegistration</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"ConfigDialog\"></Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:5
msgid "Operation"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:7
msgid ""
"The operation is used to perform an action within OTRS. This action is "
"requested by the external system and can include special parameters in order "
"to correctly execute the action.  After the action is performed, OTRS sends "
"a defined confirmation to the external system."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:12
msgid "Operation backend"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:14
msgid ""
"Next we will show how to develop a new Operation, each operation has to "
"implement these subroutines:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:23 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:711
msgid "<literal>Run</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:28
msgid ""
"We should implement each one of this methods in order to be able to execute "
"the action handled by the provider "
"(<filename>Kernel/GenericInterface/Provider.pm</filename>)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:34
msgid ""
"In this section a sample operation module is shown and each subroutine is "
"explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:37
#, no-wrap
msgid ""
"# --\n"
"# Kernel/GenericInterface/Operation/Test/Test.pm - GenericInterface test "
"operation backend\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::GenericInterface::Operation::Test::Test;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::VariableCheck qw(IsHashRefWithData);\n"
"\n"
"our $ObjectManagerDisabled = 1;\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:62
msgid ""
"We also include <literal>VariableCheck</literal> module to perform certain "
"validation over some variables. Operations can not be instantiated by the "
"Object Manager."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:66
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for my $Needed (qw(DebuggerObject)) {\n"
"        if ( !$Param{$Needed} ) {\n"
"            return {\n"
"                Success      => 0,\n"
"                ErrorMessage => \"Got no $Needed!\"\n"
"            };\n"
"        }\n"
"\n"
"        $Self->{$Needed} = $Param{$Needed};\n"
"    }\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:95
#, no-wrap
msgid ""
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check data - only accept undef or hash ref\n"
"    if ( defined $Param{Data} && ref $Param{Data} ne 'HASH' ) {\n"
"\n"
"        return $Self->{DebuggerObject}->Error(\n"
"            Summary => 'Got Data but it is not a hash ref in Operation Test "
"backend)!'\n"
"        );\n"
"    }\n"
"\n"
"    if ( defined $Param{Data} && $Param{Data}->{TestError} ) {\n"
"\n"
"        return {\n"
"            Success      => 0,\n"
"            ErrorMessage => \"Error message for error code: "
"$Param{Data}->{TestError}\",\n"
"            Data         => {\n"
"                ErrorData => $Param{Data}->{ErrorData},\n"
"            },\n"
"        };\n"
"    }\n"
"\n"
"    # copy data\n"
"    my $ReturnData;\n"
"\n"
"    if ( ref $Param{Data} eq 'HASH' ) {\n"
"        $ReturnData = \\%{ $Param{Data} };\n"
"    }\n"
"    else {\n"
"        $ReturnData = undef;\n"
"    }\n"
"\n"
"    # return result\n"
"    return {\n"
"        Success => 1,\n"
"        Data    => $ReturnData,\n"
"    };\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:137
msgid ""
"The <literal>Run</literal> function is the main part of each operation. It "
"receives all internal mapped data from remote system needed by the provider "
"to execute the action, it performs the action and returns the result to the "
"provider to be external mapped and deliver back to the remote system."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:143
msgid ""
"This particular example returns the same data as came from the remote "
"system, unless <literal>TestError</literal> parameter is passed. In this "
"case it returns an error."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:150
msgid ""
"There is the need to register this operation module to be accessible in the "
"OTRS GUI. This can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:154
#, no-wrap
msgid ""
"<ConfigItem Name=\"GenericInterface::Operation::Module###Test::Test\" "
"Required=\"0\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">GenericInterface module registration for "
"the operation layer.</Description>\n"
"    <Group>GenericInterface</Group>\n"
"    <SubGroup>GenericInterface::Operation::ModuleRegistration</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"Name\">Test</Item>\n"
"            <Item Key=\"Controller\">Test</Item>\n"
"            <Item "
"Key=\"ConfigDialog\">AdminGenericInterfaceOperationDefault</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:171
msgid "Unit Test Example"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:173
msgid ""
"Unit Test for Generic Interface operations does not differs from other unit "
"tests but it is needed to consider testing locally, but also simulating a "
"remote connection. It is a good practice to test both separately since "
"results could be slightly different."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:179
msgid ""
"To learn more about unit tests, please take a look to the <link "
"linkend=\"unit-tests\">Unit Test Chapter</link>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:183
msgid "The following is just the starting point for a unit test:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:186
#, no-wrap
msgid ""
"# --\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"## no critic (Modules::RequireExplicitPackage)\n"
"use strict;\n"
"use warnings;\n"
"use utf8;\n"
"\n"
"use vars (qw($Self));\n"
"\n"
"use Kernel::GenericInterface::Debugger;\n"
"use Kernel::GenericInterface::Operation::Test::Test;\n"
"\n"
"use Kernel::System::VariableCheck qw(:all);\n"
"\n"
"# Skip SSL certificate verification (RestoreDatabase must not be used in "
"this test).\n"
"$Kernel::OM->ObjectParamAdd(\n"
"    'Kernel::System::UnitTest::Helper' => {\n"
"        SkipSSLVerify => 1,\n"
"    },\n"
");\n"
"my $Helper = $Kernel::OM->Get('Kernel::System::UnitTest::Helper');\n"
"\n"
"# get a random number\n"
"my $RandomID = $Helper->GetRandomNumber();\n"
"\n"
"# create a new user for current test\n"
"my $UserLogin = $Helper->TestUserCreate(\n"
"    Groups => ['users'],\n"
");\n"
"my $Password = $UserLogin;\n"
"\n"
"my $UserID = $Kernel::OM->Get('Kernel::System::User')->UserLookup(\n"
"    UserLogin => $UserLogin,\n"
");\n"
"\n"
"# set web-service name\n"
"my $WebserviceName = '-Test-' . $RandomID;\n"
"\n"
"# create web-service object\n"
"my $WebserviceObject = "
"$Kernel::OM->Get('Kernel::System::GenericInterface::Webservice');\n"
"$Self->Is(\n"
"    'Kernel::System::GenericInterface::Webservice',\n"
"    ref $WebserviceObject,\n"
"    \"Create web service object\",\n"
");\n"
"\n"
"my $WebserviceID = $WebserviceObject->WebserviceAdd(\n"
"    Name   => $WebserviceName,\n"
"    Config => {\n"
"        Debugger => {\n"
"            DebugThreshold => 'debug',\n"
"        },\n"
"        Provider => {\n"
"            Transport => {\n"
"                Type => '',\n"
"            },\n"
"        },\n"
"    },\n"
"    ValidID => 1,\n"
"    UserID  => 1,\n"
");\n"
"$Self->True(\n"
"    $WebserviceID,\n"
"    \"Added Web Service\",\n"
");\n"
"\n"
"# get remote host with some precautions for certain unit test systems\n"
"my $Host = $Helper->GetTestHTTPHostname();\n"
"\n"
"my $ConfigObject = $Kernel::OM->Get('Kernel::Config');\n"
"\n"
"# prepare web-service config\n"
"my $RemoteSystem =\n"
"    $ConfigObject->Get('HttpType')\n"
"    . '://'\n"
"    . $Host\n"
"    . '/'\n"
"    . $ConfigObject->Get('ScriptAlias')\n"
"    . '/nph-genericinterface.pl/WebserviceID/'\n"
"    . $WebserviceID;\n"
"\n"
"my $WebserviceConfig = {\n"
"    Description =>\n"
"        'Test for Ticket Connector using SOAP transport backend.',\n"
"    Debugger => {\n"
"        DebugThreshold => 'debug',\n"
"        TestMode       => 1,\n"
"    },\n"
"    Provider => {\n"
"        Transport => {\n"
"            Type   => 'HTTP::SOAP',\n"
"            Config => {\n"
"                MaxLength => 10000000,\n"
"                NameSpace => 'http://otrs.org/SoapTestInterface/',\n"
"                Endpoint  => $RemoteSystem,\n"
"            },\n"
"        },\n"
"        Operation => {\n"
"            Test => {\n"
"                Type => 'Test::Test',\n"
"            },\n"
"        },\n"
"    },\n"
"    Requester => {\n"
"        Transport => {\n"
"            Type   => 'HTTP::SOAP',\n"
"            Config => {\n"
"                NameSpace => 'http://otrs.org/SoapTestInterface/',\n"
"                Encoding  => 'UTF-8',\n"
"                Endpoint  => $RemoteSystem,\n"
"            },\n"
"        },\n"
"        Invoker => {\n"
"            Test => {\n"
"                Type => 'Test::TestSimple'\n"
"                ,    # requester needs to be Test::TestSimple in order to "
"simulate a request to a remote system\n"
"            },\n"
"        },\n"
"    },\n"
"};\n"
"\n"
"# update web-service with real config\n"
"# the update is needed because we are using\n"
"# the WebserviceID for the Endpoint in config\n"
"my $WebserviceUpdate = $WebserviceObject->WebserviceUpdate(\n"
"    ID      => $WebserviceID,\n"
"    Name    => $WebserviceName,\n"
"    Config  => $WebserviceConfig,\n"
"    ValidID => 1,\n"
"    UserID  => $UserID,\n"
");\n"
"$Self->True(\n"
"    $WebserviceUpdate,\n"
"    \"Updated Web Service $WebserviceID - $WebserviceName\",\n"
");\n"
"\n"
"# debugger object\n"
"my $DebuggerObject = Kernel::GenericInterface::Debugger->new(\n"
"    DebuggerConfig => {\n"
"        DebugThreshold => 'debug',\n"
"        TestMode       => 1,\n"
"    },\n"
"    WebserviceID      => $WebserviceID,\n"
"    CommunicationType => 'Provider',\n"
");\n"
"$Self->Is(\n"
"    ref $DebuggerObject,\n"
"    'Kernel::GenericInterface::Debugger',\n"
"    'DebuggerObject instantiate correctly',\n"
");\n"
"\n"
"# define test cases\n"
"my @Tests = (\n"
"    {\n"
"        Name           => 'Test case name',\n"
"        SuccessRequest => 1,                  # 1 or 0\n"
"        RequestData    => {\n"
"\n"
"            # ... add test data\n"
"        },\n"
"        ExpectedReturnLocalData => {\n"
"            Data => {\n"
"\n"
"                # ... add expected local results\n"
"            },\n"
"            Success => 1,                     # 1 or 0\n"
"        },\n"
"        ExpectedReturnRemoteData => {\n"
"            Data => {\n"
"\n"
"                # ... add expected remote results\n"
"            },\n"
"            Success => 1,                     # 1 or 0\n"
"        },\n"
"        Operation => 'Test',\n"
"    },\n"
"\n"
"    # ... add more test cases\n"
");\n"
"\n"
"TEST:\n"
"for my $Test (@Tests) {\n"
"\n"
"    # create local object\n"
"    my $LocalObject = "
"\"Kernel::GenericInterface::Operation::Test::$Test->{Operation}\"->new(\n"
"        DebuggerObject => $DebuggerObject,\n"
"        WebserviceID   => $WebserviceID,\n"
"    );\n"
"\n"
"    $Self->Is(\n"
"        \"Kernel::GenericInterface::Operation::Test::$Test->{Operation}\",\n"
"        ref $LocalObject,\n"
"        \"$Test->{Name} - Create local object\",\n"
"    );\n"
"\n"
"    my %Auth = (\n"
"        UserLogin => $UserLogin,\n"
"        Password  => $Password,\n"
"    );\n"
"    if ( IsHashRefWithData( $Test->{Auth} ) ) {\n"
"        %Auth = %{ $Test->{Auth} };\n"
"    }\n"
"\n"
"    # start requester with our web-service\n"
"    my $LocalResult = $LocalObject->Run(\n"
"        WebserviceID => $WebserviceID,\n"
"        Invoker      => $Test->{Operation},\n"
"        Data         => {\n"
"            %Auth,\n"
"            %{ $Test->{RequestData} },\n"
"        },\n"
"    );\n"
"\n"
"    # check result\n"
"    $Self->Is(\n"
"        'HASH',\n"
"        ref $LocalResult,\n"
"        \"$Test->{Name} - Local result structure is valid\",\n"
"    );\n"
"\n"
"    # create requester object\n"
"    my $RequesterObject = "
"$Kernel::OM->Get('Kernel::GenericInterface::Requester');\n"
"    $Self->Is(\n"
"        'Kernel::GenericInterface::Requester',\n"
"        ref $RequesterObject,\n"
"        \"$Test->{Name} - Create requester object\",\n"
"    );\n"
"\n"
"    # start requester with our web-service\n"
"    my $RequesterResult = $RequesterObject->Run(\n"
"        WebserviceID => $WebserviceID,\n"
"        Invoker      => $Test->{Operation},\n"
"        Data         => {\n"
"            %Auth,\n"
"            %{ $Test->{RequestData} },\n"
"        },\n"
"    );\n"
"\n"
"    # check result\n"
"    $Self->Is(\n"
"        'HASH',\n"
"        ref $RequesterResult,\n"
"        \"$Test->{Name} - Requester result structure is valid\",\n"
"    );\n"
"\n"
"    $Self->Is(\n"
"        $RequesterResult->{Success},\n"
"        $Test->{SuccessRequest},\n"
"        \"$Test->{Name} - Requester successful result\",\n"
"    );\n"
"\n"
"    # ... add tests for the results\n"
"}\n"
"\n"
"# delete web service\n"
"my $WebserviceDelete = $WebserviceObject->WebserviceDelete(\n"
"    ID     => $WebserviceID,\n"
"    UserID => $UserID,\n"
");\n"
"$Self->True(\n"
"    $WebserviceDelete,\n"
"    \"Deleted Web Service $WebserviceID\",\n"
");\n"
"\n"
"# also delete any other added data during the this test, since "
"RestoreDatabase must not be used.\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:464
msgid "WSDL Extension Example"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:466
msgid ""
"WSDL files contain the definitions of the web services and its operations "
"for SOAP messages, in case we will extend "
"<filename>development/webservices/GenericTickeConnectorSOAP.wsdl</filename> "
"in some places:"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:472
msgid "Port Type:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:475
#, no-wrap
msgid ""
"    <wsdl:portType name=\"GenericTicketConnector_PortType\">\n"
"        <!-- ... -->\n"
"        <wsdl:operation name=\"Test\">\n"
"            <wsdl:input message=\"tns:TestRequest\"/>\n"
"            <wsdl:output message=\"tns:TestResponse\"/>\n"
"        </wsdl:operation>\n"
"    <!-- ... -->\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:486
msgid "Binding:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:489
#, no-wrap
msgid ""
"    <wsdl:binding name=\"GenericTicketConnector_Binding\" "
"type=\"tns:GenericTicketConnector_PortType\">\n"
"        <soap:binding style=\"document\" "
"transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n"
"        <!-- ... -->\n"
"        <wsdl:operation name=\"Test\">\n"
"            <soap:operation "
"soapAction=\"http://www.otrs.org/TicketConnector/Test\"/>\n"
"            <wsdl:input>\n"
"                <soap:body use=\"literal\"/>\n"
"            </wsdl:input>\n"
"            <wsdl:output>\n"
"                <soap:body use=\"literal\"/>\n"
"            </wsdl:output>\n"
"        </wsdl:operation>\n"
"        <!-- ... -->\n"
"    </wsdl:binding>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:507
msgid "Type:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:510
#, no-wrap
msgid ""
"    <wsdl:types>\n"
"        <xsd:schema targetNamespace=\"http://www.otrs.org/TicketConnector/\" "
"xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n"
"        <!-- ... -->\n"
"            <xsd:element name=\"Test\">\n"
"                <xsd:complexType>\n"
"                    <xsd:sequence>\n"
"                            <xsd:element minOccurs=\"0\" name=\"Param1\" "
"type=\"xsd:string\"/>\n"
"                            <xsd:element minOccurs=\"0\" name=\"Param2\" "
"type=\"xsd:positiveInteger\"/>\n"
"                    </xsd:sequence>\n"
"                </xsd:complexType>\n"
"            </xsd:element>\n"
"            <xsd:element name=\"TestResponse\">\n"
"                <xsd:complexType>\n"
"                    <xsd:sequence>\n"
"                        <xsd:element maxOccurs=\"unbounded\" minOccurs=\"1\" "
"name=\"Attribute1\" type=\"xsd:string\"/>\n"
"                    </xsd:sequence>\n"
"                </xsd:complexType>\n"
"            </xsd:element>\n"
"        <!-- ... -->\n"
"        </xsd:schema>\n"
"    </wsdl:types>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:535
msgid "Message:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:538
#, no-wrap
msgid ""
"    <!-- ... -->\n"
"    <wsdl:message name=\"TestRequest\">\n"
"        <wsdl:part element=\"tns:Test\" name=\"parameters\"/>\n"
"    </wsdl:message>\n"
"    <wsdl:message name=\"TestResponse\">\n"
"        <wsdl:part element=\"tns:TestResponse\" name=\"parameters\"/>\n"
"    </wsdl:message>\n"
"    <!-- ... -->\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:551
msgid "WADL Extension Example"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:553
msgid ""
"WADL files contain the definitions of the web services and its operations "
"for REST interface, add a new resource to "
"<filename>development/webservices/GenericTickeConnectorREST.wadl</filename>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:558
#, no-wrap
msgid ""
"  <resources "
"base=\"http://localhost/otrs/nph-genericinterface.pl/Webservice/GenericTicketConnectorREST\">\n"
"    <!-- ... -->\n"
"    <resource path=\"Test\" id=\"Test\">\n"
"      <doc xml:lang=\"en\" title=\"Test\"/>\n"
"        <param name=\"Param1\" type=\"xs:string\" required=\"false\" "
"default=\"\" style=\"query\" "
"xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"/>\n"
"        <param name=\"Param2\" type=\"xs:string\" required=\"false\" "
"default=\"\" style=\"query\" "
"xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"/>\n"
"        <method name=\"GET\" id=\"GET_Test\">\n"
"          <doc xml:lang=\"en\" title=\"GET_Test\"/>\n"
"          <request/>\n"
"          <response status=\"200\">\n"
"            <representation mediaType=\"application/json; "
"charset=UTF-8\"/>\n"
"          </response>\n"
"        </method>\n"
"      </resource>\n"
"    </resource>\n"
"    <!-- ... -->\n"
"  </resources>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:580
msgid "Web Service SOAP Extension Example"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:582
msgid ""
"Web services can be imported into OTRS by a YAML with a predefined structure "
"in this case we will extend "
"<filename>development/webservices/GenericTickeConnectorSOAP.yml</filename> "
"for a SOAP web service."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:588
#, no-wrap
msgid ""
"Provider:\n"
"  Operation:\n"
"    # ...\n"
"    Test:\n"
"      Description: This is only a test\n"
"      MappingInbound: {}\n"
"      MappingOutbound: {}\n"
"      Type: Test::Test\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:601
msgid "Web Service REST Extension Example"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:603
msgid ""
"Web services can be imported into OTRS by a YAML with a predefined structure "
"in this case we will extend "
"<filename>development/webservices/GenericTickeConnectorREST.yml</filename> "
"for a REST web service."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-operation.xml:609
#, no-wrap
msgid ""
"Provider:\n"
"  Operation:\n"
"    # ...\n"
"    Test:\n"
"      Description: This is only a test\n"
"      MappingInbound: {}\n"
"      MappingOutbound: {}\n"
"      Type: Test::Test\n"
"  # ...\n"
"  Transport:\n"
"    Config:\n"
"      # ...\n"
"      RouteOperationMapping:\n"
"        # ..\n"
"        Test:\n"
"          RequestMethod:\n"
"          - GET\n"
"          Route: /Test\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:5
msgid "Network Transport"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:7
msgid ""
"The network transport is used as method to send and receive information "
"between OTRS and a Remote System. The Generic Interface configuration allows "
"a web service to use different network transport modules for provider and "
"requester, but the most common scenario is that the same transport module is "
"used for both."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:13
msgid "<emphasis>OTRS as provider:</emphasis>"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:16
msgid ""
"OTRS uses the network transport modules to get the data from the Remote "
"System and the operation to be executed. After the operation is performed "
"OTRS uses them again to send the response back to the Remote System."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:21
msgid "<emphasis>OTRS as requester:</emphasis>"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:24
msgid ""
"OTRS uses the network transport modules to send petitions to the Remote "
"System to perform a remote action along with the required data. OTRS waits "
"for the Remote System response and send it back to the Requester module."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:29
msgid ""
"In both ways network transport modules deal with the data in the Remote "
"System format. It is not recommended to do any data transformation in this "
"modules, as the Mapping layer is the responsible to perform any data "
"transformation needed during the communication. An exception of this is the "
"data conversion that is required specifically by for the transport e.g. XML "
"or JSON from / to Perl conversions."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:36
msgid "Transport backend"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:38
msgid ""
"Next we will show how to develop a new transport backend. Each transport "
"backend has to implement these subroutines:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:47
msgid "<literal>ProviderProcessRequest</literal>"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:50
msgid "<literal>ProviderGenerateResponse</literal>"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:53
msgid "<literal>RequesterPerformRequest</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:58
msgid ""
"We should implement each one of this methods in order to be able to "
"communicate correctly with a Remote System in both ways. All network "
"transport backends are handled by the transport module "
"(<filename>Kernel/GenericInterface/Transport.pm</filename>)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:63
msgid ""
"Currently Generic Interface implements the HTTP SOAP and HTTP REST "
"transports. If the planned web service can use HTTP SOAP or HTTP SOAP there "
"is no need to create a new network transport module, instead we recommend to "
"take a look into HTTP SOAP or HTTP REST configurations to check their "
"settings and how it can be tuned according to the remote system."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:72
msgid ""
"In case that the provided network transports does not match the web service "
"needs, then in this section a sample network transport module is shown and "
"each subroutine is explained. Normally transport modules uses CPAN modules "
"as backends. For example the HTTP SOAP transport modules uses "
"<literal>SOAP::Lite</literal> module as backend."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:78
msgid ""
"For this example a custom package is used to return the data without doing a "
"real network request to a Remote System, instead this custom module acts as "
"a loop-back interface."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:83
#, no-wrap
msgid ""
"# --\n"
"# Kernel/GenericInterface/Transport/HTTP/Test.pm - GenericInterface network "
"transport interface for testing\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::GenericInterface::Transport::HTTP::Test;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use HTTP::Request::Common;\n"
"use LWP::UserAgent;\n"
"use LWP::Protocol;\n"
"\n"
"# prevent 'Used once' warning for Kernel::OM\n"
"use Kernel::System::ObjectManager;\n"
"\n"
"our $ObjectManagerDisabled = 1;\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:109
msgid ""
"This is common header that can be found in common OTRS modules. The "
"class/package name is declared via the <literal>package</literal> "
"keyword. Transports can not be instantiated by the Object Manager."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:114
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    for my $Needed (qw( DebuggerObject TransportConfig)) {\n"
"        $Self->{$Needed} = $Param{$Needed} || return {\n"
"            Success      => 0,\n"
"            ErrorMessage => \"Got no $Needed!\"\n"
"        };\n"
"    }\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:139
#, no-wrap
msgid ""
"sub ProviderProcessRequest {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    if ( $Self->{TransportConfig}->{Config}->{Fail} ) {\n"
"\n"
"        return {\n"
"            Success      => 0,\n"
"            ErrorMessage => \"HTTP status code: 500\",\n"
"            Data         => {},\n"
"        };\n"
"    }\n"
"\n"
"    my $ParamObject = $Kernel::OM->Get('Kernel::System::Web::Request');\n"
"\n"
"    my %Result;\n"
"    for my $ParamName ( $ParamObject->GetParamNames() ) {\n"
"        $Result{$ParamName} = $ParamObject->GetParam( Param => $ParamName "
");\n"
"    }\n"
"\n"
"    # special handling for empty post request\n"
"    if ( scalar keys %Result == 1 && exists $Result{POSTDATA} && "
"!$Result{POSTDATA} ) {\n"
"        %Result = ();\n"
"    }\n"
"\n"
"    if ( !%Result ) {\n"
"\n"
"        return $Self->{DebuggerObject}->Error(\n"
"            Summary => 'No request data found.',\n"
"        );\n"
"    }\n"
"\n"
"    return {\n"
"        Success   => 1,\n"
"        Data      => \\%Result,\n"
"        Operation => 'test_operation',\n"
"    };\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:180
msgid ""
"The <literal>ProviderProcessRequest</literal> function gets the request from "
"the Remote System (in this case the same OTRS) and extracts the data and the "
"operation to perform from the request. For this example the operation is "
"always <literal>test_operation</literal>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:185
msgid ""
"The way this function parses the request to get the data and the operation "
"name, depends completely on the protocol to be implemented and the external "
"modules that are used for."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:190
#, no-wrap
msgid ""
"sub ProviderGenerateResponse {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    if ( $Self->{TransportConfig}->{Config}->{Fail} ) {\n"
"\n"
"        return {\n"
"            Success      => 0,\n"
"            ErrorMessage => 'Test response generation failed',\n"
"        };\n"
"    }\n"
"\n"
"    my $Response;\n"
"\n"
"    if ( !$Param{Success} ) {\n"
"        $Response\n"
"            = HTTP::Response->new( 500 => ( $Param{ErrorMessage} || "
"'Internal Server Error' ) );\n"
"        $Response->protocol('HTTP/1.0');\n"
"        $Response->content_type(\"text/plain; charset=UTF-8\");\n"
"        $Response->date(time);\n"
"    }\n"
"    else {\n"
"\n"
"        # generate a request string from the data\n"
"        my $Request\n"
"            = HTTP::Request::Common::POST( 'http://testhost.local/', Content "
"=> $Param{Data} );\n"
"\n"
"        $Response = HTTP::Response->new( 200 => \"OK\" );\n"
"        $Response->protocol('HTTP/1.0');\n"
"        $Response->content_type(\"text/plain; charset=UTF-8\");\n"
"        $Response->add_content_utf8( $Request->content() );\n"
"        $Response->date(time);\n"
"    }\n"
"\n"
"    $Self->{DebuggerObject}->Debug(\n"
"        Summary => 'Sending HTTP response',\n"
"        Data    => $Response->as_string(),\n"
"    );\n"
"\n"
"    # now send response to client\n"
"    print STDOUT $Response->as_string();\n"
"\n"
"    return {\n"
"        Success => 1,\n"
"    };\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:239
msgid ""
"This function sends the response back to the Remote System for the requested "
"operation."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:243
msgid ""
"For this particular example we return a standard HTTP response success (200) "
"or not (500), along with the required data on each case."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:247
#, no-wrap
msgid ""
"sub RequesterPerformRequest {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    if ( $Self->{TransportConfig}->{Config}->{Fail} ) {\n"
"\n"
"        return {\n"
"            Success      => 0,\n"
"            ErrorMessage => \"HTTP status code: 500\",\n"
"            Data         => {},\n"
"        };\n"
"    }\n"
"\n"
"    # use custom protocol handler to avoid sending out real network "
"requests\n"
"    LWP::Protocol::implementor(\n"
"        testhttp => "
"'Kernel::GenericInterface::Transport::HTTP::Test::CustomHTTPProtocol'\n"
"    );\n"
"    my $UserAgent = LWP::UserAgent->new();\n"
"    my $Response = $UserAgent->post( 'testhttp://localhost.local/', Content "
"=> $Param{Data} );\n"
"\n"
"    return {\n"
"        Success => 1,\n"
"        Data    => {\n"
"            ResponseContent => $Response->content(),\n"
"        },\n"
"    };\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:277
msgid ""
"This is the only function that is used by OTRS as requester. It sends the "
"request to the Remote System and waits for its response."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:281
msgid ""
"For this example we use a custom protocol handler to avoid send the request "
"to the real network. This custom protocol is specified below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:285
#, no-wrap
msgid ""
"package "
"Kernel::GenericInterface::Transport::HTTP::Test::CustomHTTPProtocol;\n"
"\n"
"use base qw(LWP::Protocol);\n"
"\n"
"sub new {\n"
"    my $Class = shift;\n"
"\n"
"    return $Class->SUPER::new(@_);\n"
"}\n"
"\n"
"sub request {    ## no critic\n"
"    my $Self = shift;\n"
"\n"
"    my ( $Request, $Proxy, $Arg, $Size, $Timeout ) = @_;\n"
"\n"
"    my $Response = HTTP::Response->new( 200 => \"OK\" );\n"
"    $Response->protocol('HTTP/1.0');\n"
"    $Response->content_type(\"text/plain; charset=UTF-8\");\n"
"    $Response->add_content_utf8( $Request->content() );\n"
"    $Response->date(time);\n"
"\n"
"    #print $Request->as_string();\n"
"    #print $Response->as_string();\n"
"\n"
"    return $Response;\n"
"}\n"
"\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:316
msgid ""
"This is the code for the custom protocol that we use. This approach is only "
"useful for training or for testing environments where the Remote Systems are "
"not available."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:320
msgid ""
"For a new module development we do not recommend to use this approach, a "
"real protocol needs to be implemented."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:327
msgid ""
"There is the need to register this network transport module to be accessible "
"in the OTRS GUI. This can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/gi-transport.xml:331
#, no-wrap
msgid ""
"<ConfigItem Name=\"GenericInterface::Transport::Module###HTTP::Test\" "
"Required=\"0\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">GenericInterface module registration for "
"the transport layer.</Description>\n"
"    <Group>GenericInterface</Group>\n"
"    <SubGroup>GenericInterface::Transport::ModuleRegistration</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"Name\">Test</Item>\n"
"            <Item Key=\"Protocol\">HTTP</Item>\n"
"            <Item "
"Key=\"ConfigDialog\">AdminGenericInterfaceTransportHTTPTest</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:7
msgid "Log Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:10
msgid ""
"There is a global log interface for OTRS that provides the possibility to "
"create own log backends."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:13
msgid ""
"Writing an own logging backend is as easy as reimplementing the "
"<literal>Kernel::System::Log::Log()</literal> method."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:16
msgid "Code example: <literal>Kernel::System::Log::CustomFile</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:18
msgid ""
"In this small example, we'll write a little file logging backend which works "
"similar to <literal>Kernel::System::Log::File</literal>, but prepends a "
"string to each logging entry."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:23
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Log/CustomFile.pm - file log backend\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Log::CustomFile;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"umask \"002\";\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # get needed objects\n"
"    for (qw(ConfigObject EncodeObject)) {\n"
"        if ( $Param{$_} ) {\n"
"            $Self->{$_} = $Param{$_};\n"
"        }\n"
"        else {\n"
"            die \"Got no $_!\";\n"
"        }\n"
"    }\n"
"\n"
"    # get logfile location\n"
"    $Self->{LogFile} = '/var/log/CustomFile.log';\n"
"\n"
"    # set custom prefix\n"
"    $Self->{CustomPrefix} = 'CustomFileExample';\n"
"\n"
"    # Fixed bug# 2265 - For IIS we need to create a own error log file.\n"
"    # Bind stderr to log file, because IIS do print stderr to web page.\n"
"    if ( $ENV{SERVER_SOFTWARE} && $ENV{SERVER_SOFTWARE} =~ "
"/^microsoft\\-iis/i ) {\n"
"        if ( !open STDERR, '>>', $Self->{LogFile} . '.error' ) {\n"
"            print STDERR \"ERROR: Can't write $Self->{LogFile}.error: "
"$!\";\n"
"        }\n"
"    }\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub Log {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $FH;\n"
"\n"
"    # open logfile\n"
"    if ( !open $FH, '>>', $Self->{LogFile} ) {\n"
"\n"
"        # print error screen\n"
"        print STDERR \"\\n\";\n"
"        print STDERR \" >> Can't write $Self->{LogFile}: $! <<\\n\";\n"
"        print STDERR \"\\n\";\n"
"        return;\n"
"    }\n"
"\n"
"    # write log file\n"
"    $Self->{EncodeObject}->SetIO($FH);\n"
"    print $FH '[' . localtime() . ']';\n"
"    if ( lc $Param{Priority} eq 'debug' ) {\n"
"        print $FH \"[Debug][$Param{Module}][$Param{Line}] "
"$Self->{CustomPrefix} $Param{Message}\\n\";\n"
"    }\n"
"    elsif ( lc $Param{Priority} eq 'info' ) {\n"
"        print $FH \"[Info][$Param{Module}]  $Self->{CustomPrefix} "
"$Param{Message}\\n\";\n"
"    }\n"
"    elsif ( lc $Param{Priority} eq 'notice' ) {\n"
"        print $FH \"[Notice][$Param{Module}] $Self->{CustomPrefix} "
"$Param{Message}\\n\";\n"
"    }\n"
"    elsif ( lc $Param{Priority} eq 'error' ) {\n"
"        print $FH \"[Error][$Param{Module}][$Param{Line}] "
"$Self->{CustomPrefix} $Param{Message}\\n\";\n"
"    }\n"
"    else {\n"
"\n"
"        # print error messages to STDERR\n"
"        print STDERR\n"
"            \"[Error][$Param{Module}] $Self->{CustomPrefix} Priority: "
"'$Param{Priority}' not defined! Message: $Param{Message}\\n\";\n"
"\n"
"        # and of course to logfile\n"
"        print $FH\n"
"            \"[Error][$Param{Module}] $Self->{CustomPrefix} Priority: "
"'$Param{Priority}' not defined! Message: $Param{Message}\\n\";\n"
"    }\n"
"\n"
"    # close file handle\n"
"    close $FH;\n"
"    return 1;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:125 en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:94 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:659 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1055 en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:20 en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:32
msgid "Configuration example"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:127
msgid ""
"To activate our custom logging module, the administrator can either set the "
"existing configuration item <literal>LogModule</literal> manually to "
"<literal>Kernel::System::Log::CustomFile</literal>. To realize this "
"automatically, you can provide an XML configuration file which overrides the "
"default setting."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:133
#, no-wrap
msgid ""
"<ConfigItem Name=\"LogModule\" Required=\"1\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">Set Kernel::System::Log::CustomFile as "
"default logging backend.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Core::Log</SubGroup>\n"
"    <Setting>\n"
"        <Option Location=\"Kernel/System/Log/*.pm\" "
"SelectedID=\"Kernel::System::Log::CustomFile\"></Option>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:146 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:679 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1061
msgid "Use case examples"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:148
msgid ""
"Useful logging backends could be logging to a web service or to encrypted "
"files."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/log.xml:154
msgid ""
"Please note that <literal>Kernel::System::Log</literal> has other methods "
"than <literal>Log()</literal> which cannot be reimplemented, for example "
"code for working with shared memory segments and log data caching."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:6
msgid "Notification Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:8
msgid ""
"Notification modules are used to display a notification below the main "
"navigation. You can write and register your own notification module.  There "
"are currently 5 ticket menus in the OTRS framework."
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:16
msgid "<literal>AgentOnline</literal>"
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:19
msgid "<literal>AgentTicketEscalation</literal>"
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:22
msgid "<literal>CharsetCheck</literal>"
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:25
msgid "<literal>CustomerOnline</literal>"
msgstr ""

#. type: Content of: <section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:28
msgid "<literal>UIDCheck</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:35
msgid ""
"The notification modules are located under "
"<filename>Kernel/Output/HTML/TicketNotification*.pm</filename>.  Following, "
"there is an example of a notify module.  Save it under "
"<filename>Kernel/Output/HTML/TicketNotificationCustom.pm</filename>.  You "
"just need 2 functions: <code>new()</code> and <code>Run()</code>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:42
#, no-wrap
msgid ""
"# --\n"
"# Kernel/Output/HTML/NotificationCustom.pm\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::Output::HTML::NotificationCustom;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::Custom;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # get needed objects\n"
"    for my $Object (qw(ConfigObject LogObject DBObject LayoutObject "
"TimeObject UserID)) {\n"
"        $Self->{$Object} = $Param{$Object} || die \"Got no $Object!\";\n"
"    }\n"
"    $Self->{CustomObject} = Kernel::System::Custom->new(%Param);\n"
"    return $Self;\n"
"}\n"
"\n"
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # get session info\n"
"    my %CustomParam      = ();\n"
"    my @Customs    = $Self->{CustomObject}->GetAllCustomIDs();\n"
"    my $IdleMinutes = $Param{Config}->{IdleMinutes} || 60 * 2;\n"
"    for (@Customs) {\n"
"        my %Data = $Self->{CustomObject}->GetCustomIDData( CustomID => $_, "
");\n"
"        if (\n"
"            $Self->{UserID} ne $Data{UserID}\n"
"            && $Data{UserType} eq 'User'\n"
"            && $Data{UserLastRequest}\n"
"            && $Data{UserLastRequest} + ( $IdleMinutes * 60 ) > "
"$Self->{TimeObject}->SystemTime()\n"
"            && $Data{UserFirstname}\n"
"            && $Data{UserLastname}\n"
"            )\n"
"        {\n"
"            $CustomParam{ $Data{UserID} } = \"$Data{UserFirstname} "
"$Data{UserLastname}\";\n"
"            if ( $Param{Config}->{ShowEmail} ) {\n"
"                $CustomParam{ $Data{UserID} } .= \" ($Data{UserEmail})\";\n"
"            }\n"
"        }\n"
"    }\n"
"    for ( sort { $CustomParam{$a} cmp $CustomParam{$b} } keys %CustomParam ) "
"{\n"
"        if ( $Param{Message} ) {\n"
"            $Param{Message} .= ', ';\n"
"        }\n"
"        $Param{Message} .= \"$CustomParam{$_}\";\n"
"    }\n"
"    if ( $Param{Message} ) {\n"
"        return $Self->{LayoutObject}->Notify( Info => 'Custom Message: %s\", "
"\"' . $Param{Message} );\n"
"    }\n"
"    else {\n"
"        return '';\n"
"    }\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:120
msgid ""
"There is the need to activate your custom notification module.  This can be "
"done using the XML configuration below. There may be additional parameters "
"in the config hash for your notification module."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:126
#, no-wrap
msgid ""
"<ConfigItem Name=\"Frontend::NotifyModule###3-Custom\" Required=\"0\" "
"Valid=\"0\">\n"
"    <Description Lang=\"en\">Module to show custom message in the agent "
"interface.</Description>\n"
"    <Description Lang=\"de\">Mit diesem Modul können eigene Meldungenen "
"innerhalb des Agent-Interfaces angezeigt werden.</Description>\n"
"    <Group>Framework</Group>\n"
"    <SubGroup>Frontend::Agent::ModuleNotify</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item "
"Key=\"Module\">Kernel::Output::HTML::NotificationCustom</Item>\n"
"            <Item Key=\"Key1\">1</Item>\n"
"            <Item Key=\"Key2\">2</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:146
msgid ""
"Useful ticket menu implementation could be a link to an external tool if "
"parameters (e.g. <literal>FreeTextField</literal>) have been set."
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:163
msgid "NotificationAgentOnline"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:164 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:168 en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:176 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:186 en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:190
msgid "2.0"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:167
msgid "NotificationAgentTicketEscalation"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:171
msgid "NotificationCharsetCheck"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:175
msgid "NotificationCustomerOnline"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/notify.xml:179
msgid "NotificationUIDCheck"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:4
msgid "Output Filter"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:6
msgid ""
"Output filters allow to modify HTML on the fly. It is best practice to use "
"output filters instead of modifying <filename>.tt</filename> files "
"directly.  There are three good reasons for that.  When the same adaptation "
"has to be applied to several frontend modules then the adaption only has to "
"be implemented once.  The second advantage is that when OTRS is upgraded "
"there is a chance that the filter doesn't have to be updated, when the "
"relevant pattern has not changed.  When two extensions modify the same file "
"there is a conflict during the installation of the second package.  This "
"conflict can be resolved by using two output filters that modify the same "
"frontend module."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:16
msgid ""
"There are three different kinds of output filters. They are active at "
"different stages of the generation of HTML content."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:20
msgid "<literal>FilterElementPost</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:22
msgid ""
"These filters allow to modify the output of a template after it was "
"rendered."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:25
msgid ""
"To translate content, you can run <code>$LayoutObject->Translate()</code> "
"directly. If you need other template features, just define a small template "
"file for your output filter and use it to render your content before "
"injecting it into the main data. It can also be helpful to use jQuery DOM "
"operations to reorder/replace content on the screen in some cases instead of "
"using regular expressions. In this case you would inject the new code "
"somewhere in the page as invisible content (e. g. with the class "
"<literal>Hidden</literal>), and then move it with jQuery to the correct "
"location in the DOM and show it."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:28
msgid ""
"To make using post output filters easier, there is also a mechanism to "
"request HTML comment hooks for certain templates/blocks. You can add in your "
"module config XML like:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:31 en/content/how-to-publish-otrs-extensions/package-porting.xml:36
#, no-wrap
msgid ""
"<ConfigItem\n"
"Name=\"Frontend::Template::GenerateBlockHooks###100-OTRSBusiness-ContactWithData\"\n"
"Required=\"1\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">Generate HTML comment hooks for\n"
"the specified blocks so that filters can use them.</Description>\n"
"    <Group>OTRSBusiness</Group>\n"
"    <SubGroup>Core</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"AgentTicketZoom\">\n"
"                <Array>\n"
"                    <Item>CustomerTable</Item>\n"
"                </Array>\n"
"            </Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:52 en/content/how-to-publish-otrs-extensions/package-porting.xml:57
msgid ""
"This will cause the block <literal>CustomerTable</literal> in "
"<filename>AgentTicketZoom.tt</filename> to be wrapped in HTML comments each "
"time it is rendered:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:56 en/content/how-to-publish-otrs-extensions/package-porting.xml:61
#, no-wrap
msgid ""
"<!--HookStartCustomerTable-->\n"
"... block output ...\n"
"<!--HookEndCustomerTable-->\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:63 en/content/how-to-publish-otrs-extensions/package-porting.xml:68
msgid ""
"With this mechanism every package can request just the block hooks it needs, "
"and they are consistently rendered. These HTML comments can then be used in "
"your output filter for easy regular expression matching."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:69
msgid "<literal>FilterContent</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:71
msgid ""
"This kind of filter allows to process the complete HTML output for the "
"request right before it is sent to the browser. This can be used for global "
"transformations."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:76
msgid "<literal>FilterText</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:78
msgid ""
"This kind of output filter is a plugin for the method "
"<literal>Kernel::Output::HTML::Layout::Ascii2HTML()</literal> and is only "
"active when the parameter <literal>LinkFeature</literal> is set to 1.  Thus "
"the <literal>FilterText</literal> output filters are currently only active "
"for the display of the body of plain text articles.  Plain text articles are "
"generated by incoming non-HTML mails and when OTRS is configured to not use "
"the Rich Text feature in the frontend."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:90 en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:96
msgid "See package <literal>TemplateModule</literal>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:100 en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:26 en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:38
msgid "Use Cases"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:102
msgid "Show additional ticket attributes in <literal>AgentTicketZoom</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:104
msgid ""
"This can be achieved with a <literal>FilterElementPost</literal> output "
"filter."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:108
msgid "Show the service selection as a multi level menu"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:110
msgid ""
"Use a <literal>FilterElementPost</literal> for this feature.  The list of "
"selectable services can be parsed from the processed template output. The "
"multi level selection can be constructed from the service list and inserted "
"into the template content. A <literal>FilterElementPost</literal> output "
"filter must be used for that."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:118
msgid "Create links within plain text article bodies"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:120
msgid ""
"A biotech company uses gene names like IPI00217472 in plain text articles.  "
"A <literal>FilterText</literal> output filter can be used to create links to "
"a sequence database, "
"e.g. "
"http://srs.ebi.ac.uk/srsbin/cgi-bin/wgetz?-e+[IPI-acc:IPI00217472]+-vn+2, "
"for the gene names."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:127
msgid "Prohibit active content"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:129
msgid ""
"There is firewall rule that disallows all active content. In order to avoid "
"rejection by the firewall, the HTML tag <literal>&lt;applet&gt;</literal> "
"can be filtered with a <literal>FilterContent</literal> output filter."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:138
msgid ""
"Every <literal>FilterElementPost</literal> output filter is constructed and "
"run for every configured Template that is needed for the current request.  "
"Thus low performance of the output filter or a large number of filters can "
"severely degrade performance."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:145
msgid "Best Practices"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:147
msgid ""
"In order to increase flexibility the list of affected templates should be "
"configured in SysConfig."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/outputfilter.xml:154
msgid ""
"The output filters are available since OTRS 2.4. The type "
"<literal>FilterElementPre</literal> was dropped with OTRS 5."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:6
msgid "Queue Preferences Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:8
msgid ""
"There is a DB queue preferences module which come with the OTRS framework.  "
"It is also possible to develop your own queue preferences modules.  The "
"queue preferences modules are located under "
"<filename>Kernel/System/Queue/*.pm</filename>. For more information about "
"their configuration see the admin manual.  Following, there is an example of "
"a queue preferences module.  Save it under "
"<filename>Kernel/System/Queue/PreferencesCustom.pm</filename>.  You just "
"need 3 functions: <code>new()</code>, <code>QueuePreferencesSet()</code> and "
"<code>QueuePreferencesGet()</code>. Return 1, then the synchronization is "
"ok."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:20
msgid ""
"The interface class is called <literal>Kernel::System::Queue</literal>. The "
"example queue preferences may be called "
"<literal>Kernel::System::Queue::PreferencesCustom</literal>. You can find an "
"example below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:24
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Queue/PreferencesCustom.pm - some user functions\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# Id: PreferencesCustom.pm,v 1.5 2009/02/16 11:47:34 tr Exp $\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Queue::PreferencesCustom;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use vars qw(@ISA $VERSION);\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for (qw(DBObject ConfigObject LogObject)) {\n"
"        $Self->{$_} = $Param{$_} || die \"Got no $_!\";\n"
"    }\n"
"\n"
"    # preferences table data\n"
"    $Self->{PreferencesTable}        = 'queue_preferences';\n"
"    $Self->{PreferencesTableKey}     = 'preferences_key';\n"
"    $Self->{PreferencesTableValue}   = 'preferences_value';\n"
"    $Self->{PreferencesTableQueueID} = 'queue_id';\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub QueuePreferencesSet {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for (qw(QueueID Key Value)) {\n"
"        if ( !defined( $Param{$_} ) ) {\n"
"            $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"$_!\" );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # delete old data\n"
"    return if !$Self->{DBObject}->Do(\n"
"        SQL => \"DELETE FROM $Self->{PreferencesTable} WHERE \"\n"
"            . \"$Self->{PreferencesTableQueueID} = ? AND "
"$Self->{PreferencesTableKey} = ?\",\n"
"        Bind => [ \\$Param{QueueID}, \\$Param{Key} ],\n"
"    );\n"
"\n"
"    $Self->{PreferencesTableValue} .= 'PreferencesCustom';\n"
"\n"
"    # insert new data\n"
"    return $Self->{DBObject}->Do(\n"
"        SQL => \"INSERT INTO $Self->{PreferencesTable} "
"($Self->{PreferencesTableQueueID}, \"\n"
"            . \" $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue}) \"\n"
"            . \" VALUES (?, ?, ?)\",\n"
"        Bind => [ \\$Param{QueueID}, \\$Param{Key}, \\$Param{Value} ],\n"
"    );\n"
"}\n"
"\n"
"sub QueuePreferencesGet {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for (qw(QueueID)) {\n"
"        if ( !$Param{$_} ) {\n"
"            $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"$_!\" );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # check if queue preferences are available\n"
"    if ( !$Self->{ConfigObject}->Get('QueuePreferences') ) {\n"
"        return;\n"
"    }\n"
"\n"
"    # get preferences\n"
"    return if !$Self->{DBObject}->Prepare(\n"
"        SQL => \"SELECT $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue} \"\n"
"            . \" FROM $Self->{PreferencesTable} WHERE "
"$Self->{PreferencesTableQueueID} = ?\",\n"
"        Bind => [ \\$Param{QueueID} ],\n"
"    );\n"
"    my %Data;\n"
"    while ( my @Row = $Self->{DBObject}->FetchrowArray() ) {\n"
"        $Data{ $Row[0] } = $Row[1];\n"
"    }\n"
"\n"
"    # return data\n"
"    return %Data;\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:132
msgid ""
"There is the need to activate your custom queue preferences module.  This "
"can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:136
#, no-wrap
msgid ""
"<ConfigItem Name=\"Queue::PreferencesModule\" Required=\"1\" Valid=\"1\">\n"
"    <Description Lang=\"en\">Default queue preferences "
"module.</Description>\n"
"    <Description Lang=\"de\">Standard Queue Preferences "
"Module.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::Queue::Preferences</SubGroup>\n"
"    <Setting>\n"
"        <String "
"Regex=\"\">Kernel::System::Queue::PreferencesCustom</String>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:152 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:152
msgid "Useful preferences implementation could be a SOAP or RADIUS backend."
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/queue-preferences.xml:168 en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:168 en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:165
msgid "PreferencesDB"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:6
msgid "Service Preferences Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:8
msgid ""
"There is a DB service preferences module which come with the OTRS "
"framework.  It is also possible to develop your own service preferences "
"modules.  The service preferences modules are located under "
"<filename>Kernel/System/Service/*.pm</filename>. For more information about "
"their configuration see the admin manual.  Following, there is an example of "
"a service preferences module.  Save it under "
"<filename>Kernel/System/Service/PreferencesCustom.pm</filename>.  You just "
"need 3 functions: <code>new()</code>, <code>ServicePreferencesSet()</code> "
"and <code>ServicePreferencesGet()</code>. Return 1, then the synchronization "
"is ok."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:20
msgid ""
"The interface class is called "
"<literal>Kernel::System::Service</literal>. The example service preferences "
"may be called "
"<literal>Kernel::System::Service::PreferencesCustom</literal>. You can find "
"an example below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:24
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Service/PreferencesCustom - some user functions\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# Id: PreferencesCustom.pm,v 1.2 2009/02/16 11:47:34 tr Exp $\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Service::PreferencesCustom;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use vars qw(@ISA $VERSION);\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for (qw(DBObject ConfigObject LogObject)) {\n"
"        $Self->{$_} = $Param{$_} || die \"Got no $_!\";\n"
"    }\n"
"\n"
"    # preferences table data\n"
"    $Self->{PreferencesTable}          = 'service_preferences';\n"
"    $Self->{PreferencesTableKey}       = 'preferences_key';\n"
"    $Self->{PreferencesTableValue}     = 'preferences_value';\n"
"    $Self->{PreferencesTableServiceID} = 'service_id';\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub ServicePreferencesSet {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for (qw(ServiceID Key Value)) {\n"
"        if ( !defined( $Param{$_} ) ) {\n"
"            $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"$_!\" );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # delete old data\n"
"    return if !$Self->{DBObject}->Do(\n"
"        SQL => \"DELETE FROM $Self->{PreferencesTable} WHERE \"\n"
"            . \"$Self->{PreferencesTableServiceID} = ? AND "
"$Self->{PreferencesTableKey} = ?\",\n"
"        Bind => [ \\$Param{ServiceID}, \\$Param{Key} ],\n"
"    );\n"
"\n"
"$Self->{PreferencesTableValue} .= 'PreferencesCustom';\n"
"\n"
"    # insert new data\n"
"    return $Self->{DBObject}->Do(\n"
"        SQL => \"INSERT INTO $Self->{PreferencesTable} "
"($Self->{PreferencesTableServiceID}, \"\n"
"            . \" $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue}) \"\n"
"            . \" VALUES (?, ?, ?)\",\n"
"        Bind => [ \\$Param{ServiceID}, \\$Param{Key}, \\$Param{Value} ],\n"
"    );\n"
"}\n"
"\n"
"sub ServicePreferencesGet {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for (qw(ServiceID)) {\n"
"        if ( !$Param{$_} ) {\n"
"            $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"$_!\" );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # check if service preferences are available\n"
"    if ( !$Self->{ConfigObject}->Get('ServicePreferences') ) {\n"
"        return;\n"
"    }\n"
"\n"
"    # get preferences\n"
"    return if !$Self->{DBObject}->Prepare(\n"
"        SQL => \"SELECT $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue} \"\n"
"            . \" FROM $Self->{PreferencesTable} WHERE "
"$Self->{PreferencesTableServiceID} = ?\",\n"
"        Bind => [ \\$Param{ServiceID} ],\n"
"    );\n"
"    my %Data;\n"
"    while ( my @Row = $Self->{DBObject}->FetchrowArray() ) {\n"
"        $Data{ $Row[0] } = $Row[1];\n"
"    }\n"
"\n"
"    # return data\n"
"    return %Data;\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:132
msgid ""
"There is the need to activate your custom service preferences module.  This "
"can be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/service-preferences.xml:136
#, no-wrap
msgid ""
"<ConfigItem Name=\"Service::PreferencesModule\" Required=\"1\" "
"Valid=\"1\">\n"
"    <Description Lang=\"en\">Default service preferences "
"module.</Description>\n"
"    <Description Lang=\"de\">Standard Service Preferences "
"Module.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::Service::Preferences</SubGroup>\n"
"    <Setting>\n"
"        <String "
"Regex=\"\">Kernel::System::Service::PreferencesCustom</String>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:6
msgid "SLA Preferences Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:8
msgid ""
"There is a DB SLA preferences module which come with the OTRS framework.  It "
"is also possible to develop your own SLA preferences modules.  The SLA "
"preferences modules are located under "
"<filename>Kernel/System/SLA/*.pm</filename>. For more information about "
"their configuration see the admin manual.  Following, there is an example of "
"an SLA preferences module.  Save it under "
"<filename>Kernel/System/SLA/PreferencesCustom.pm</filename>.  You just need "
"3 functions: <code>new()</code>, <code>SLAPreferencesSet()</code> and "
"<code>SLAPreferencesGet()</code>.  Make sure the function returns 1."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:20
msgid ""
"The interface class is called <literal>Kernel::System::SLA</literal>. The "
"example SLA preferences may be called "
"<literal>Kernel::System::SLA::PreferencesCustom</literal>. You can find an "
"example below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:24
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/SLA/PreferencesCustom.pm - some user functions\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::SLA::PreferencesCustom;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use vars qw(@ISA);\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for (qw(DBObject ConfigObject LogObject)) {\n"
"        $Self->{$_} = $Param{$_} || die \"Got no $_!\";\n"
"    }\n"
"\n"
"    # preferences table data\n"
"    $Self->{PreferencesTable}      = 'sla_preferences';\n"
"    $Self->{PreferencesTableKey}   = 'preferences_key';\n"
"    $Self->{PreferencesTableValue} = 'preferences_value';\n"
"    $Self->{PreferencesTableSLAID} = 'sla_id';\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub SLAPreferencesSet {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for (qw(SLAID Key Value)) {\n"
"        if ( !defined( $Param{$_} ) ) {\n"
"            $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"$_!\" );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # delete old data\n"
"    return if !$Self->{DBObject}->Do(\n"
"        SQL => \"DELETE FROM $Self->{PreferencesTable} WHERE \"\n"
"            . \"$Self->{PreferencesTableSLAID} = ? AND "
"$Self->{PreferencesTableKey} = ?\",\n"
"        Bind => [ \\$Param{SLAID}, \\$Param{Key} ],\n"
"    );\n"
"\n"
"$Self->{PreferencesTableValue} .= 'PreferencesCustom';\n"
"\n"
"    # insert new data\n"
"    return $Self->{DBObject}->Do(\n"
"        SQL => \"INSERT INTO $Self->{PreferencesTable} "
"($Self->{PreferencesTableSLAID}, \"\n"
"            . \" $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue}) \"\n"
"            . \" VALUES (?, ?, ?)\",\n"
"        Bind => [ \\$Param{SLAID}, \\$Param{Key}, \\$Param{Value} ],\n"
"    );\n"
"}\n"
"\n"
"sub SLAPreferencesGet {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for (qw(SLAID)) {\n"
"        if ( !$Param{$_} ) {\n"
"            $Self->{LogObject}->Log( Priority => 'error', Message => \"Need "
"$_!\" );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # check if SLA preferences are available\n"
"    if ( !$Self->{ConfigObject}->Get('SLAPreferences') ) {\n"
"        return;\n"
"    }\n"
"\n"
"    # get preferences\n"
"    return if !$Self->{DBObject}->Prepare(\n"
"        SQL => \"SELECT $Self->{PreferencesTableKey}, "
"$Self->{PreferencesTableValue} \"\n"
"            . \" FROM $Self->{PreferencesTable} WHERE "
"$Self->{PreferencesTableSLAID} = ?\",\n"
"        Bind => [ \\$Param{SLAID} ],\n"
"    );\n"
"    my %Data;\n"
"    while ( my @Row = $Self->{DBObject}->FetchrowArray() ) {\n"
"        $Data{ $Row[0] } = $Row[1];\n"
"    }\n"
"\n"
"    # return data\n"
"    return %Data;\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:130
msgid ""
"There is the need to activate your custom SLA preferences module.  This can "
"be done using the XML configuration below."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:134
#, no-wrap
msgid ""
"<ConfigItem Name=\"SLA::PreferencesModule\" Required=\"1\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">Default SLA preferences "
"module.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::SLA::Preferences</SubGroup>\n"
"    <Setting>\n"
"        <String Regex=\"\">Kernel::System::SLA::PreferencesCustom</String>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/sla-preferences.xml:149
msgid ""
"Useful preferences implementation could be to store additional values on "
"SLAs."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:4
msgid "Stats Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:6
msgid ""
"There are two different types of internal stats modules - dynamic and "
"static. This section describes how such stats modules can be developed."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:9
msgid "Dynamic Stats"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:11
msgid ""
"In contrast to static stats modules, dynamic statistics can be configured "
"via the OTRS web interface. In this section a simple statistic module is "
"developed. Each dynamic stats module has to implement these subroutines:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:19
msgid "<literal>GetObjectName</literal>"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:22
msgid "<literal>GetObjectAttributes</literal>"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:25
msgid "<literal>ExportWrapper</literal>"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:28
msgid "<literal>ImportWrapper</literal>"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:33
msgid ""
"Furthermore the module has to implement either "
"<literal>GetStatElement</literal> or <literal>GetStatTable</literal>. And if "
"the header line of the result table should be changed, a sub called "
"<literal>GetHeaderLine</literal> has to be developed."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:38
msgid ""
"In this section a sample stats module is shown and each subroutine is "
"explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:41
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Stats/Dynamic/DynamicStatsTemplate.pm - all advice "
"functions\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Stats::Dynamic::DynamicStatsTemplate;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::Queue;\n"
"use Kernel::System::State;\n"
"use Kernel::System::Ticket;\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:62
msgid ""
"This is a common boilerplate that can be found in common OTRS modules. The "
"class/package name is declared via the <literal>package</literal> "
"keyword. Then the needed modules are used via the <literal>use</literal> "
"keyword."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:65
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for my $Object (\n"
"        qw(DBObject ConfigObject LogObject UserObject TimeObject MainObject "
"EncodeObject)\n"
"        )\n"
"    {\n"
"        $Self->{$Object} = $Param{$Object} || die \"Got no $Object!\";\n"
"    }\n"
"\n"
"    # created needed objects\n"
"    $Self->{QueueObject}    = Kernel::System::Queue->new( %{$Self} );\n"
"    $Self->{TicketObject}   = Kernel::System::Ticket->new( %{$Self} );\n"
"    $Self->{StateObject}    = Kernel::System::State->new( %{$Self} );\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:91
msgid ""
"The <literal>new</literal> is the constructor for this statistic module. It "
"creates a new instance of the class. According to the coding guidelines "
"objects of other classes that are needed in this module have to be created "
"in <literal>new</literal>. In lines 27 to 29 the object of the stats module "
"is created. Lines 31 to 37 check if objects that are needed in this code - "
"either for creating other objects or in this module - are passed. After that "
"the other objects are created."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:94
#, no-wrap
msgid ""
"sub GetObjectName {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    return 'Sample Statistics';\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:103
msgid ""
"<literal>GetObjectName</literal> returns a name for the statistics "
"module. This is the label that is shown in the drop down in the "
"configuration as well as in the list of existing statistics (column "
"\"object\")."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:106
#, no-wrap
msgid ""
"sub GetObjectAttributes {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # get state list\n"
"    my %StateList = $Self->{StateObject}->StateList(\n"
"        UserID => 1,\n"
"    );\n"
"\n"
"    # get queue list\n"
"    my %QueueList = $Self->{QueueObject}->GetAllQueues();\n"
"\n"
"    # get current time to fix bug#3830\n"
"    my $TimeStamp = $Self->{TimeObject}->CurrentTimestamp();\n"
"    my ($Date) = split /\\s+/, $TimeStamp;\n"
"    my $Today = sprintf \"%s 23:59:59\", $Date;\n"
"\n"
"    my @ObjectAttributes = (\n"
"        {\n"
"            Name             => 'State',\n"
"            UseAsXvalue      => 1,\n"
"            UseAsValueSeries => 1,\n"
"            UseAsRestriction => 1,\n"
"            Element          => 'StateIDs',\n"
"            Block            => 'MultiSelectField',\n"
"            Values           => \\%StateList,\n"
"        },\n"
"        {\n"
"            Name             => 'Created in Queue',\n"
"            UseAsXvalue      => 1,\n"
"            UseAsValueSeries => 1,\n"
"            UseAsRestriction => 1,\n"
"            Element          => 'CreatedQueueIDs',\n"
"            Block            => 'MultiSelectField',\n"
"            Translation      => 0,\n"
"            Values           => \\%QueueList,\n"
"        },\n"
"        {\n"
"            Name             => 'Create Time',\n"
"            UseAsXvalue      => 1,\n"
"            UseAsValueSeries => 1,\n"
"            UseAsRestriction => 1,\n"
"            Element          => 'CreateTime',\n"
"            TimePeriodFormat => 'DateInputFormat',    # "
"'DateInputFormatLong',\n"
"            Block            => 'Time',\n"
"            TimeStop         => $Today,\n"
"            Values           => {\n"
"                TimeStart => 'TicketCreateTimeNewerDate',\n"
"                TimeStop  => 'TicketCreateTimeOlderDate',\n"
"            },\n"
"        },\n"
"    );\n"
"\n"
"    return @ObjectAttributes;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:164
msgid ""
"In this sample stats module, we want to provide three attributes the user "
"can chose from: a list of queues, a list of states and a time drop down. To "
"get the values shown in the drop down, some operations are needed. In this "
"case <literal>StateList</literal> and <literal>GetAllQueues</literal> are "
"called."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:167
msgid ""
"Then the list of attributes is created. Each attribute is defined via a hash "
"reference. You can use these keys:"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:172 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:794
msgid "<literal>Name</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:173 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:791
msgid "The label in the web interface."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:176
msgid "<literal>UseAsXvalue</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:177
msgid "This attribute can be used on the x-axis."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:180
msgid "<literal>UseAsValueSeries</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:181
msgid "This attribute can be used on the y-axis."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:184
msgid "<literal>UseAsRestriction</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:185
msgid "This attribute can be used for restrictions."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:188
msgid "<literal>Element</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:189 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:795
msgid "The HTML field name."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:192
msgid "<literal>Block</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:193
msgid ""
"The block name in the template file "
"(e.g. "
"<filename>&lt;OTRS_HOME&gt;/Kernel/Output/HTML/Standard/AgentStatsEditXaxis.tt</filename>)."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:196
msgid "<literal>Values</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:197 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:799
msgid "The values shown in the attribute."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:202
msgid ""
"Hint: If you install this sample and you configure a statistic with some "
"queues - lets say 'queue A' and 'queue B' - then these queues are the only "
"ones that are shown to the user when he starts the statistic. Sometimes a "
"dynamic drop down or multiselect field is needed. In this case, you can set "
"<literal>SelectedValues</literal> in the definition of the attribute:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:205
#, no-wrap
msgid ""
"        {\n"
"            Name             => 'Created in Queue',\n"
"            UseAsXvalue      => 1,\n"
"            UseAsValueSeries => 1,\n"
"            UseAsRestriction => 1,\n"
"            Element          => 'CreatedQueueIDs',\n"
"            Block            => 'MultiSelectField',\n"
"            Translation      => 0,\n"
"            Values           => \\%QueueList,\n"
"            SelectedValues   => [ @SelectedQueues ],\n"
"        },\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:220
#, no-wrap
msgid ""
"sub GetStatElement {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # search tickets\n"
"    return $Self->{TicketObject}->TicketSearch(\n"
"        UserID     => 1,\n"
"        Result     => 'COUNT',\n"
"        Permission => 'ro',\n"
"        Limit      => 100_000_000,\n"
"        %Param,\n"
"    );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:236
msgid ""
"<literal>GetStatElement</literal> gets called for each cell in the result "
"table. So it should be a numeric value. In this sample it does a simple "
"ticket search. The hash <literal>%Param</literal> contains information about "
"the \"current\" x-value and the y-value as well as any restrictions. So, for "
"a cell that should count the created tickets for queue 'Misc' with state "
"'open' the passed parameter hash looks something like this:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:239
#, no-wrap
msgid ""
"    'CreatedQueueIDs' => [\n"
"        '4'\n"
"    ],\n"
"    'StateIDs' => [\n"
"        '2'\n"
"    ]\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:249
msgid ""
"If the \"per cell\" calculation should be avoided, "
"<literal>GetStatTable</literal> is an "
"alternative. <literal>GetStatTable</literal> returns a list of rows, hence "
"an array of array references. This leads to the same result as using "
"<literal>GetStatElement</literal>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:252
#, no-wrap
msgid ""
"sub GetStatTable {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my @StatData;\n"
"\n"
"    for my $StateName ( keys %{ $Param{TableStructure} } ) {\n"
"        my @Row;\n"
"        for my $Params ( @{ $Param{TableStructure}->{$StateName} } ) {\n"
"            my $Tickets = $Self->{TicketObject}->TicketSearch(\n"
"                UserID     => 1,\n"
"                Result     => 'COUNT',\n"
"                Permission => 'ro',\n"
"                Limit      => 100_000_000,\n"
"                %{$Params},\n"
"            );\n"
"\n"
"            push @Row, $Tickets;\n"
"        }\n"
"\n"
"        push @StatData, [ $StateName, @Row ];\n"
"    }\n"
"\n"
"    return @StatData;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:280
msgid ""
"<literal>GetStatTable</literal> gets all information about the stats query "
"that is needed. The passed parameters contain information about the "
"attributes (<literal>Restrictions</literal>, attributes that are used for "
"x/y-axis) and the table structure. The table structure is a hash reference "
"where the keys are the values of the y-axis and their values are hash "
"references with the parameters used for <literal>GetStatElement</literal> "
"subroutines."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:283
#, no-wrap
msgid ""
"    'Restrictions' => {},\n"
"    'TableStructure' => {\n"
"        'closed successful' => [\n"
"            {\n"
"                'CreatedQueueIDs' => [\n"
"                    '3'\n"
"                ],\n"
"                'StateIDs' => [\n"
"                    '2'\n"
"                ]\n"
"            },\n"
"        ],\n"
"        'closed unsuccessful' => [\n"
"            {\n"
"                'CreatedQueueIDs' => [\n"
"                    '3'\n"
"                ],\n"
"                'StateIDs' => [\n"
"                    '3'\n"
"                ]\n"
"            },\n"
"        ],\n"
"    },\n"
"    'ValueSeries' => [\n"
"        {\n"
"            'Block' => 'MultiSelectField',\n"
"            'Element' => 'StateIDs',\n"
"            'Name' => 'State',\n"
"            'SelectedValues' => [\n"
"                '5',\n"
"                '3',\n"
"                '2',\n"
"                '1',\n"
"                '4'\n"
"            ],\n"
"            'Translation' => 1,\n"
"            'Values' => {\n"
"                '1' => 'new',\n"
"                '10' => 'closed with workaround',\n"
"                '2' => 'closed successful',\n"
"                '3' => 'closed unsuccessful',\n"
"                '4' => 'open',\n"
"                '5' => 'removed',\n"
"                '6' => 'pending reminder',\n"
"                '7' => 'pending auto close+',\n"
"                '8' => 'pending auto close-',\n"
"                '9' => 'merged'\n"
"            }\n"
"        }\n"
"    ],\n"
"    'XValue' => {\n"
"        'Block' => 'MultiSelectField',\n"
"        'Element' => 'CreatedQueueIDs',\n"
"        'Name' => 'Created in Queue',\n"
"        'SelectedValues' => [\n"
"            '3',\n"
"            '4',\n"
"            '1',\n"
"            '2'\n"
"        ],\n"
"        'Translation' => 0,\n"
"        'Values' => {\n"
"            '1' => 'Postmaster',\n"
"            '2' => 'Raw',\n"
"            '3' => 'Junk',\n"
"            '4' => 'Misc'\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:355
msgid ""
"Sometimes the headers of the table have to be changed. In that case, a "
"subroutine called <literal>GetHeaderLine</literal> has to be "
"implemented. That subroutine has to return an array reference with the "
"column headers as elements. It gets information about the x-values passed."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:358
#, no-wrap
msgid ""
"sub GetHeaderLine {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my @HeaderLine = ('');\n"
"    for my $SelectedXValue ( @{ $Param{XValue}->{SelectedValues} } ) {\n"
"        push @HeaderLine, $Param{XValue}->{Values}->{$SelectedXValue};\n"
"    }\n"
"\n"
"    return \\@HeaderLine;\n"
"}\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:372
#, no-wrap
msgid ""
"sub ExportWrapper {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # wrap ids to used spelling\n"
"    for my $Use (qw(UseAsValueSeries UseAsRestriction UseAsXvalue)) {\n"
"        ELEMENT:\n"
"        for my $Element ( @{ $Param{$Use} } ) {\n"
"            next ELEMENT if !$Element || !$Element->{SelectedValues};\n"
"            my $ElementName = $Element->{Element};\n"
"            my $Values      = $Element->{SelectedValues};\n"
"\n"
"            if ( $ElementName eq 'QueueIDs' || $ElementName eq "
"'CreatedQueueIDs' ) {\n"
"                ID:\n"
"                for my $ID ( @{$Values} ) {\n"
"                    next ID if !$ID;\n"
"                    $ID->{Content} = $Self->{QueueObject}->QueueLookup( "
"QueueID => $ID->{Content} );\n"
"                }\n"
"            }\n"
"            elsif ( $ElementName eq 'StateIDs' || $ElementName eq "
"'CreatedStateIDs' ) {\n"
"                my %StateList = $Self->{StateObject}->StateList( UserID => 1 "
");\n"
"                ID:\n"
"                for my $ID ( @{$Values} ) {\n"
"                    next ID if !$ID;\n"
"                    $ID->{Content} = $StateList{ $ID->{Content} };\n"
"                }\n"
"            }\n"
"        }\n"
"    }\n"
"    return \\%Param;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:406
msgid ""
"Configured statistics can be exported into XML format. But as queues with "
"the same queue names can have different IDs on different OTRS instances it "
"would be quite painful to export the IDs (the statistics would calculate the "
"wrong numbers then). So an export wrapper should be written to use the names "
"instead of ids. This should be done for each \"dimension\" of the stats "
"module (x-axis, y-axis and restrictions)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:409
msgid ""
"<literal>ImportWrapper</literal> works the other way around - it converts "
"the name to the ID in the instance the configuration is imported to."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:412
msgid "This is a sample export:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:415
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"\n"
"<otrs_stats>\n"
"<Cache>0</Cache>\n"
"<Description>Sample stats module</Description>\n"
"<File></File>\n"
"<Format>CSV</Format>\n"
"<Format>Print</Format>\n"
"<Object>DeveloperManualSample</Object>\n"
"<ObjectModule>Kernel::System::Stats::Dynamic::DynamicStatsTemplate</ObjectModule>\n"
"<ObjectName>Sample Statistics</ObjectName>\n"
"<Permission>stats</Permission>\n"
"<StatType>dynamic</StatType>\n"
"<SumCol>0</SumCol>\n"
"<SumRow>0</SumRow>\n"
"<Title>Sample 1</Title>\n"
"<UseAsValueSeries Element=\"StateIDs\" Fixed=\"1\">\n"
"<SelectedValues>removed</SelectedValues>\n"
"<SelectedValues>closed unsuccessful</SelectedValues>\n"
"<SelectedValues>closed successful</SelectedValues>\n"
"<SelectedValues>new</SelectedValues>\n"
"<SelectedValues>open</SelectedValues>\n"
"</UseAsValueSeries>\n"
"<UseAsXvalue Element=\"CreatedQueueIDs\" Fixed=\"1\">\n"
"<SelectedValues>Junk</SelectedValues>\n"
"<SelectedValues>Misc</SelectedValues>\n"
"<SelectedValues>Postmaster</SelectedValues>\n"
"<SelectedValues>Raw</SelectedValues>\n"
"</UseAsXvalue>\n"
"<Valid>1</Valid>\n"
"</otrs_stats>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:450
msgid ""
"Now, that all subroutines are explained, this is the complete sample stats "
"module."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:453
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Stats/Dynamic/DynamicStatsTemplate.pm - all advice "
"functions\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Stats::Dynamic::DynamicStatsTemplate;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::Queue;\n"
"use Kernel::System::State;\n"
"use Kernel::System::Ticket;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for my $Object (\n"
"        qw(DBObject ConfigObject LogObject UserObject TimeObject MainObject "
"EncodeObject)\n"
"        )\n"
"    {\n"
"        $Self->{$Object} = $Param{$Object} || die \"Got no $Object!\";\n"
"    }\n"
"\n"
"    # created needed objects\n"
"    $Self->{QueueObject}    = Kernel::System::Queue->new( %{$Self} );\n"
"    $Self->{TicketObject}   = Kernel::System::Ticket->new( %{$Self} );\n"
"    $Self->{StateObject}    = Kernel::System::State->new( %{$Self} );\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub GetObjectName {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    return 'Sample Statistics';\n"
"}\n"
"\n"
"sub GetObjectAttributes {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # get state list\n"
"    my %StateList = $Self->{StateObject}->StateList(\n"
"        UserID => 1,\n"
"    );\n"
"\n"
"    # get queue list\n"
"    my %QueueList = $Self->{QueueObject}->GetAllQueues();\n"
"\n"
"    # get current time to fix bug#3830\n"
"    my $TimeStamp = $Self->{TimeObject}->CurrentTimestamp();\n"
"    my ($Date) = split /\\s+/, $TimeStamp;\n"
"    my $Today = sprintf \"%s 23:59:59\", $Date;\n"
"\n"
"    my @ObjectAttributes = (\n"
"        {\n"
"            Name             => 'State',\n"
"            UseAsXvalue      => 1,\n"
"            UseAsValueSeries => 1,\n"
"            UseAsRestriction => 1,\n"
"            Element          => 'StateIDs',\n"
"            Block            => 'MultiSelectField',\n"
"            Values           => \\%StateList,\n"
"        },\n"
"        {\n"
"            Name             => 'Created in Queue',\n"
"            UseAsXvalue      => 1,\n"
"            UseAsValueSeries => 1,\n"
"            UseAsRestriction => 1,\n"
"            Element          => 'CreatedQueueIDs',\n"
"            Block            => 'MultiSelectField',\n"
"            Translation      => 0,\n"
"            Values           => \\%QueueList,\n"
"        },\n"
"        {\n"
"            Name             => 'Create Time',\n"
"            UseAsXvalue      => 1,\n"
"            UseAsValueSeries => 1,\n"
"            UseAsRestriction => 1,\n"
"            Element          => 'CreateTime',\n"
"            TimePeriodFormat => 'DateInputFormat',    # "
"'DateInputFormatLong',\n"
"            Block            => 'Time',\n"
"            TimeStop         => $Today,\n"
"            Values           => {\n"
"                TimeStart => 'TicketCreateTimeNewerDate',\n"
"                TimeStop  => 'TicketCreateTimeOlderDate',\n"
"            },\n"
"        },\n"
"    );\n"
"\n"
"    return @ObjectAttributes;\n"
"}\n"
"\n"
"sub GetStatElement {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # search tickets\n"
"    return $Self->{TicketObject}->TicketSearch(\n"
"        UserID     => 1,\n"
"        Result     => 'COUNT',\n"
"        Permission => 'ro',\n"
"        Limit      => 100_000_000,\n"
"        %Param,\n"
"    );\n"
"}\n"
"\n"
"sub ExportWrapper {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # wrap ids to used spelling\n"
"    for my $Use (qw(UseAsValueSeries UseAsRestriction UseAsXvalue)) {\n"
"        ELEMENT:\n"
"        for my $Element ( @{ $Param{$Use} } ) {\n"
"            next ELEMENT if !$Element || !$Element->{SelectedValues};\n"
"            my $ElementName = $Element->{Element};\n"
"            my $Values      = $Element->{SelectedValues};\n"
"\n"
"            if ( $ElementName eq 'QueueIDs' || $ElementName eq "
"'CreatedQueueIDs' ) {\n"
"                ID:\n"
"                for my $ID ( @{$Values} ) {\n"
"                    next ID if !$ID;\n"
"                    $ID->{Content} = $Self->{QueueObject}->QueueLookup( "
"QueueID => $ID->{Content} );\n"
"                }\n"
"            }\n"
"            elsif ( $ElementName eq 'StateIDs' || $ElementName eq "
"'CreatedStateIDs' ) {\n"
"                my %StateList = $Self->{StateObject}->StateList( UserID => 1 "
");\n"
"                ID:\n"
"                for my $ID ( @{$Values} ) {\n"
"                    next ID if !$ID;\n"
"                    $ID->{Content} = $StateList{ $ID->{Content} };\n"
"                }\n"
"            }\n"
"        }\n"
"    }\n"
"    return \\%Param;\n"
"}\n"
"\n"
"sub ImportWrapper {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # wrap used spelling to ids\n"
"    for my $Use (qw(UseAsValueSeries UseAsRestriction UseAsXvalue)) {\n"
"        ELEMENT:\n"
"        for my $Element ( @{ $Param{$Use} } ) {\n"
"            next ELEMENT if !$Element || !$Element->{SelectedValues};\n"
"            my $ElementName = $Element->{Element};\n"
"            my $Values      = $Element->{SelectedValues};\n"
"\n"
"            if ( $ElementName eq 'QueueIDs' || $ElementName eq "
"'CreatedQueueIDs' ) {\n"
"                ID:\n"
"                for my $ID ( @{$Values} ) {\n"
"                    next ID if !$ID;\n"
"                    if ( $Self->{QueueObject}->QueueLookup( Queue => "
"$ID->{Content} ) ) {\n"
"                        $ID->{Content}\n"
"                            = $Self->{QueueObject}->QueueLookup( Queue => "
"$ID->{Content} );\n"
"                    }\n"
"                    else {\n"
"                        $Self->{LogObject}->Log(\n"
"                            Priority => 'error',\n"
"                            Message  => \"Import: Can' find the queue "
"$ID->{Content}!\"\n"
"                        );\n"
"                        $ID = undef;\n"
"                    }\n"
"                }\n"
"            }\n"
"            elsif ( $ElementName eq 'StateIDs' || $ElementName eq "
"'CreatedStateIDs' ) {\n"
"                ID:\n"
"                for my $ID ( @{$Values} ) {\n"
"                    next ID if !$ID;\n"
"\n"
"                    my %State = $Self->{StateObject}->StateGet(\n"
"                        Name  => $ID->{Content},\n"
"                        Cache => 1,\n"
"                    );\n"
"                    if ( $State{ID} ) {\n"
"                        $ID->{Content} = $State{ID};\n"
"                    }\n"
"                    else {\n"
"                        $Self->{LogObject}->Log(\n"
"                            Priority => 'error',\n"
"                            Message  => \"Import: Can' find state "
"$ID->{Content}!\"\n"
"                        );\n"
"                        $ID = undef;\n"
"                    }\n"
"                }\n"
"            }\n"
"        }\n"
"    }\n"
"    return \\%Param;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:661
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n"
"<otrs_config version=\"1.0\" init=\"Config\">\n"
"    <ConfigItem "
"Name=\"Stats::DynamicObjectRegistration###DynamicStatsTemplate\" "
"Required=\"0\" Valid=\"1\">\n"
"        <Description Lang=\"en\">Here you can decide if the common stats "
"module may generate stats about the number of default tickets a requester "
"created.</Description>\n"
"        <Group>Framework</Group>\n"
"        <SubGroup>Core::Stats</SubGroup>\n"
"        <Setting>\n"
"            <Hash>\n"
"                <Item "
"Key=\"Module\">Kernel::System::Stats::Dynamic::DynamicStatsTemplate</Item>\n"
"            </Hash>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
"</otrs_config>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:681 en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1063
msgid "Use cases."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:687
msgid ""
"If you have a lot of cells in the result table and the "
"<literal>GetStatElement</literal> is quite complex, the request can take a "
"long time."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:693
msgid "Dynamic stat modules are available since OTRS 2.0."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:698
msgid "Static Stats"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:700
msgid ""
"The subsequent paragraphs describe the static stats. Static stats are very "
"easy to create as these modules have to implement only three subroutines."
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:708
msgid "<literal>Param</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:718
msgid "The following paragraphs describe the subroutines needed in a static stats."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:721
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {%Param};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check all needed objects\n"
"    for my $Needed (\n"
"        qw(DBObject ConfigObject LogObject\n"
"        TimeObject MainObject EncodeObject)\n"
"        )\n"
"    {\n"
"        $Self->{$Needed} = $Param{$Needed} || die \"Got no $Needed\";\n"
"    }\n"
"\n"
"    # create needed objects\n"
"    $Self->{TypeObject}   = Kernel::System::Type->new( %{$Self} );\n"
"    $Self->{TicketObject} = Kernel::System::Ticket->new( %{$Self} );\n"
"    $Self->{QueueObject}  = Kernel::System::Queue->new( %{$Self} );\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:748
msgid ""
"The <literal>new</literal> creates a new instance of the static stats "
"class. First it creates a new object and then it checks for the needed "
"objects."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:751
#, no-wrap
msgid ""
"sub Param {\n"
"    my $Self = shift;\n"
"\n"
"    my %Queues = $Self->{QueueObject}->GetAllQueues();\n"
"    my %Types  = $Self->{TypeObject}->TypeList(\n"
"        Valid => 1,\n"
"    );\n"
"\n"
"    my @Params = (\n"
"        {\n"
"            Frontend  => 'Type',\n"
"            Name      => 'TypeIDs',\n"
"            Multiple  => 1,\n"
"            Size      => 3,\n"
"            Data      => \\%Types,\n"
"        },\n"
"        {\n"
"            Frontend  => 'Queue',\n"
"            Name      => 'QueueIDs',\n"
"            Multiple  => 1,\n"
"            Size      => 3,\n"
"            Data      => \\%Queues,\n"
"        },\n"
"    );\n"
"\n"
"    return @Params;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:782
msgid ""
"The <literal>Param</literal> method provides the list of all "
"parameters/attributes that can be selected to create a static stat. It gets "
"some parameters passed: The values for the stats attributes provided in a "
"request, the format of the stats and the name of the object (name of the "
"module)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:785
msgid ""
"The parameters/attributes have to be hash references with these key-value "
"pairs:"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:790
msgid "<literal>Frontend</literal>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:798
msgid "<literal>Data</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:804
msgid ""
"Other parameter for the <literal>BuildSelection</literal> method of the "
"<literal>LayoutObject</literal> can be used, as it is done with "
"<literal>Size</literal> and <literal>Multiple</literal> in this sample "
"module."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:807
#, no-wrap
msgid ""
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for my $Needed (qw(TypeIDs QueueIDs)) {\n"
"        if ( !$Param{$Needed} ) {\n"
"            $Self->{LogObject}->Log(\n"
"                Priority => 'error',\n"
"                Message  => \"Need $Needed!\",\n"
"            );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # set report title\n"
"    my $Title = 'Tickets per Queue';\n"
"\n"
"    # table headlines\n"
"    my @HeadData = (\n"
"        'Ticket Number',\n"
"        'Queue',\n"
"        'Type',\n"
"    );\n"
"\n"
"    my @Data;\n"
"    my @TicketIDs = $Self->{TicketObject}->TicketSearch(\n"
"        UserID     => 1,\n"
"        Result     => 'ARRAY',\n"
"        Permission => 'ro',\n"
"        %Param,\n"
"    );\n"
"\n"
"    for my $TicketID ( @TicketIDs ) {\n"
"        my %Ticket = $Self->{TicketObject}->TicketGet(\n"
"            UserID => 1,\n"
"            TicketID => $TicketID,\n"
"        );\n"
"        push @Data, [ $Ticket{TicketNumber}, $Ticket{Queue}, $Ticket{Type} "
"];\n"
"    }\n"
"\n"
"    return ( [$Title], [@HeadData], @Data );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:853
msgid ""
"The <literal>Run</literal> method actually generates the table data for the "
"stats. It gets the attributes for this stats passed. In this sample in "
"<literal>%Param</literal> a key <literal>TypeIDs</literal> and a key "
"<literal>QueueIDs</literal> exist (see attributes in "
"<literal>Param</literal> method) and their values are array references. The "
"returned data consists of three parts: Two array references and an array. In "
"the first array reference the title for the statistic is stored, the second "
"array reference contains the headlines for the columns in the table. And "
"then the data for the table body follow."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:856
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/Stats/Static/StaticStatsTemplate.pm\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Stats::Static::StaticStatsTemplate;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::Type;\n"
"use Kernel::System::Ticket;\n"
"use Kernel::System::Queue;\n"
"\n"
"=head1 NAME\n"
"\n"
"StaticStatsTemplate.pm - the module that creates the stats about tickets in "
"a queue\n"
"\n"
"=head1 SYNOPSIS\n"
"\n"
"All functions\n"
"\n"
"=head1 PUBLIC INTERFACE\n"
"\n"
"=over 4\n"
"\n"
"=cut\n"
"\n"
"=item new()\n"
"\n"
"create an object\n"
"\n"
"    use Kernel::Config;\n"
"    use Kernel::System::Encode;\n"
"    use Kernel::System::Log;\n"
"    use Kernel::System::Main;\n"
"    use Kernel::System::Time;\n"
"    use Kernel::System::DB;\n"
"    use Kernel::System::Stats::Static::StaticStatsTemplate;\n"
"\n"
"    my $ConfigObject = Kernel::Config->new();\n"
"    my $EncodeObject = Kernel::System::Encode->new(\n"
"        ConfigObject => $ConfigObject,\n"
"    );\n"
"    my $LogObject    = Kernel::System::Log->new(\n"
"        ConfigObject => $ConfigObject,\n"
"    );\n"
"    my $MainObject = Kernel::System::Main->new(\n"
"        ConfigObject => $ConfigObject,\n"
"        LogObject    => $LogObject,\n"
"    );\n"
"    my $TimeObject = Kernel::System::Time->new(\n"
"        ConfigObject => $ConfigObject,\n"
"        LogObject    => $LogObject,\n"
"    );\n"
"    my $DBObject = Kernel::System::DB->new(\n"
"        ConfigObject => $ConfigObject,\n"
"        LogObject    => $LogObject,\n"
"        MainObject   => $MainObject,\n"
"    );\n"
"    my $StatsObject = "
"Kernel::System::Stats::Static::StaticStatsTemplate->new(\n"
"        ConfigObject => $ConfigObject,\n"
"        LogObject    => $LogObject,\n"
"        MainObject   => $MainObject,\n"
"        TimeObject   => $TimeObject,\n"
"        DBObject     => $DBObject,\n"
"        EncodeObject => $EncodeObject,\n"
"    );\n"
"\n"
"=cut\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {%Param};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check all needed objects\n"
"    for my $Needed (\n"
"        qw(DBObject ConfigObject LogObject\n"
"        TimeObject MainObject EncodeObject)\n"
"        )\n"
"    {\n"
"        $Self->{$Needed} = $Param{$Needed} || die \"Got no $Needed\";\n"
"    }\n"
"\n"
"    # create needed objects\n"
"    $Self->{TypeObject}   = Kernel::System::Type->new( %{$Self} );\n"
"    $Self->{TicketObject} = Kernel::System::Ticket->new( %{$Self} );\n"
"    $Self->{QueueObject}  = Kernel::System::Queue->new( %{$Self} );\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"=item Param()\n"
"\n"
"Get all parameters a user can specify.\n"
"\n"
"    my @Params = $StatsObject->Param();\n"
"\n"
"=cut\n"
"\n"
"sub Param {\n"
"    my $Self = shift;\n"
"\n"
"    my %Queues = $Self->{QueueObject}->GetAllQueues();\n"
"    my %Types  = $Self->{TypeObject}->TypeList(\n"
"        Valid => 1,\n"
"    );\n"
"\n"
"    my @Params = (\n"
"        {\n"
"            Frontend  => 'Type',\n"
"            Name      => 'TypeIDs',\n"
"            Multiple  => 1,\n"
"            Size      => 3,\n"
"            Data      => \\%Types,\n"
"        },\n"
"        {\n"
"            Frontend  => 'Queue',\n"
"            Name      => 'QueueIDs',\n"
"            Multiple  => 1,\n"
"            Size      => 3,\n"
"            Data      => \\%Queues,\n"
"        },\n"
"    );\n"
"\n"
"    return @Params;\n"
"}\n"
"\n"
"=item Run()\n"
"\n"
"generate the statistic.\n"
"\n"
"    my $StatsInfo = $StatsObject->Run(\n"
"        TypeIDs  => [\n"
"            1, 2, 4\n"
"        ],\n"
"        QueueIDs => [\n"
"            3, 4, 6\n"
"        ],\n"
"    );\n"
"\n"
"=cut\n"
"\n"
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for my $Needed (qw(TypeIDs QueueIDs)) {\n"
"        if ( !$Param{$Needed} ) {\n"
"            $Self->{LogObject}->Log(\n"
"                Priority => 'error',\n"
"                Message  => \"Need $Needed!\",\n"
"            );\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # set report title\n"
"    my $Title = 'Tickets per Queue';\n"
"\n"
"    # table headlines\n"
"    my @HeadData = (\n"
"        'Ticket Number',\n"
"        'Queue',\n"
"        'Type',\n"
"    );\n"
"\n"
"    my @Data;\n"
"    my @TicketIDs = $Self->{TicketObject}->TicketSearch(\n"
"        UserID     => 1,\n"
"        Result     => 'ARRAY',\n"
"        Permission => 'ro',\n"
"        %Param,\n"
"    );\n"
"\n"
"    for my $TicketID ( @TicketIDs ) {\n"
"        my %Ticket = $Self->{TicketObject}->TicketGet(\n"
"            UserID => 1,\n"
"            TicketID => $TicketID,\n"
"        );\n"
"        push @Data, [ $Ticket{TicketNumber}, $Ticket{Queue}, $Ticket{Type} "
"];\n"
"    }\n"
"\n"
"    return ( [$Title], [@HeadData], @Data );\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1057
msgid ""
"There is no configuration needed. Right after installation, the module is "
"available to create a statistic for this module."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1069
msgid "Caveats and Warnings for static stats."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1075
msgid "Static stat modules are available since OTRS 1.3."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1079
msgid "Using old static stats"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1081
msgid ""
"Standard OTRS versions 1.3 and 2.0 already facilitated the generation of "
"stats.  Various stats for OTRS versions 1.3 and 2.0 which have been "
"specially developed to meet customers' requirements can be used in more "
"recent versions too."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1086
msgid ""
"The files must merely be moved from the "
"<filename>Kernel/System/Stats/</filename> path to "
"<filename>Kernel/System/Stats/Static/</filename>. Additionally the package "
"name of the respective script must be amended by "
"<literal>::Static</literal>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1093
msgid "The following example shows how the first path is amended."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1096
#, no-wrap
msgid "    package Kernel::System::Stats::AccountedTime;\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/stats.xml:1101
#, no-wrap
msgid "    package Kernel::System::Stats::Static::AccountedTime;\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:4
msgid "Ticket Event Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:6
msgid ""
"Ticket event modules are running right after a ticket action takes place.  "
"Per convention these modules are located in the directory "
"<filename>Kernel/System/Ticket/Event</filename>.  A ticket event module "
"needs only two functions: <code>new()</code> and <code>Run()</code>.  The "
"method <code>Run()</code> receives at least the parameters "
"<literal>Event</literal>, <literal>UserID</literal> and "
"<literal>Data</literal>.  <literal>Data</literal> is a hash ref containing "
"data of the ticket, and in case of Article-related events also containing "
"Article data."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:16
msgid ""
"See "
"<filename>Kernel/System/Ticket/Event/EventModulePostTemplate.pm</filename> "
"in the package <literal>TemplateModule</literal>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:22
msgid ""
"See <filename>Kernel/Config/Files/EventModulePostTemplate.xml</filename> in "
"the package <literal>TemplateModule</literal>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:28
msgid "A ticket should be unlocked after a move action."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:30
msgid ""
"This standard feature has been implemented with the ticket event module "
"<literal>Kernel::System::Ticket::Event::ForceUnlock</literal>.  When this "
"feature is not wanted, then it can be turned off by unsetting the SysConfig "
"entry <literal>Ticket::EventModulePost###910-ForceUnlockOnMove</literal>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:37
msgid "Perform extra cleanup action when a ticket is deleted."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:39
msgid ""
"A customized OTRS might hold non-standard data in additional database "
"tables.  When a ticket is deleted then this additional data needs to be "
"deleted.  This functionality can be achieved with a ticket event module "
"listening to <literal>TicketDelete</literal> events."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:45
msgid "New tickets should be twittered."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:47
msgid ""
"A ticket event module listening to <literal>TicketCreate</literal> can send "
"out tweets."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:54
msgid "No caveats are known."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:60
msgid "Ticket events have been available in OTRS since OTRS 2.0."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:63
msgid "Ticket events available in OTRS 5.0:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:67
msgid "TicketCreate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:68
msgid "TicketDelete"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:69
msgid "TicketTitleUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:70
msgid "TicketUnlockTimeoutUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:71
msgid "TicketQueueUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:72
msgid "TicketTypeUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:73
msgid "TicketServiceUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:74
msgid "TicketSLAUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:75
msgid "TicketCustomerUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:76
msgid "TicketPendingTimeUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:77
msgid "TicketLockUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:78
msgid "TicketArchiveFlagUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:79
msgid "TicketStateUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:80
msgid "TicketOwnerUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:81
msgid "TicketResponsibleUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:82
msgid "TicketPriorityUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:83
msgid "HistoryAdd"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:84
msgid "HistoryDelete"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:85
msgid "TicketAccountTime"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:86
msgid "TicketMerge"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:87
msgid "TicketSubscribe"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:88
msgid "TicketUnsubscribe"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:89
msgid "TicketFlagSet"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:90
msgid "TicketFlagDelete"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:91
msgid "TicketSlaveLinkAdd"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:92
msgid "TicketSlaveLinkDelete"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:93
msgid "TicketMasterLinkDelete"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:94
msgid "EscalationResponseTimeNotifyBefore"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:95
msgid "EscalationUpdateTimeNotifyBefore"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:96
msgid "EscalationSolutionTimeNotifyBefore"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:97
msgid "EscalationResponseTimeStart"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:98
msgid "EscalationUpdateTimeStart"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:99
msgid "EscalationSolutionTimeStart"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:100
msgid "EscalationResponseTimeStop"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:101
msgid "EscalationUpdateTimeStop"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:102
msgid "EscalationSolutionTimeStop"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:103
msgid "NotificationNewTicket"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:104
msgid "NotificationFollowUp"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:105
msgid "NotificationLockTimeout"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:106
msgid "NotificationOwnerUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:107
msgid "NotificationResponsibleUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:108
msgid "NotificationAddNote"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:109
msgid "NotificationMove"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:110
msgid "NotificationPendingReminder"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:111
msgid "NotificationEscalation"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:112
msgid "NotificationEscalationNotifyBefore"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:113
msgid "NotificationServiceUpdate"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:117
msgid "Article events available in OTRS 5.0:"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:121
msgid "ArticleCreate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:122
msgid "ArticleUpdate"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:123
msgid "ArticleSend"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:124
msgid "ArticleBounce"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:125 en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:130
msgid "ArticleAgentNotification"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:126 en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:131
msgid "ArticleCustomerNotification"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:127
msgid "ArticleAutoResponse"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:128
msgid "ArticleFlagSet"
msgstr ""

#. type: Content of: <section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketevent.xml:129
msgid "ArticleFlagDelete"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:6
msgid "Ticket Menu Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:8
msgid ""
"Ticket menu modules are used to display an additional link in the menu above "
"a ticket. You can write and register your own ticket menu module.  There are "
"4 ticket menus (Generic, Lock, Responsible and TicketWatcher) which come "
"with the OTRS framework. For more information please have a look at the OTRS "
"admin manual."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:18
msgid ""
"The ticket menu modules are located under "
"<filename>Kernel/Output/HTML/TicketMenu*.pm</filename>.  Following, there is "
"an example of a ticket menu module.  Save it under "
"<filename>Kernel/Output/HTML/TicketMenuCustom.pm</filename>.  You just need "
"2 functions: <code>new()</code> and <code>Run()</code>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:25
#, no-wrap
msgid ""
"# --\n"
"# Kernel/Output/HTML/TicketMenuCustom.pm\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# Id: TicketMenuCustom.pm,v 1.17 2010/04/12 21:34:06 martin Exp $\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::Output::HTML::TicketMenuCustom;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # get needed objects\n"
"    for my $Object (qw(ConfigObject LogObject DBObject LayoutObject UserID "
"TicketObject)) {\n"
"        $Self->{$Object} = $Param{$Object} || die \"Got no $Object!\";\n"
"    }\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    if ( !$Param{Ticket} ) {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'error',\n"
"            Message  => 'Need Ticket!'\n"
"        );\n"
"        return;\n"
"    }\n"
"\n"
"    # check if frontend module registered, if not, do not show action\n"
"    if ( $Param{Config}->{Action} ) {\n"
"        my $Module = $Self->{ConfigObject}->Get('Frontend::Module')->{ "
"$Param{Config}->{Action} };\n"
"        return if !$Module;\n"
"    }\n"
"\n"
"    # check permission\n"
"    my $AccessOk = $Self->{TicketObject}->Permission(\n"
"        Type     => 'rw',\n"
"        TicketID => $Param{Ticket}->{TicketID},\n"
"        UserID   => $Self->{UserID},\n"
"        LogNo    => 1,\n"
"    );\n"
"    return if !$AccessOk;\n"
"\n"
"    # check permission\n"
"    if ( $Self->{TicketObject}->CustomIsTicketCustom( TicketID => "
"$Param{Ticket}->{TicketID} ) ) {\n"
"        my $AccessOk = $Self->{TicketObject}->OwnerCheck(\n"
"            TicketID => $Param{Ticket}->{TicketID},\n"
"            OwnerID  => $Self->{UserID},\n"
"        );\n"
"        return if !$AccessOk;\n"
"    }\n"
"\n"
"    # check acl\n"
"    return\n"
"        if defined $Param{ACL}->{ $Param{Config}->{Action} }\n"
"            && !$Param{ACL}->{ $Param{Config}->{Action} };\n"
"\n"
"    # if ticket is customized\n"
"    if ( $Param{Ticket}->{Custom} eq 'lock' ) {\n"
"\n"
"        # if it is locked for somebody else\n"
"        return if $Param{Ticket}->{OwnerID} ne $Self->{UserID};\n"
"\n"
"        # show custom action\n"
"        return {\n"
"            %{ $Param{Config} },\n"
"            %{ $Param{Ticket} },\n"
"            %Param,\n"
"            Name        => 'Custom',\n"
"            Description => 'Custom to give it back to the queue!',\n"
"            Link        => "
"'Action=AgentTicketCustom;Subaction=Custom;TicketID=$QData{\"TicketID\"}',\n"
"        };\n"
"    }\n"
"\n"
"    # if ticket is customized\n"
"    return {\n"
"        %{ $Param{Config} },\n"
"        %{ $Param{Ticket} },\n"
"        %Param,\n"
"        Name        => 'Custom',\n"
"        Description => 'Custom it to work on it!',\n"
"        Link        => "
"'Action=AgentTicketCustom;Subaction=Custom;TicketID=$QData{\"TicketID\"}',\n"
"    };\n"
"}\n"
"\n"
"1;\n"
"\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:134
msgid ""
"There is the need to activate your custom ticket menu module.  This can be "
"done using the XML configuration below. There may be additional parameters "
"in the config hash for your ticket menu module."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:140
#, no-wrap
msgid ""
"<ConfigItem Name=\"Ticket::Frontend::MenuModule###110-Custom\" "
"Required=\"0\" Valid=\"1\">\n"
"    <Description Lang=\"en\">Module to show custom link in "
"menu.</Description>\n"
"    <Description Lang=\"de\">Mit diesem Modul wird der Custom-Link in der "
"Linkleiste der Ticketansicht angezeigt.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::Agent::Ticket::MenuModule</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item "
"Key=\"Module\">Kernel::Output::HTML::TicketMenuCustom</Item>\n"
"            <Item Key=\"Name\">Custom</Item>\n"
"            <Item Key=\"Action\">AgentTicketCustom</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:160
msgid ""
"Useful ticket menu implementation could be a link to a external tool if "
"parameters (e.g. <literal>FreeTextField</literal>) have been set."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:167
msgid ""
"The ticket menu directs to an URL that can be handled.  If you want to "
"handle that request via the OTRS framework, you have to write your own "
"frontend module."
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:185
msgid "TicketMenuGeneric"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:189
msgid "TicketMenuLock"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:193
msgid "TicketMenuResponsible"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:194
msgid "2.1"
msgstr ""

#. type: Content of: <section><section><para><informaltable><tgroup><tbody><row><entry>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticket-menu.xml:197
msgid "TicketMenuTicketWatcher"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:4
msgid "Ticket Number Generator Modules"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:6
msgid ""
"Ticket number generators are used to create distinct identifiers aka ticket "
"number for new tickets.  Any method of creating a string of numbers is "
"possible, you should use common sense about the length of the resulting "
"string (guideline: 5-10)."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:12
msgid ""
"When creating a ticket number, make sure the result is prefixed by the "
"SysConfig variable <literal>SystemID</literal> in order to enable the "
"detection of ticket numbers on inbound email responses.  A ticket number "
"generator module needs the two functions <code>TicketCreateNumber()</code> "
"and <code>GetTNByString()</code>."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:18
msgid ""
"The method <code>TicketCreateNumber()</code> is called without parameters "
"and returns the new ticket number."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:22
msgid ""
"The method <code>GetTNByString()</code> is called with the param String "
"which contains the string to be parsed for a ticket number and returns the "
"ticket number if found."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:28
msgid ""
"See <filename>Kernel/System/Ticket/Number/UserRandom.pm</filename> in the "
"package <literal>TemplateModule</literal>."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:34
msgid ""
"See <filename>Kernel/Config/Files/TicketNumberGenerator.xml</filename> in "
"the package <literal>TemplateModule</literal>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:40
msgid "Ticket numbers should follow a specific scheme."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:42
msgid ""
"You will need to create a new ticket number generator if the default modules "
"don't provide the ticket number scheme you'd like to use."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:50
msgid ""
"You should stick to the code of <code>GetTNByString()</code> as used in "
"existing ticket number generators to prevent problems with ticket number "
"parsing.  Also the routine to detect a loop in "
"<code>TicketCreateNumber()</code> should be kept intact to prevent duplicate "
"ticket numbers."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/ticketnumber-generator.xml:59
msgid "Ticket number generators have been available in OTRS since OTRS 1.1."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:5
msgid "OTRS Daemon"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:7
msgid ""
"The OTRS Daemon is a separated process that helps OTRS to execute certain "
"actions asynchronously and detached of the web server process, but sharing "
"the same database."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:11
msgid "OTRS Daemon Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:13
msgid ""
"The OTRS Daemon <filename>bin/otrs.Daemon.pl</filename> main purpose is to "
"call (Daemonize) all the registered daemon modules in the System "
"Configuration."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:17
msgid ""
"Each daemon module must implement a common API in order to be correctly "
"called by the OTRS Daemon and be a semi persistent process in the "
"system. Persistent process could grow in size and memory usage over the time "
"and normally they do not respond to changes in the configuration. That is "
"why the daemon modules should implement a discard mechanism to be stopped "
"and re-spawned again from time to time, freeing system resources and "
"re-reading the configuration."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:25
msgid ""
"A daemon module could be an all-in-one solution to perform a certain job, "
"but there could be the case that a solution requires different daemon "
"modules due to its complexity.  That is exactly the case of the OTRS "
"Scheduler Daemon that is split into several daemon modules including some "
"daemon modules for task management and task execution."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:31
msgid ""
"It is not always necessary to create a new daemon module to perform certain "
"task, usually the OTRS Scheduler Daemon can deal with the majority of them, "
"either if it is an OTRS function that needs to be executed on a regular "
"basis (CRON like) or if it's triggered by an OTRS event, the OTRS Scheduler "
"should be capable to deal with it out of the box or by adding a new "
"scheduler task worker module."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:38
msgid "Creating A New Daemon Module"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:40
msgid ""
"All daemon modules requires to be registered in the System Configuration in "
"order to be called by the main OTRS Daemon."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:44
msgid "Daemon Module Registration Code Example"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:46
#, no-wrap
msgid ""
"<ConfigItem Name=\"DaemonModules###TestDaemon\" Required=\"1\" "
"Valid=\"1\">\n"
"    <Description Translatable=\"1\">The daemon registration for the "
"scheduler generic agent task manager.</Description>\n"
"    <Group>Daemon</Group>\n"
"    <SubGroup>Core::Daemon::ModuleRegistration</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item "
"Key=\"Module\">Kernel::System::Daemon::DaemonModules::TestDaemon</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:61
msgid "Daemon Module Code Example"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:63
msgid ""
"The following code implements a daemon module that displays the system time "
"every 2 seconds."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:67
#, no-wrap
msgid ""
"# --\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::Daemon::DaemonModules::TestDaemon;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"use utf8;\n"
"\n"
"use Kernel::System::VariableCheck qw(:all);\n"
"\n"
"use parent qw(Kernel::System::Daemon::BaseDaemon);\n"
"\n"
"our @ObjectDependencies = (\n"
"    'Kernel::Config',\n"
"    'Kernel::System::Cache',\n"
"    'Kernel::System::DB',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:94 en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:79
msgid ""
"This is common header that can be found in most OTRS modules. The "
"class/package name is declared via the <literal>package</literal> keyword."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:98
msgid ""
"In this case we are inheriting from <literal>BaseDaemon</literal> class, and "
"the object manager dependencies are set."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:102
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # Allocate new hash for object.\n"
"    my $Self = {};\n"
"    bless $Self, $Type;\n"
"\n"
"    # Get objects in constructor to save performance.\n"
"    $Self->{ConfigObject} = $Kernel::OM->Get('Kernel::Config');\n"
"    $Self->{CacheObject}  = $Kernel::OM->Get('Kernel::System::Cache');\n"
"    $Self->{DBObject}     = $Kernel::OM->Get('Kernel::System::DB');\n"
"\n"
"    # Disable in memory cache to be clusterable.\n"
"    $Self->{CacheObject}->Configure(\n"
"        CacheInMemory  => 0,\n"
"        CacheInBackend => 1,\n"
"    );\n"
"\n"
"    $Self->{SleepPost} = 2;          # sleep 2 seconds after each loop\n"
"    $Self->{Discard}   = 60 * 60;    # discard every hour\n"
"\n"
"    $Self->{DiscardCount} = $Self->{Discard} / $Self->{SleepPost};\n"
"\n"
"    $Self->{Debug}      = $Param{Debug};\n"
"    $Self->{DaemonName} = 'Daemon: TestDaemon';\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:134
msgid ""
"The constructor <literal>new</literal> creates a new instance of the class.  "
"Some used objects are also created here. It is highly recommended to disable "
"in-memory cache in daemon modules especially if OTRS runs in a cluster "
"environment."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:140
msgid ""
"In order to make this daemon module to be executed every two seconds it is "
"necessary to define a sleep time accordingly, otherwise it will be executed "
"as soon as possible."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:145
msgid ""
"Refreshing the daemon module from time to time is necessary in order to "
"define when it should be discarded."
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:149
msgid ""
"For the following functions (<literal>PreRun</literal>, "
"<literal>Run</literal> and <literal>PostRun</literal>) if they return false, "
"the main OTRS Daemon will discard the object and create a new one as soon as "
"possible."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:154
#, no-wrap
msgid ""
"sub PreRun {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # Check if database is on-line.\n"
"    return 1 if $Self->{DBObject}->Ping();\n"
"\n"
"    sleep 10;\n"
"\n"
"    return;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:168
msgid ""
"The <literal>PreRun</literal> method is executed before the main daemon "
"module method, and the its purpose is to perform some test before the real "
"operation. In this case a check to the database is done (always "
"recommended), otherwise it sleeps for 10 seconds. This is needed in order to "
"wait for DB connection to be reestablished."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:174
#, no-wrap
msgid ""
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    print \"Current time \" . localtime . \"\\n\";\n"
"\n"
"    return 1;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:185
msgid ""
"The <literal>Run</literal> method is where the main daemon module code "
"resides, in this case it only prints the current time."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:189
#, no-wrap
msgid ""
"sub PostRun {\n"
"    my ( $Self, %Param ) = @_;\n"
"    sleep $Self->{SleepPost};\n"
"    $Self->{DiscardCount}--;\n"
"\n"
"    if ( $Self->{Debug} ) {\n"
"        print \"  $Self->{DaemonName} Discard Count: "
"$Self->{DiscardCount}\\n\";\n"
"    }\n"
"\n"
"    return if $Self->{DiscardCount} <= 0;\n"
"\n"
"    return 1;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:206
msgid ""
"The <literal>PostRun</literal> method is used to perform the sleeps "
"(preventing the daemon module to be executed too often) and also to manage "
"the safe discarding of the object. Other operations like verification or "
"cleanup can be done here."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:211
#, no-wrap
msgid ""
"sub Summary {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my %Summary = (\n"
"        Header => 'Test Daemon Summary:',\n"
"        Column => [\n"
"            {\n"
"                Name        => 'SomeColumn',\n"
"                DisplayName => 'Some Column',\n"
"                Size        => 15,\n"
"            },\n"
"            {\n"
"                Name        => 'AnotherColumn',\n"
"                DisplayName => 'Another Column',\n"
"                Size        => 15,\n"
"            },\n"
"            # ...\n"
"        ],\n"
"        Data => [\n"
"            {\n"
"                SomeColumn    => 'Some Data 1',\n"
"                AnotherColumn => 'Another Data 1',\n"
"            },\n"
"            {\n"
"                SomeColumn    => 'Some Data 2',\n"
"                AnotherColumn => 'Another Data 2',\n"
"            },\n"
"            # ...\n"
"        ],\n"
"        NoDataMesssage => '',\n"
"    );\n"
"\n"
"    return \\%Summary;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:249
msgid ""
"The <literal>Summary</literal> method is called by the console command "
"<literal>Maint::Daemon::Summary</literal> and it's required to return "
"<literal>Header</literal>, <literal>Column</literal>, "
"<literal>Data</literal> and <literal>NoDataMessages</literal> keys.  "
"<literal>Column</literal> and <literal>Data</literal> needs to be an array "
"of hashes.  It is used to display useful information of what the daemon "
"module is currently doing, or what has been done so far. This method is "
"optional."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:257 en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:165
#, no-wrap
msgid "1;\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/daemon-modules.xml:262 en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:170
msgid "End of file."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:5
msgid "OTRS Scheduler"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:7
msgid ""
"The OTRS Scheduler is a conjunction of daemon modules and task workers that "
"runs together in order to perform all needed OTRS tasks asynchronously from "
"the web server process."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:11
msgid "OTRS Scheduler Task Managers"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:13
msgid ""
"<literal>SchedulerCronTaskManager</literal> reads registered cron tasks from "
"the OTRS SysConfig and determines the correct time to create a task to be "
"executed."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:17
msgid ""
"<literal>SchedulerFutureTaskManager</literal> checks the tasks that are set "
"to be executed just one time in the future and sets this task to be executed "
"in time. For example, when a Generic Interface Invoker can not reach the "
"remote server, it can self schedule to be run again 5 minutes later."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:23
msgid ""
"<literal>SchedulerGenericAgentTaskManager</literal> continuously reads the "
"<literal>GenericAgent</literal> tasks that are set to be run on regular time "
"basis and sets their execution accordingly."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:28
msgid ""
"Whenever these tasks managers are not enough, a new daemon module can be "
"created. At a certain point of its <literal>Run()</literal> method it needs "
"to call <literal>TaskAdd()</literal> from the <literal>chedulerDB</literal> "
"object to register a task, and as soon as it is registered, it will be "
"executed in the next free slot by the "
"<literal>SchedulerTaskWorker</literal>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:35
msgid "OTRS Scheduler Task Workers"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:37
msgid ""
"<literal>SchedulerTaskWorker</literal> execute all tasks planned by the "
"previous tasks managers plus the ones that come directly from the code by "
"using the Asynchronous Executor."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:41
msgid ""
"In order to execute each task, the <literal>SchedulerTaskWorker</literal> "
"calls a backend module (Task Worker) to perform the specific task. The "
"worker module is determined by the task type. If a new task type is added, "
"it will require a new task worker."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:47
msgid "Creating A New Scheduler Task Worker"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:49
msgid ""
"All files placed under "
"<filename>Kernel/System/Daemon/DaemonModules/SchedulerTaskWorker</filename> "
"could potentially be task workers and they do not require any registration "
"in the system configuration."
msgstr ""

#. type: Content of: <section><section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:55
msgid "Scheduler Task Worker Code Example"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:57
#, no-wrap
msgid ""
"# --\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package "
"Kernel::System::Daemon::DaemonModules::SchedulerTaskWorker::TestWorker;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use parent qw(Kernel::System::Daemon::DaemonModules::BaseTaskWorker);\n"
"\n"
"our @ObjectDependencies = (\n"
"    'Kernel::System::Log',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:83
msgid ""
"In this case we are inheriting from <literal>BaseTaskWorker</literal> class, "
"and the object manager dependencies are set."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:87
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    $Self->{Debug}      = $Param{Debug};\n"
"    $Self->{WorkerName} = 'Worker: Test';\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:102
msgid "The constructor <literal>new</literal> creates a new instance of the class."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:105
#, no-wrap
msgid ""
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # Check task params.\n"
"    my $CheckResult = $Self->_CheckTaskParams(\n"
"        %Param,\n"
"        NeededDataAttributes => [ 'NeededAtrribute1', 'NeededAtrribute2' "
"],\n"
"        DataParamsRef        => 'HASH', # or 'ARRAT'\n"
"    );\n"
"\n"
"    # Stop execution if an error in params is detected.\n"
"    return if !$CheckResult;\n"
"\n"
"    my $Success;\n"
"    my $ErrorMessage;\n"
"\n"
"    if ( $Self->{Debug} ) {\n"
"        print \"    $Self->{WorkerName} executes task: "
"$Param{TaskName}\\n\";\n"
"    }\n"
"\n"
"    do {\n"
"\n"
"        # Localize the standard error.\n"
"        local *STDERR;\n"
"\n"
"        # Redirect the standard error to a variable.\n"
"        open STDERR, \">>\", \\$ErrorMessage;\n"
"\n"
"        $Success = $Kernel::OM->Get('Kernel::System::MyPackage')->Run(\n"
"            Param1 => 'someparam',\n"
"        );\n"
"    };\n"
"\n"
"    if ( !$Success ) {\n"
"\n"
"        $ErrorMessage ||= \"$Param{TaskName} execution failed without an "
"error message!\";\n"
"\n"
"        $Self->_HandleError(\n"
"            TaskName     => $Param{TaskName},\n"
"            TaskType     => 'Test',\n"
"            LogMessage   => \"There was an error executing $Param{TaskName}: "
"$ErrorMessage\",\n"
"            ErrorMessage => \"$ErrorMessage\",\n"
"        );\n"
"    }\n"
"\n"
"    return $Success;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/daemon/scheduler-task-worker-modules.xml:156
msgid ""
"The <literal>Run</literal> is the main method. A call to "
"<literal>_CheckTaskParams()</literal> from the base class will save some "
"lines of code. Executing the task while capturing the STDERR is a very good "
"practice, since the OTRS Scheduler runs normally unattended, and saving all "
"errors to a variable will make it available for further processing.  "
"<literal>_HandleError()</literal> provides a common interface to send the "
"error messages as email to the recipient specified in the System "
"Configuration."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:5
msgid "Dynamic Field Backend Extension Example"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:7
msgid ""
"Backend extensions will be loaded transparently into the Backend itself as a "
"base class. All defined object and properties from the Backend will be "
"accessible in the extension."
msgstr ""

#. type: Content of: <section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:12
msgid ""
"All new functions defined in the Backend extension should be implemented in "
"a Driver extension."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:17 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:17 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:17 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:10 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:10 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:12 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:23
msgid "Code Example:"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:19
msgid ""
"In this section the <literal>Foo</literal> extension for Backend is shown "
"and explained. The extension only defines the function <code>Foo()</code>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:23
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/DynamicField/FooExtensionBackend.pm - Extension for "
"DynamicField backend\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::DynamicField::FooExtensionBackend;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::VariableCheck qw(:all);\n"
"\n"
"=head1 NAME\n"
"\n"
"Kernel::System::DynamicField::FooExtensionBackend\n"
"\n"
"=head1 SYNOPSIS\n"
"\n"
"DynamicFields Extension for Backend\n"
"\n"
"=head1 PUBLIC INTERFACE\n"
"\n"
"=over 4\n"
"\n"
"=cut\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:60
#, no-wrap
msgid ""
"=item Foo()\n"
"\n"
"Testing function: returns 1 if function is available on a Dynamic Field "
"driver.\n"
"\n"
"    my $Success = $BackendObject->Foo(\n"
"        DynamicFieldConfig   => $DynamicFieldConfig,      # complete config "
"of the DynamicField\n"
"    );\n"
"\n"
"Returns:\n"
"    $Success = 1;       # or undef\n"
"\n"
"=cut\n"
"\n"
"sub Foo {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # check needed stuff\n"
"    for my $Needed (qw(DynamicFieldConfig)) {\n"
"        if ( !$Param{$Needed} ) {\n"
"            $Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"                Priority => 'error',\n"
"                Message  => \"Need $Needed!\",\n"
"            );\n"
"\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # check DynamicFieldConfig (general)\n"
"    if ( !IsHashRefWithData( $Param{DynamicFieldConfig} ) ) {\n"
"        $Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"            Priority => 'error',\n"
"            Message  => \"The field configuration is invalid\",\n"
"        );\n"
"\n"
"        return;\n"
"    }\n"
"\n"
"    # check DynamicFieldConfig (internally)\n"
"    for my $Needed (qw(ID FieldType ObjectType)) {\n"
"        if ( !$Param{DynamicFieldConfig}->{$Needed} ) {\n"
"            $Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"                Priority => 'error',\n"
"                Message  => \"Need $Needed in DynamicFieldConfig!\",\n"
"            );\n"
"\n"
"            return;\n"
"        }\n"
"    }\n"
"\n"
"    # set the dynamic field specific backend\n"
"    my $DynamicFieldBackend = 'DynamicField' "
". $Param{DynamicFieldConfig}->{FieldType} . 'Object';\n"
"\n"
"    if ( !$Self->{$DynamicFieldBackend} ) {\n"
"        $Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"            Priority => 'error',\n"
"            Message  => \"Backend $Param{DynamicFieldConfig}->{FieldType} is "
"invalid!\",\n"
"        );\n"
"\n"
"        return;\n"
"    }\n"
"\n"
"    # verify if function is available\n"
"    return if !$Self->{$DynamicFieldBackend}->can('Foo');\n"
"\n"
"    # call HasBehavior on the specific backend\n"
"    return $Self->{$DynamicFieldBackend}->Foo(%Param);\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:132
msgid ""
"The function <code>Foo()</code> is only used for test purposes. First it "
"checks the Dynamic Field configuration, then it checks if the Dynamic Field "
"Driver (type)  exists and was already loaded. To prevent the function call "
"on a driver where is not defined it first check if the driver can execute "
"the function, then executes the function in the driver passing all "
"parameters."
msgstr ""

#. type: Content of: <section><section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-backend.xml:140
msgid ""
"It is also possible to skip the step that tests if the Driver can execute "
"the function. To do that it is necessary to implement a mechanism in the "
"Frontend module to require a special behavior on the Dynamic Field, and only "
"after call the function in the Backend object."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:5
msgid "Dynamic Field Extension Configuration File Example"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:7
msgid ""
"The configuration files are used to register the extensions for the Backend "
"and Drivers as well as new behaviors for each drivers."
msgstr ""

#. type: Content of: <section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:12
msgid ""
"If a driver is extended with a new function, the backend will need also an "
"extension for that function."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:19
msgid ""
"In this section a configuration file for <literal>Foo</literal> extension is "
"shown and explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:22 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:18
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<otrs_config version=\"1.0\" init=\"Application\">\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:28 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:24
msgid "This is the normal header for a configuration file."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:31
#, no-wrap
msgid ""
"    <ConfigItem Name=\"DynamicFields::Extension::Backend###100-Foo\" "
"Required=\"0\" Valid=\"1\">\n"
"        <Description Translatable=\"1\">Dynamic Fields "
"Extension.</Description>\n"
"        <Group>DynamicFieldFooExtension</Group>\n"
"        <SubGroup>DynamicFields::Extension::Registration</SubGroup>\n"
"        <Setting>\n"
"            <Hash>\n"
"                <Item "
"Key=\"Module\">Kernel::System::DynamicField::FooExtensionBackend</Item>\n"
"            </Hash>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:45
msgid ""
"This setting registers the extension in the <literal>Backend</literal> "
"object. The module will be loaded from <literal>Backend</literal> as a base "
"class."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:49
#, no-wrap
msgid ""
"    <ConfigItem Name=\"DynamicFields::Extension::Driver::Text###100-Foo\" "
"Required=\"0\" Valid=\"1\">\n"
"        <Description Translatable=\"1\">Dynamic Fields "
"Extension.</Description>\n"
"        <Group>DynamicFieldFooExtension</Group>\n"
"        <SubGroup>DynamicFields::Extension::Registration</SubGroup>\n"
"        <Setting>\n"
"            <Hash>\n"
"                <Item "
"Key=\"Module\">Kernel::System::DynamicField::Driver::FooExtensionText</Item>\n"
"                <Item Key=\"Behaviors\">\n"
"                    <Hash>\n"
"                        <Item Key=\"Foo\">1</Item>\n"
"                    </Hash>\n"
"                </Item>\n"
"            </Hash>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:68
msgid ""
"This is the registration for an extension in the <literal>Text</literal> "
"Dynamic Field Driver. The module will be loaded as a base class in the "
"Driver. Notice also that new behaviors can be specified. These extended "
"behaviors will be added to the behaviors that the Driver has out of the box, "
"therefore a call to <code>HasBehavior()</code> to check for these new "
"behaviors will be totally transparent."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:75 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:72
#, no-wrap
msgid "</otrs_config>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-config.xml:80 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:77
msgid "Standard closure of a configuration file."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:5
msgid "Dynamic Field Driver Extension Example"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:7
msgid ""
"Driver extensions will be loaded transparently into the Driver itself as a "
"base class. All defined object and properties from the Driver will be "
"accessible in the extension."
msgstr ""

#. type: Content of: <section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:12
msgid ""
"All new functions implemented in the Driver extension should be defined in a "
"Backend extension, as every function is called from the Backend Object."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:19
msgid ""
"In this section the <literal>Foo</literal> extension for Text field driver "
"is shown and explained. The extension only implements the function "
"<code>Foo()</code>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:23
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/DynamicField/Driver/FooExtensionText.pm - Extension for "
"DynamicField Text Driver\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::DynamicField::Driver::FooExtensionText;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"=head1 NAME\n"
"\n"
"Kernel::System::DynamicField::Driver::FooExtensionText\n"
"\n"
"=head1 SYNOPSIS\n"
"\n"
"DynamicFields Text Driver Extension\n"
"\n"
"=head1 PUBLIC INTERFACE\n"
"\n"
"This module extends the public interface of "
"L<Kernel::System::DynamicField::Backend>.\n"
"Please look there for a detailed reference of the functions.\n"
"\n"
"=over 4\n"
"\n"
"=cut\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:61
#, no-wrap
msgid ""
"sub Foo {\n"
"    my ( $Self, %Param ) = @_;\n"
"    return 1;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-field-driver.xml:69
msgid ""
"The function <code>Foo()</code> has no special logic. It is only for testing "
"and it always returns 1."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:5
msgid "How To Extend The Dynamic Fields"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:7
msgid ""
"There are many ways to extend the Dynamic Fields. The following sections "
"will try to cover the most common scenarios."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:11
msgid "Create a New Dynamic Field Type (for ticket or article objects)"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:13
msgid "To create a new Dynamic Field Type is necessary to:"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:18 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:51
msgid "Create a Dynamic Field Driver"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:21 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:54
msgid "This is the main module of the new field."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:26 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:73
msgid "Create or use an existing Admin Dialog"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:29 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:76
msgid "To have a management interface and set its configuration options."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:34 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:89 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:115 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:182
msgid "Create a Configuration File"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:37
msgid ""
"To register the new field in the Backend (or new Admin Dialogs in the "
"framework if needed) and be able to create instances or it."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:44
msgid "Create a New Dynamic Field Type (for other objects)"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:46
msgid "To create a new Dynamic Field Type for other objects is necessary to:"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:59
msgid "Create an Object Type Delegate"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:62
msgid ""
"This is necessary, even if the \"other object\" does not require any "
"specific data handling in its functions (e.g. after a value is set). All "
"Object Type Delegates must implement the functions that the Backend "
"requires."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:67
msgid ""
"Take a look in the current Object Type Delegates to implement the same "
"functions, even if they just return a successful value for the \"other "
"object\"."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:81 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:107
msgid "Implement Dynamic Fields in the Frontend Modules"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:84 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:110
msgid "To be able to use the Dynamic Fields."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:92
msgid ""
"To register the new field in the Backend (or new Admin Dialogs in the "
"framework if needed) and be able to create instances or it. And make the "
"needed settings to show, hide or show the Dynamic Fields as Mandatory in the "
"new screens."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:100
msgid "Create a New package to use Dynamic Fields"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:102
msgid "To create a package to use existing dynamic fields is necessary to:"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:118
msgid ""
"To give the end user the possibility to show, hide or show the Dynamic "
"Fields as Mandatory in the new screens."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:125
msgid "Extend Backend and Drivers Functionalities"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:127
msgid ""
"It might be possible that the Backend object does not have a needed function "
"for custom developments, or could also be possible that it has the function "
"needed, but the return format does not match the needs of the custom "
"development, or that a new behavior is needed to execute the new or the old "
"functions."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:133
msgid ""
"The easiest way to do this, is to extend the current field files. For this "
"it is necessary to create a new Backend extension file that defines the new "
"functions and create also Drivers extensions that implement these new "
"functions for each field. These new drivers will only need to implement the "
"new functions since the original drivers takes care of the standard "
"functions. All these new files do not need a constructor as they will be "
"loaded as a base for the Backend object and the drivers."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:141
msgid ""
"The only restrictions are that the functions should be named different than "
"the ones on the Backend and Drivers, otherwise they will be overwritten with "
"current objects."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:145
msgid ""
"Put the new Backend extension into the <filename>DynamicField</filename> "
"directory (e.g.  "
"<filename>/$OTRS_HOME/Kernel/System/DynamicField/NewPackageBackend.pm</filename> "
"and its Drivers in "
"<filename>/$OTRS_HOME/Kernel/System/DynamicField/Driver/NewPackage*.pm</filename>)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:150
msgid ""
"New behaviors only need a small setting in the extensions configuration "
"file."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:153
msgid "To create new Backend functions is needed to:"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:158
msgid "Create a New Backend extension module"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:161
msgid "To define only the new functions."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:166
msgid "Create the Dynamic Fields Driver extensions"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:169
msgid "To implement only the new functions."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:174
msgid "Implement New Dynamic Fields functions in the Frontend Modules"
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:177
msgid "To be able to use the new Dynamic Fields functions."
msgstr ""

#. type: Content of: <section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:185
msgid "To register the new backend and drivers extensions and behaviors."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:191
msgid "Other Extensions"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend-options.xml:193
msgid "Other extensions could be a combination of the above examples."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend.xml:5
msgid "Creating a Dynamic Field Functionality Extension"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend.xml:7
msgid ""
"To illustrate this process a new Dynamic Field functionality extension for "
"the function <emphasis>Foo</emphasis> will be added to the Backend Object as "
"well as in the Text field driver."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend.xml:12
msgid ""
"To create this extension we will create 3 files: a Configuration File (XML)  "
"to register the modules, a Backend extension (Perl) to define the new "
"function, and a Text field Driver extension (Perl) that implements the new "
"function for Text fields."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend.xml:17 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field.xml:24
msgid "File Structure:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend.xml:19
#, no-wrap
msgid ""
"$HOME (e. g. /opt/otrs/)\n"
"|\n"
"...\n"
"|--/Kernel/\n"
"|   |--/Config/\n"
"|   |   |--/Files/\n"
"|   |   |   |DynamicFieldFooExtension.xml\n"
"...\n"
"|   |--/System/\n"
"|   |   |--/DynamicField/\n"
"|   |   |   FooExtensionBackend.pm\n"
"|   |   |   |--/Driver/\n"
"|   |   |   |   |FooExtensionText.pm\n"
"...\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-extend.xml:36
msgid "Dynamic Field Foo Extension files"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:5
msgid "Dynamic Fields Framework"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:7
msgid ""
"Before creating new Dynamic Fields is necessary to understand its framework "
"and how OTRS screens interact with them, as well as their underlying API."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:11
msgid ""
"The following picture shows the architecture of the Dynamic Fields "
"framework."
msgstr ""

#. type: Content of: <section><para><figure><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:15
msgid "Dynamic Fields Architecture"
msgstr ""

#. type: Content of: <section><para><figure><screenshot>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:17
msgid ""
"<graphic fileref=\"screenshots/dfframework.png\" scalefit=\"1\" "
"width=\"100%\" contentdepth=\"100%\"></graphic>"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:23
msgid "Dynamic Field Backend Modules"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:26
msgid "Dynamic Field (Backend)"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:28
msgid ""
"Normally called as <literal>BackendObject</literal> in the frontend modules "
"is the mediator between the frontend modules and each specific Dynamic Field "
"implementation or Driver. It defines a Generic middle API for all Dynamic "
"Field Drivers, and each Driver has the responsibility to implement the "
"middle API for the specific needs for the field."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:34
msgid ""
"The Dynamic Field Backend is the master controller of all the Drivers. Each "
"function in this module is responsible to check the required parameters and "
"call the same function in the specific Driver according to the Dynamic Field "
"Configuration parameter received."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:40
msgid ""
"This module is also responsible to call specific functions on each Object "
"Type Delegate (like Ticket or Article) e.g. to add a history entry or fire "
"an event."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:44
msgid ""
"This module is located in "
"<filename>$OTRS_HOME/Kernel/System/DynamicField/Backend.pm</filename>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:49
msgid "Dynamic Field Drivers"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:51
msgid ""
"A Dynamic Field Driver is the implementation of the Dynamic Field. Each "
"Driver must implement all the mandatory functions specified in the Backend "
"(there are some functions that depends on a behavior and it is not needed to "
"implement those if the Dynamic Field does not have that particular "
"behavior)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:57
msgid ""
"A Driver is responsible to know how to get its own value or values from a "
"web request, or from a profile (like a search profile). It also needs to "
"know the HTML code to render the field in edit or display screens, or how to "
"interact with the stats module, among other functions."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:63
msgid ""
"These modules are located in "
"<filename>$OTRS_HOME/Kernel/System/DynamicField/Driver/*.pm</filename>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:66
msgid ""
"It exists some base drivers like <filename>Base.pm</filename>, "
"<filename>BaseText.pm</filename>, <filename>BaseSelect.pm</filename> and "
"<filename>BaseDateTime.pm</filename>, that implements common functions for "
"certain drivers (e.g. Driver <filename>TextArea.pm</filename> uses "
"<filename>BaseText.pm</filename> that also uses <filename>Base.pm</filename> "
"then <literal>TextArea</literal> only needs to implement the functions that "
"are missing in <filename>Base.pm</filename> and "
"<filename>BateText.pm</filename> or the ones that are special cases)."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:73
msgid "The following is the Drivers inheritance tree:"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:77
msgid "Base.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:80
msgid "BaseText.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:82
msgid "Text.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:83
msgid "TextArea.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:87
msgid "BaseSelect.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:89
msgid "Dropdown.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:90
msgid "Multiselect.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:94
msgid "BaseDateTime.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:96
msgid "DateTime.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:97
msgid "Date.pm"
msgstr ""

#. type: Content of: <section><section><section><itemizedlist><listitem><itemizedlist><listitem><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:100
msgid "Checkbox.pm"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:107
msgid "Object Type Delegate"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:109
msgid ""
"An Object Type Delegate is responsible to perform specific functions on the "
"object linked to the dynamic field. These functions are triggered by the "
"Backend object as they are needed."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:114
msgid ""
"These modules are located in "
"<filename>$OTRS_HOME/Kernel/System/DynamicField/ObjectType/*.pm</filename>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:119
msgid "Dynamic Fields Admin Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:121
msgid ""
"To manage the Dynamic Fields (Add, Edit and List) a series of modules has "
"been already developed. There is one specific master module "
"(<filename>AdminDynamicField.pm</filename>) that shows the list of defined "
"Dynamic Fields, and from within other modules are called to create new "
"Dynamic Fields or modify an existing ones."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:127
msgid ""
"Normally a Dynamic Field Driver needs its own Admin Module (Admin Dialog) to "
"define its properties. This dialog might differ from other Drivers. But this "
"is not mandatory, Drivers can share Admin Dialogs, if they can provide "
"needed information for all the Drivers that are linked to them, no matter if "
"they are from different type. What is mandatory is that each Driver must be "
"linked to an Admin Dialog (e.g. Text and TextArea Drivers share "
"<filename>AdminDynamicFieldText.pm</filename> Admin Dialog, and Date and "
"Date/Time Drivers share <filename>AdminDynamicFieldDateTime.pm</filename> "
"Admin Dialog)."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:136
msgid ""
"Admin Dialogs follow the normal OTRS Admin Module rules and "
"architecture. But for standardization all configuration common parts to all "
"Dynamic Fields should have the same look and feel among all Admin Dialogs."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:141
msgid ""
"These modules are located in "
"<filename>$OTRS_HOME/Kernel/Modules/*.pm</filename>."
msgstr ""

#. type: Content of: <section><section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:145
msgid ""
"Each Admin Dialog needs its corresponding HTML template file "
"(<filename>.tt</filename>)."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:150
msgid "Dynamic Fields Core Modules"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:152
msgid ""
"This modules reads and writes the Dynamic Fields information from and to the "
"database tables."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:156
msgid "<filename>DynamicField.pm</filename> Core Module"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:158
msgid ""
"This module is responsible to manage the Dynamic Field definitions. It "
"provides the basic API for add, change, delete, list and get Dynamic "
"Fields. This module is located in "
"<filename>$OTRS_HOME/Kernel/System/DynamicField.pm</filename>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:164
msgid "<filename>DynamicFieldValue.pm</filename> Core Module"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:166
msgid ""
"This module is responsible to read and write Dynamic Field values into the "
"form and into the database. This module is highly used by the Drivers and is "
"located in "
"<filename>$OTRS_HOME/Kernel/System/DynamicFieldValue.pm</filename>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:173
msgid "Dynamic Fields Database Tables"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:175
msgid "There are two tables in the database to store the dynamic field information:"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:178
msgid ""
"<emphasis>dynamic_field</emphasis>: Used by the Core Module "
"<filename>DynamicField.pm</filename>, it stores the Dynamic Field "
"definitions."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:182
msgid ""
"<emphasis>dynamic_field_value</emphasis>: Used by the Core Module "
"<filename>DynamicFieldValue.pm</filename> to save the Dynamic Field values "
"for each Dynamic Field and each Object Type instance."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:187
msgid "Dynamic Fields Configuration Files"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:189
msgid ""
"The Backend module needs a way to know which Drivers exists and since the "
"amount of Drivers can be easily extended. The easiest way to manage them is "
"to use the system configuration, where the information of Dynamic Field "
"Drivers and Object Type Drivers can be stored and extended."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:195
msgid ""
"The master Admin Module also needs to know this information about the "
"available Dynamic Field Drivers to use the Admin Dialog linked with, to "
"create or modify the Dynamic Fields."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-framework.xml:200
msgid ""
"Frontend modules need to read the system configuration to know which Dynamic "
"Fields are active for each screen and which ones are also mandatory. For "
"example: "
"<literal>Ticket::Frontend::AgentTicketPhone###DynamicField</literal> stores "
"the active, mandatory and inactive Dynamic Fields for New Phone Ticket "
"Screen."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:5
msgid "Dynamic Field Interaction With Frontend Modules"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:7
msgid ""
"Knowing about how Frontend modules interact with Dynamic fields is not "
"strictly necessary to extend Dynamic Fields for the Ticket or Article "
"objects, since all the screens that could use the Dynamic Fields are already "
"prepared. But in case of custom developments or to extend the Dynamic Fields "
"to other objects is very useful to know how to access Dynamic Fields "
"framework from a Frontend Module."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:14
msgid ""
"The following picture shows a simple example of how the Dynamic Fields "
"interact with other OTRS framework parts."
msgstr ""

#. type: Content of: <section><para><figure><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:19
msgid "Dynamic Field Interaction"
msgstr ""

#. type: Content of: <section><para><figure><screenshot>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:21
msgid ""
"<graphic fileref=\"screenshots/dfInteraction.png\" scalefit=\"1\" "
"width=\"100%\" contentdepth=\"100%\"></graphic>"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:26
msgid ""
"The first step is that the Frontend module reads the configured Dynamic "
"Fields. For example <literal>AgentTicketNote</literal> should read "
"<literal>Ticket::Frontend::AgentTicketNote###DynamicField</literal> "
"setting. This setting can be used as the filter parameter for DynamicField "
"Core Module function <code>DynamicFieldListGet()</code>. The screen can "
"store the results of this function to have the list of the Dynamic Fields "
"activated for this particular screen."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:34
msgid ""
"Next, the screen should try to get the values from the web request. It can "
"use the Backend Object function <code>EditFieldValueGet()</code> for this "
"purpose, and can use this values to trigger ACLs. The Backend Object will "
"use each Driver to perform the specific actions for all functions."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:40
msgid ""
"To continue, the screen should get the HTML for each field to display "
"it. The Backend Object function <code>EditFieldRender()</code> can be used "
"to perform this action and the ACLs restriction as well as the Values from "
"the web request can be passed to this function in order to get better "
"results. In case of a submit the screen could also use the BackendObject "
"function <code>EditFieldValueValidate()</code> to check the mandatory "
"fields."
msgstr ""

#. type: Content of: <section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:49
msgid ""
"Other screens could use <code>DisplayFieldRender()</code> instead of "
"<code>EditFieldRender()</code> if the screen only shows the field value, and "
"in such case no value validation is needed."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:55
msgid ""
"To store the value of the Dynamic Field is necessary to get the Object "
"ID. For this example if the Dynamic Field is linked to a ticket object, the "
"screen should already have the TicketID, otherwise if the field is linked to "
"an article object in order to set the value of the field is necessary to "
"create the article first. <code>ValueSet()</code> from the Backend Object "
"can be used to set the Dynamic Field value."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-interaction.xml:62
msgid ""
"In summary the Frontend modules does not need to know how each Dynamic Field "
"works internally to get or set their values or to display them. It just "
"needs to call the Backend Object module and use the fields in a generic way."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:5
msgid "Dynamic Field Template for Admin Dialog Example"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:7
msgid "The template is the place where the HTML code of the dialog is stored."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:12
msgid ""
"In this section an Admin Dialog template for the password Dynamic Field is "
"shown and explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:16
#, no-wrap
msgid ""
"# --\n"
"# AdminDynamicFieldPassword.tt - provides HTML form for "
"AdminDynamicFieldPassword\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:28
msgid "This is common header that can be found in common OTRS modules."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:31
#, no-wrap
msgid ""
"<div class=\"MainBox ARIARoleMain LayoutFixedSidebar SidebarFirst\">\n"
"    <h1>[% Translate(\"Dynamic Fields\") | html %] - [% "
"Translate(Data.ObjectTypeName) | html %]: [% Translate(Data.Mode) | html %] "
"[% Translate(Data.FieldTypeName) | html %] [% Translate(\"Field\") | html "
"%]</h1>\n"
"\n"
"    <div class=\"Clear\"></div>\n"
"\n"
"    <div class=\"SidebarColumn\">\n"
"        <div class=\"WidgetSimple\">\n"
"            <div class=\"Header\">\n"
"                <h2>[% Translate(\"Actions\") | html %]</h2>\n"
"            </div>\n"
"            <div class=\"Content\">\n"
"                <ul class=\"ActionList\">\n"
"                    <li>\n"
"                        <a href=\"[% Env(\"Baselink\") "
"%]Action=AdminDynamicField\" class=\"CallForAction\"><span>[% Translate(\"Go "
"back to overview\") | html %]</span></a>\n"
"                    </li>\n"
"                </ul>\n"
"            </div>\n"
"        </div>\n"
"    </div>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:54
msgid ""
"This part of the code has the main box and also the actions side bar. No "
"modifications are needed in this section."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:58
#, no-wrap
msgid ""
"    <div class=\"ContentColumn\">\n"
"        <form action=\"[% Env(\"CGIHandle\") %]\" method=\"post\" "
"class=\"Validate PreventMultipleSubmits\">\n"
"            <input type=\"hidden\" name=\"Action\" "
"value=\"AdminDynamicFieldPassword\" />\n"
"            <input type=\"hidden\" name=\"Subaction\" value=\"[% Data.Mode | "
"html %]Action\" />\n"
"            <input type=\"hidden\" name=\"ObjectType\" value=\"[% "
"Data.ObjectType | html %]\" />\n"
"            <input type=\"hidden\" name=\"FieldType\" value=\"[% "
"Data.FieldType | html %]\" />\n"
"            <input type=\"hidden\" name=\"ID\" value=\"[% Data.ID | html "
"%]\" />\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:69
msgid ""
"In this section of the code is defined the right part of the dialog. Notice "
"that the value of the <literal>Action</literal> hidden input must match with "
"the name of the Admin Dialog."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:73
#, no-wrap
msgid ""
"            <div class=\"WidgetSimple\">\n"
"                <div class=\"Header\">\n"
"                    <h2>[% Translate(\"General\") | html %]</h2>\n"
"                </div>\n"
"                <div class=\"Content\">\n"
"                    <div class=\"LayoutGrid ColumnsWithSpacing\">\n"
"                        <div class=\"Size1of2\">\n"
"                            <fieldset class=\"TableLike\">\n"
"                                <label class=\"Mandatory\" "
"for=\"Name\"><span class=\"Marker\">*</span> [% Translate(\"Name\") | html "
"%]:</label>\n"
"                                <div class=\"Field\">\n"
"                                    <input id=\"Name\" class=\"W50pc [% "
"Data.NameServerError | html %] [% Data.ShowWarning | html %]  "
"Validate_Alphanumeric\" type=\"text\" maxlength=\"200\" value=\"[% Data.Name "
"| html %]\" name=\"Name\"/>\n"
"                                    <div id=\"NameError\" "
"class=\"TooltipErrorMessage\"><p>[% Translate(\"This field is required, and "
"the value should be alphabetic and numeric characters only.\") | html "
"%]</p></div>\n"
"                                    <div id=\"NameServerError\" "
"class=\"TooltipErrorMessage\"><p>[% Translate(Data.NameServerErrorMessage) | "
"html %]</p></div>\n"
"                                    <p class=\"FieldExplanation\">[% "
"Translate(\"Must be unique and only accept alphabetic and numeric "
"characters.\") | html %]</p>\n"
"                                    <p class=\"Warning Hidden\">[% "
"Translate(\"Changing this value will require manual changes in the "
"system.\") | html %]</p>\n"
"                                </div>\n"
"                                <div class=\"Clear\"></div>\n"
"\n"
"                                <label class=\"Mandatory\" "
"for=\"Label\"><span class=\"Marker\">*</span> [% Translate(\"Label\") | html "
"%]:</label>\n"
"                                <div class=\"Field\">\n"
"                                    <input id=\"Label\" class=\"W50pc [% "
"Data.LabelServerError | html %] Validate_Required\" type=\"text\" "
"maxlength=\"200\" value=\"[% Data.Label | html %]\" name=\"Label\"/>\n"
"                                    <div id=\"LabelError\" "
"class=\"TooltipErrorMessage\"><p>[% Translate(\"This field is required.\") | "
"html %]</p></div>\n"
"                                    <div id=\"LabelServerError\" "
"class=\"TooltipErrorMessage\"><p>[% Translate(Data.LabelServerErrorMessage) "
"| html %]</p></div>\n"
"                                    <p class=\"FieldExplanation\">[% "
"Translate(\"This is the name to be shown on the screens where the field is "
"active.\") | html %]</p>\n"
"                                </div>\n"
"                                <div class=\"Clear\"></div>\n"
"\n"
"                                <label class=\"Mandatory\" "
"for=\"FieldOrder\"><span class=\"Marker\">*</span> [% Translate(\"Field "
"order\") | html %]:</label>\n"
"                                <div class=\"Field\">\n"
"                                    [% Data.DynamicFieldOrderSrtg %]\n"
"                                    <div id=\"FieldOrderError\" "
"class=\"TooltipErrorMessage\"><p>[% Translate(\"This field is required and "
"must be numeric.\") | html %]</p></div>\n"
"                                    <div id=\"FieldOrderServerError\" "
"class=\"TooltipErrorMessage\"><p>[% "
"Translate(Data.FieldOrderServerErrorMessage) | html %]</p></div>\n"
"                                    <p class=\"FieldExplanation\">[% "
"Translate(\"This is the order in which this field will be shown on the "
"screens where is active.\") | html %]</p>\n"
"                                </div>\n"
"                                <div class=\"Clear\"></div>\n"
"                            </fieldset>\n"
"                        </div>\n"
"                        <div class=\"Size1of2\">\n"
"                            <fieldset class=\"TableLike\">\n"
"                                <label for=\"ValidID\">[% "
"Translate(\"Validity\") | html %]:</label>\n"
"                                <div class=\"Field\">\n"
"                                    [% Data.ValidityStrg %]\n"
"                                </div>\n"
"                                <div class=\"Clear\"></div>\n"
"\n"
"                                <div class=\"SpacingTop\"></div>\n"
"                                <label for=\"FieldTypeName\">[% "
"Translate(\"Field type\") | html %]:</label>\n"
"                                <div class=\"Field\">\n"
"                                    <input id=\"FieldTypeName\" "
"readonly=\"readonly\" class=\"W50pc\" type=\"text\" maxlength=\"200\" "
"value=\"[% Data.FieldTypeName | html %]\" name=\"FieldTypeName\"/>\n"
"                                    <div class=\"Clear\"></div>\n"
"                                </div>\n"
"\n"
"                                <div class=\"SpacingTop\"></div>\n"
"                                <label for=\"ObjectTypeName\">[% "
"Translate(\"Object type\") | html %]:</label>\n"
"                                <div class=\"Field\">\n"
"                                    <input id=\"ObjectTypeName\" "
"readonly=\"readonly\" class=\"W50pc\" type=\"text\" maxlength=\"200\" "
"value=\"[% Data.ObjectTypeName | html %]\" name=\"ObjectTypeName\"/>\n"
"                                    <div class=\"Clear\"></div>\n"
"                                </div>\n"
"                            </fieldset>\n"
"                        </div>\n"
"                    </div>\n"
"                </div>\n"
"            </div>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:140
msgid ""
"This first widget contains the common form attributes for the Dynamic "
"Fields. For consistency with other Dynamic Fields is recommended to leave "
"this part of the code unchanged."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:145
#, no-wrap
msgid ""
"            <div class=\"WidgetSimple\">\n"
"                <div class=\"Header\">\n"
"                    <h2>[% Translate(Data.FieldTypeName) | html %] [% "
"Translate(\"Field Settings\") | html %]</h2>\n"
"                </div>\n"
"                <div class=\"Content\">\n"
"                    <fieldset class=\"TableLike\">\n"
"\n"
"                        <label for=\"DefaultValue\">[% Translate(\"Default "
"value\") | html %]:</label>\n"
"                        <div class=\"Field\">\n"
"                            <input id=\"DefaultValue\" class=\"W50pc\" "
"type=\"text\" maxlength=\"200\" value=\"[% Data.DefaultValue | html %]\" "
"name=\"DefaultValue\"/>\n"
"                            <p class=\"FieldExplanation\">[% "
"Translate(\"This is the default value for this field.\") | html %]</p>\n"
"                        </div>\n"
"                        <div class=\"Clear\"></div>\n"
"\n"
"                        <label for=\"ShowValue\">[% Translate(\"Show "
"value\") | html %]:</label>\n"
"                        <div class=\"Field\">\n"
"                            [% Data.ShowValueStrg %]\n"
"                            <p class=\"FieldExplanation\">\n"
"                                [% Translate(\"To reveal the field value in "
"non edit screens ( e.g. Ticket Zoom Screen )\") | html %]\n"
"                            </p>\n"
"                        </div>\n"
"                        <div class=\"Clear\"></div>\n"
"\n"
"                        <label for=\"ValueMask\">[% Translate(\"Hidden value "
"mask\") | html %]:</label>\n"
"                        <div class=\"Field\">\n"
"                            <input id=\"ValueMask\" class=\"W50pc\" "
"type=\"text\" maxlength=\"200\" value=\"[% Data.ValueMask | html %]\" "
"name=\"ValueMask\"/>\n"
"                            <p class=\"FieldExplanation\">\n"
"                                [% Translate(\"This is the alternate value "
"to show if Show value is set to \\\"No\\\" ( Default: **** ).\") | html %]\n"
"                            </p>\n"
"                        </div>\n"
"                        <div class=\"Clear\"></div>\n"
"\n"
"                    </fieldset>\n"
"                </div>\n"
"            </div>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:184
msgid ""
"The second widget has the Dynamic Field specific form attributes. This is "
"the place where new attributes can be set and it could use JavaScript and "
"AJAX technologies to make it more easy or friendly for the end user."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:189
#, no-wrap
msgid ""
"            <fieldset class=\"TableLike\">\n"
"                <div class=\"Field SpacingTop\">\n"
"                    <button type=\"submit\" class=\"Primary\" value=\"[% "
"Translate(\"Save\") | html %]\">[% Translate(\"Save\") | html %]</button>\n"
"                    [% Translate(\"or\") | html %]\n"
"                    <a href=\"[% Env(\"Baselink\") "
"%]Action=AdminDynamicField\">[% Translate(\"Cancel\") | html %]</a>\n"
"                </div>\n"
"                <div class=\"Clear\"></div>\n"
"            </fieldset>\n"
"        </form>\n"
"    </div>\n"
"</div>\n"
"[% WRAPPER JSOnDocumentComplete %]\n"
"<script type=\"text/javascript\">//<![CDATA[\n"
"$('.ShowWarning').bind('change keyup', function (Event) {\n"
"    $('p.Warning').removeClass('Hidden');\n"
"});\n"
"\n"
"Core.Agent.Admin.DynamicField.ValidationInit();\n"
"//"
msgstr ""

#. type: Content of: <section><section><para><programlisting>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:208
#, no-wrap
msgid "]]&gt;"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:208
#, no-wrap
msgid ""
"</script>\n"
"[% END %]\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module-template.xml:213
msgid ""
"The final part of the file contains the \"Submit\" button and the \"Cancel\" "
"link, as well as other needed JavaScript code."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:5
msgid "Dynamic Field Admin Dialog Example"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:7
msgid ""
"The Admin Dialogs are standard Admin modules to manage (add or edit) the "
"Dynamic Fields."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:12
msgid ""
"In this section an Admin Dialog for password dynamic field is shown and "
"explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:16
#, no-wrap
msgid ""
"# --\n"
"# Kernel/Modules/AdminDynamicFieldPassword.pm - provides a dynamic fields "
"password config view for admins\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::Modules::AdminDynamicFieldPassword;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::VariableCheck qw(:all);\n"
"use Kernel::System::Valid;\n"
"use Kernel::System::CheckItem;\n"
"use Kernel::System::DynamicField;\n"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:42
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    my $Self = {%Param};\n"
"    bless( $Self, $Type );\n"
"\n"
"    for (qw(ParamObject LayoutObject LogObject ConfigObject)) {\n"
"        if ( !$Self->{$_} ) {\n"
"            $Self->{LayoutObject}->FatalError( Message => \"Got no $_!\" "
");\n"
"        }\n"
"    }\n"
"\n"
"    # create additional objects\n"
"    $Self->{ValidObject} = Kernel::System::Valid->new( %{$Self} );\n"
"\n"
"    $Self->{DynamicFieldObject} = Kernel::System::DynamicField->new( "
"%{$Self} );\n"
"\n"
"    # get configured object types\n"
"    $Self->{ObjectTypeConfig} = "
"$Self->{ConfigObject}->Get('DynamicFields::ObjectType');\n"
"\n"
"    # get the fields config\n"
"    $Self->{FieldTypeConfig} = "
"$Self->{ConfigObject}->Get('DynamicFields::Backend') || {};\n"
"\n"
"    $Self->{DefaultValueMask} = '****';\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:72 en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:122
msgid ""
"The constructor <literal>new</literal> creates a new instance of the "
"class. According to the coding guidelines objects of other classes that are "
"needed in this module have to be created in <literal>new</literal>."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:76
#, no-wrap
msgid ""
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    if ( $Self->{Subaction} eq 'Add' ) {\n"
"        return $Self->_Add(\n"
"            %Param,\n"
"        );\n"
"    }\n"
"    elsif ( $Self->{Subaction} eq 'AddAction' ) {\n"
"\n"
"        # challenge token check for write action\n"
"        $Self->{LayoutObject}->ChallengeTokenCheck();\n"
"\n"
"        return $Self->_AddAction(\n"
"            %Param,\n"
"        );\n"
"    }\n"
"    if ( $Self->{Subaction} eq 'Change' ) {\n"
"\n"
"        return $Self->_Change(\n"
"            %Param,\n"
"        );\n"
"    }\n"
"    elsif ( $Self->{Subaction} eq 'ChangeAction' ) {\n"
"\n"
"        # challenge token check for write action\n"
"        $Self->{LayoutObject}->ChallengeTokenCheck();\n"
"\n"
"        return $Self->_ChangeAction(\n"
"            %Param,\n"
"        );\n"
"    }\n"
"\n"
"    return $Self->{LayoutObject}->ErrorScreen(\n"
"        Message => \"Undefined subaction.\",\n"
"    );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:117
msgid ""
"<literal>Run</literal> is the default function to be called by the web "
"request. We try to make this function as simple as possible and let the "
"helper functions to do the \"hard\" work."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:122
#, no-wrap
msgid ""
"sub _Add {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my %GetParam;\n"
"    for my $Needed (qw(ObjectType FieldType FieldOrder)) {\n"
"        $GetParam{$Needed} = $Self->{ParamObject}->GetParam( Param => "
"$Needed );\n"
"        if ( !$Needed ) {\n"
"\n"
"            return $Self->{LayoutObject}->ErrorScreen(\n"
"                Message => \"Need $Needed\",\n"
"            );\n"
"        }\n"
"    }\n"
"\n"
"    # get the object type and field type display name\n"
"    my $ObjectTypeName = $Self->{ObjectTypeConfig}->{ $GetParam{ObjectType} "
"}->{DisplayName} || '';\n"
"    my $FieldTypeName  = $Self->{FieldTypeConfig}->{ $GetParam{FieldType} "
"}->{DisplayName}   || '';\n"
"\n"
"    return $Self->_ShowScreen(\n"
"        %Param,\n"
"        %GetParam,\n"
"        Mode           => 'Add',\n"
"        ObjectTypeName => $ObjectTypeName,\n"
"        FieldTypeName  => $FieldTypeName,\n"
"    );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:152
msgid ""
"<code>_Add</code> function is also pretty simple, it just get some "
"parameters from the web request and call the <code>_ShowScreen()</code> "
"function. Normally this function is not needed to be modified."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:157
#, no-wrap
msgid ""
"sub _AddAction {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my %Errors;\n"
"    my %GetParam;\n"
"\n"
"    for my $Needed (qw(Name Label FieldOrder)) {\n"
"        $GetParam{$Needed} = $Self->{ParamObject}->GetParam( Param => "
"$Needed );\n"
"        if ( !$GetParam{$Needed} ) {\n"
"            $Errors{ $Needed . 'ServerError' }        = 'ServerError';\n"
"            $Errors{ $Needed . 'ServerErrorMessage' } = 'This field is "
"required.';\n"
"        }\n"
"    }\n"
"\n"
"    if ( $GetParam{Name} ) {\n"
"\n"
"        # check if name is alphanumeric\n"
"        if ( $GetParam{Name} !~ m{\\A ( ?: [a-zA-Z] | \\d )+ \\z}xms ) {\n"
"\n"
"            # add server error error class\n"
"            $Errors{NameServerError} = 'ServerError';\n"
"            $Errors{NameServerErrorMessage} =\n"
"                'The field does not contain only ASCII letters and "
"numbers.';\n"
"        }\n"
"\n"
"        # check if name is duplicated\n"
"        my %DynamicFieldsList = %{\n"
"            $Self->{DynamicFieldObject}->DynamicFieldList(\n"
"                Valid      => 0,\n"
"                ResultType => 'HASH',\n"
"                )\n"
"        };\n"
"\n"
"        %DynamicFieldsList = reverse %DynamicFieldsList;\n"
"\n"
"        if ( $DynamicFieldsList{ $GetParam{Name} } ) {\n"
"\n"
"            # add server error error class\n"
"            $Errors{NameServerError}        = 'ServerError';\n"
"            $Errors{NameServerErrorMessage} = 'There is another field with "
"the same name.';\n"
"        }\n"
"    }\n"
"\n"
"    if ( $GetParam{FieldOrder} ) {\n"
"\n"
"        # check if field order is numeric and positive\n"
"        if ( $GetParam{FieldOrder} !~ m{\\A ( ?: \\d )+ \\z}xms ) {\n"
"\n"
"            # add server error error class\n"
"            $Errors{FieldOrderServerError}        = 'ServerError';\n"
"            $Errors{FieldOrderServerErrorMessage} = 'The field must be "
"numeric.';\n"
"        }\n"
"    }\n"
"\n"
"    for my $ConfigParam (\n"
"        qw(\n"
"        ObjectType ObjectTypeName FieldType FieldTypeName DefaultValue "
"ValidID ShowValue\n"
"        ValueMask\n"
"        )\n"
"        )\n"
"    {\n"
"        $GetParam{$ConfigParam} = $Self->{ParamObject}->GetParam( Param => "
"$ConfigParam );\n"
"    }\n"
"\n"
"    # uncorrectable errors\n"
"    if ( !$GetParam{ValidID} ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Need ValidID\",\n"
"        );\n"
"    }\n"
"\n"
"    # return to add screen if errors\n"
"    if (%Errors) {\n"
"\n"
"        return $Self->_ShowScreen(\n"
"            %Param,\n"
"            %Errors,\n"
"            %GetParam,\n"
"            Mode => 'Add',\n"
"        );\n"
"    }\n"
"\n"
"    # set specific config\n"
"    my $FieldConfig = {\n"
"        DefaultValue => $GetParam{DefaultValue},\n"
"        ShowValue    => $GetParam{ShowValue},\n"
"        ValueMask    => $GetParam{ValueMask} || $Self->{DefaultValueMask},\n"
"    };\n"
"\n"
"    # create a new field\n"
"    my $FieldID = $Self->{DynamicFieldObject}->DynamicFieldAdd(\n"
"        Name       => $GetParam{Name},\n"
"        Label      => $GetParam{Label},\n"
"        FieldOrder => $GetParam{FieldOrder},\n"
"        FieldType  => $GetParam{FieldType},\n"
"        ObjectType => $GetParam{ObjectType},\n"
"        Config     => $FieldConfig,\n"
"        ValidID    => $GetParam{ValidID},\n"
"        UserID     => $Self->{UserID},\n"
"    );\n"
"\n"
"    if ( !$FieldID ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Could not create the new field\",\n"
"        );\n"
"    }\n"
"\n"
"    return $Self->{LayoutObject}->Redirect(\n"
"        OP => \"Action=AdminDynamicField\",\n"
"    );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:274
msgid ""
"The <code>_AddAction</code> function gets the configuration parameters from "
"a new dynamic field, and it validates that the Dynamic Field name only "
"contains letters and numbers. This function could validate any other "
"parameter."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:279
msgid ""
"<literal>Name</literal>, <literal>Label</literal>, "
"<literal>FieldOrder</literal>, <literal>Validity</literal> are common "
"parameters for all Dynamic Fields and they are required. Each Dynamic Field "
"has its specific configuration that must contain at least the "
"<literal>DefaultValue</literal> parameter. In this case it also have "
"<literal>ShowValue</literal> and <literal>ValueMask</literal> parameters for "
"Password field."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:285
msgid ""
"If the field has the ability to store a fixed list of values they should be "
"stored in the <literal>PossibleValues</literal> parameter inside the "
"specific configuration hash."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:289
msgid ""
"As in other Admin Modules, if a parameter is not valid this function returns "
"to the Add screen highlighting the erroneous form fields."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:293
msgid "If all the parameters are correct it creates a new Dynamic Field."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:296
#, no-wrap
msgid ""
"sub _Change {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my %GetParam;\n"
"    for my $Needed (qw(ObjectType FieldType)) {\n"
"        $GetParam{$Needed} = $Self->{ParamObject}->GetParam( Param => "
"$Needed );\n"
"        if ( !$Needed ) {\n"
"\n"
"            return $Self->{LayoutObject}->ErrorScreen(\n"
"                Message => \"Need $Needed\",\n"
"            );\n"
"        }\n"
"    }\n"
"\n"
"    # get the object type and field type display name\n"
"    my $ObjectTypeName = $Self->{ObjectTypeConfig}->{ $GetParam{ObjectType} "
"}->{DisplayName} || '';\n"
"    my $FieldTypeName  = $Self->{FieldTypeConfig}->{ $GetParam{FieldType} "
"}->{DisplayName}   || '';\n"
"\n"
"    my $FieldID = $Self->{ParamObject}->GetParam( Param => 'ID' );\n"
"\n"
"    if ( !$FieldID ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Need ID\",\n"
"        );\n"
"    }\n"
"\n"
"    # get dynamic field data\n"
"    my $DynamicFieldData = $Self->{DynamicFieldObject}->DynamicFieldGet(\n"
"        ID => $FieldID,\n"
"    );\n"
"\n"
"    # check for valid dynamic field configuration\n"
"    if ( !IsHashRefWithData($DynamicFieldData) ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Could not get data for dynamic field $FieldID\",\n"
"        );\n"
"    }\n"
"\n"
"    my %Config = ();\n"
"\n"
"    # extract configuration\n"
"    if ( IsHashRefWithData( $DynamicFieldData->{Config} ) ) {\n"
"        %Config = %{ $DynamicFieldData->{Config} };\n"
"    }\n"
"\n"
"    return $Self->_ShowScreen(\n"
"        %Param,\n"
"        %GetParam,\n"
"        %${DynamicFieldData},\n"
"        %Config,\n"
"        ID             => $FieldID,\n"
"        Mode           => 'Change',\n"
"        ObjectTypeName => $ObjectTypeName,\n"
"        FieldTypeName  => $FieldTypeName,\n"
"    );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:358
msgid ""
"The <code>_Change</code> function is very similar to the <code>_Add</code> "
"function but since this function is used to edit an existing field it needs "
"to validated the <literal>FieldID</literal> parameter and gather the current "
"Dynamic Field data."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:363
#, no-wrap
msgid ""
"sub _ChangeAction {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my %Errors;\n"
"    my %GetParam;\n"
"\n"
"    for my $Needed (qw(Name Label FieldOrder)) {\n"
"        $GetParam{$Needed} = $Self->{ParamObject}->GetParam( Param => "
"$Needed );\n"
"        if ( !$GetParam{$Needed} ) {\n"
"            $Errors{ $Needed . 'ServerError' }        = 'ServerError';\n"
"            $Errors{ $Needed . 'ServerErrorMessage' } = 'This field is "
"required.';\n"
"        }\n"
"    }\n"
"\n"
"    my $FieldID = $Self->{ParamObject}->GetParam( Param => 'ID' );\n"
"    if ( !$FieldID ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Need ID\",\n"
"        );\n"
"    }\n"
"\n"
"    if ( $GetParam{Name} ) {\n"
"\n"
"        # check if name is lowercase\n"
"        if ( $GetParam{Name} !~ m{\\A ( ?: [a-zA-Z] | \\d )+ \\z}xms ) {\n"
"\n"
"            # add server error error class\n"
"            $Errors{NameServerError} = 'ServerError';\n"
"            $Errors{NameServerErrorMessage} =\n"
"                'The field does not contain only ASCII letters and "
"numbers.';\n"
"        }\n"
"\n"
"        # check if name is duplicated\n"
"        my %DynamicFieldsList = %{\n"
"            $Self->{DynamicFieldObject}->DynamicFieldList(\n"
"                Valid      => 0,\n"
"                ResultType => 'HASH',\n"
"                )\n"
"        };\n"
"\n"
"        %DynamicFieldsList = reverse %DynamicFieldsList;\n"
"\n"
"        if (\n"
"            $DynamicFieldsList{ $GetParam{Name} } &&\n"
"            $DynamicFieldsList{ $GetParam{Name} } ne $FieldID\n"
"            )\n"
"        {\n"
"\n"
"            # add server error class\n"
"            $Errors{NameServerError}        = 'ServerError';\n"
"            $Errors{NameServerErrorMessage} = 'There is another field with "
"the same name.';\n"
"        }\n"
"    }\n"
"\n"
"    if ( $GetParam{FieldOrder} ) {\n"
"\n"
"        # check if field order is numeric and positive\n"
"        if ( $GetParam{FieldOrder} !~ m{\\A ( ?: \\d )+ \\z}xms ) {\n"
"\n"
"            # add server error error class\n"
"            $Errors{FieldOrderServerError}        = 'ServerError';\n"
"            $Errors{FieldOrderServerErrorMessage} = 'The field must be "
"numeric.';\n"
"        }\n"
"    }\n"
"\n"
"    for my $ConfigParam (\n"
"        qw(\n"
"        ObjectType ObjectTypeName FieldType FieldTypeName DefaultValue "
"ValidID ShowValue\n"
"        ValueMask\n"
"        )\n"
"        )\n"
"    {\n"
"        $GetParam{$ConfigParam} = $Self->{ParamObject}->GetParam( Param => "
"$ConfigParam );\n"
"    }\n"
"\n"
"    # uncorrectable errors\n"
"    if ( !$GetParam{ValidID} ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Need ValidID\",\n"
"        );\n"
"    }\n"
"\n"
"    # get dynamic field data\n"
"    my $DynamicFieldData = $Self->{DynamicFieldObject}->DynamicFieldGet(\n"
"        ID => $FieldID,\n"
"    );\n"
"\n"
"    # check for valid dynamic field configuration\n"
"    if ( !IsHashRefWithData($DynamicFieldData) ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Could not get data for dynamic field $FieldID\",\n"
"        );\n"
"    }\n"
"\n"
"    # return to change screen if errors\n"
"    if (%Errors) {\n"
"\n"
"        return $Self->_ShowScreen(\n"
"            %Param,\n"
"            %Errors,\n"
"            %GetParam,\n"
"            ID   => $FieldID,\n"
"            Mode => 'Change',\n"
"        );\n"
"    }\n"
"\n"
"    # set specific config\n"
"    my $FieldConfig = {\n"
"        DefaultValue => $GetParam{DefaultValue},\n"
"        ShowValue    => $GetParam{ShowValue},\n"
"        ValueMask    => $GetParam{ValueMask},\n"
"    };\n"
"\n"
"    # update dynamic field (FieldType and ObjectType cannot be changed; use "
"old values)\n"
"    my $UpdateSuccess = $Self->{DynamicFieldObject}->DynamicFieldUpdate(\n"
"        ID         => $FieldID,\n"
"        Name       => $GetParam{Name},\n"
"        Label      => $GetParam{Label},\n"
"        FieldOrder => $GetParam{FieldOrder},\n"
"        FieldType  => $DynamicFieldData->{FieldType},\n"
"        ObjectType => $DynamicFieldData->{ObjectType},\n"
"        Config     => $FieldConfig,\n"
"        ValidID    => $GetParam{ValidID},\n"
"        UserID     => $Self->{UserID},\n"
"    );\n"
"\n"
"    if ( !$UpdateSuccess ) {\n"
"\n"
"        return $Self->{LayoutObject}->ErrorScreen(\n"
"            Message => \"Could not update the field $GetParam{Name}\",\n"
"        );\n"
"    }\n"
"\n"
"    return $Self->{LayoutObject}->Redirect(\n"
"        OP => \"Action=AdminDynamicField\",\n"
"    );\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:507
msgid ""
"<code>_ChangeAction()</code> is very similar to <code>_AddAction()</code>, "
"but adapted for the update of an existing field instead of creating a new "
"one."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:512
#, no-wrap
msgid ""
"sub _ShowScreen {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    $Param{DisplayFieldName} = 'New';\n"
"\n"
"    if ( $Param{Mode} eq 'Change' ) {\n"
"        $Param{ShowWarning}      = 'ShowWarning';\n"
"        $Param{DisplayFieldName} = $Param{Name};\n"
"    }\n"
"\n"
"    # header\n"
"    my $Output = $Self->{LayoutObject}->Header();\n"
"    $Output .= $Self->{LayoutObject}->NavigationBar();\n"
"\n"
"    # get all fields\n"
"    my $DynamicFieldList = "
"$Self->{DynamicFieldObject}->DynamicFieldListGet(\n"
"        Valid => 0,\n"
"    );\n"
"\n"
"    # get the list of order numbers (is already sorted).\n"
"    my @DynamicfieldOrderList;\n"
"    for my $Dynamicfield ( @{$DynamicFieldList} ) {\n"
"        push @DynamicfieldOrderList, $Dynamicfield->{FieldOrder};\n"
"    }\n"
"\n"
"    # when adding we need to create an extra order number for the new "
"field\n"
"    if ( $Param{Mode} eq 'Add' ) {\n"
"\n"
"        # get the last element from the order list and add 1\n"
"        my $LastOrderNumber = $DynamicfieldOrderList[-1];\n"
"        $LastOrderNumber++;\n"
"\n"
"        # add this new order number to the end of the list\n"
"        push @DynamicfieldOrderList, $LastOrderNumber;\n"
"    }\n"
"\n"
"    my $DynamicFieldOrderSrtg = $Self->{LayoutObject}->BuildSelection(\n"
"        Data          => \\@DynamicfieldOrderList,\n"
"        Name          => 'FieldOrder',\n"
"        SelectedValue => $Param{FieldOrder} || 1,\n"
"        PossibleNone  => 0,\n"
"        Class         => 'W50pc Validate_Number',\n"
"    );\n"
"\n"
"    my %ValidList = $Self->{ValidObject}->ValidList();\n"
"\n"
"    # create the Validity select\n"
"    my $ValidityStrg = $Self->{LayoutObject}->BuildSelection(\n"
"        Data         => \\%ValidList,\n"
"        Name         => 'ValidID',\n"
"        SelectedID   => $Param{ValidID} || 1,\n"
"        PossibleNone => 0,\n"
"        Translation  => 1,\n"
"        Class        => 'W50pc',\n"
"    );\n"
"\n"
"    # define config field specific settings\n"
"    my $DefaultValue = ( defined $Param{DefaultValue} ? $Param{DefaultValue} "
": '' );\n"
"\n"
"    # create the Show value select\n"
"    my $ShowValueStrg = $Self->{LayoutObject}->BuildSelection(\n"
"        Data => [ 'No', 'Yes' ],\n"
"        Name => 'ShowValue',\n"
"        SelectedValue => $Param{ShowValue} || 'No',\n"
"        PossibleNone  => 0,\n"
"        Translation   => 1,\n"
"        Class         => 'W50pc',\n"
"    );\n"
"\n"
"    # generate output\n"
"    $Output .= $Self->{LayoutObject}->Output(\n"
"        TemplateFile => 'AdminDynamicFieldPassword',\n"
"        Data         => {\n"
"            %Param,\n"
"            ValidityStrg          => $ValidityStrg,\n"
"            DynamicFieldOrderSrtg => $DynamicFieldOrderSrtg,\n"
"            DefaultValue          => $DefaultValue,\n"
"            ShowValueStrg         => $ShowValueStrg,\n"
"            ValueMask             => $Param{ValueMask} || "
"$Self->{DefaultValueMask},\n"
"        },\n"
"    );\n"
"\n"
"    $Output .= $Self->{LayoutObject}->Footer();\n"
"\n"
"    return $Output;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-admin-module.xml:604
msgid ""
"The <code>_ShowScreen</code> function is used to set and define the HTML "
"elements and blocks from a template to generate the Admin Dialog HTML code."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:5
msgid "Dynamic Field Configuration File Example"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:7
msgid ""
"The configuration files are used to register the Dynamic Field Types "
"(Driver) and the Object Type Drivers for the "
"<literal>BackendObject</literal>. They also store standard registrations for "
"Admin Modules in the framework."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:14
msgid ""
"In this section a configuration file for password Dynamic Field is shown and "
"explained."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:27
#, no-wrap
msgid ""
"    <ConfigItem Name=\"DynamicFields::Driver###Password\" Required=\"0\" "
"Valid=\"1\">\n"
"        <Description Translatable=\"1\">DynamicField backend "
"registration.</Description>\n"
"        <Group>DynamicFieldPassword</Group>\n"
"        <SubGroup>DynamicFields::Backend::Registration</SubGroup>\n"
"        <Setting>\n"
"            <Hash>\n"
"                <Item Key=\"DisplayName\" "
"Translatable=\"1\">Password</Item>\n"
"                <Item "
"Key=\"Module\">Kernel::System::DynamicField::Driver::Password</Item>\n"
"                <Item "
"Key=\"ConfigDialog\">AdminDynamicFieldPassword</Item>\n"
"            </Hash>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:43
msgid ""
"This setting registers the Password Dynamic Field Driver for the Backend "
"module so it can be included in the list of available Dynamic Fields "
"Types. It also specify its own Admin Dialog in the key "
"<literal>ConfigDialog</literal>. This key is used by the Master Dynamic "
"Field Admin Module to manage this new Dynamic Field Type."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:49
#, no-wrap
msgid ""
"    <ConfigItem Name=\"Frontend::Module###AdminDynamicFieldPassword\" "
"Required=\"0\" Valid=\"1\">\n"
"        <Description Translatable=\"1\">Frontend module registration for the "
"agent interface.</Description>\n"
"        <Group>DynamicFieldPassword</Group>\n"
"        <SubGroup>Frontend::Admin::ModuleRegistration</SubGroup>\n"
"        <Setting>\n"
"            <FrontendModuleReg>\n"
"                <Group>admin</Group>\n"
"                <Description>Admin</Description>\n"
"                <Title Translatable=\"1\">Dynamic Fields Text Backend "
"GUI</Title>\n"
"                <Loader>\n"
"                    "
"<JavaScript>Core.Agent.Admin.DynamicField.js</JavaScript>\n"
"                </Loader>\n"
"            </FrontendModuleReg>\n"
"        </Setting>\n"
"    </ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-config.xml:68
msgid ""
"This is a standard module registration for the Password Admin Dialog in the "
"Admin Interface."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:5
msgid "Dynamic Field Driver Example"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:7
msgid ""
"The driver <emphasis>is</emphasis> the Dynamic Field. It contains several "
"functions that are used wide in the OTRS framework. A driver can inherit "
"some functions form base classes, for example <literal>TextArea</literal> "
"driver inherits most of the functions from <filename>Base.pm</filename> and "
"<filename>BaseText.pm</filename> and it only implements the functions that "
"requires different logic or results. Checkbox field driver only inherits "
"from <filename>Base.pm</filename> as all other functions are very different "
"from any other Base driver."
msgstr ""

#. type: Content of: <section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:17
msgid ""
"Please refer to the Perl On-line Documentation (POD) of the module "
"<filename>/Kernel/System/DynmicField/Backend.pm</filename> to have the list "
"of all attributes and possible return data for each function."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:25
msgid ""
"In this section the Password Dynamic Field driver is shown and "
"explained. This driver inherits some functions from "
"<filename>Base.pm</filename> and <filename>BaseText.pm</filename> and only "
"implements the functions that needs different results."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:30
#, no-wrap
msgid ""
"# --\n"
"# Kernel/System/DynamicField/Driver/Password.pm - Driver for DynamicField "
"Password backend\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::DynamicField::Driver::Password;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::VariableCheck qw(:all);\n"
"use Kernel::System::DynamicFieldValue;\n"
"\n"
"use base qw(Kernel::System::DynamicField::Driver::BaseText);\n"
"\n"
"our @ObjectDependencies = (\n"
"    'Kernel::Config',\n"
"    'Kernel::System::DynamicFieldValue',\n"
"    'Kernel::System::Main',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:58
msgid ""
"This is the common header that can be found in common OTRS modules. The "
"class/package name is declared via the <literal>package</literal> "
"keyword. Notice that <literal>BaseText</literal> is used as base class."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:63
#, no-wrap
msgid ""
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # set field behaviors\n"
"    $Self->{Behaviors} = {\n"
"        'IsACLReducible'               => 0,\n"
"        'IsNotificationEventCondition' => 1,\n"
"        'IsSortable'                   => 0,\n"
"        'IsFiltrable'                  => 0,\n"
"        'IsStatsCondition'             => 1,\n"
"        'IsCustomerInterfaceCapable'   => 1,\n"
"    };\n"
"\n"
"    # get the Dynamic Field Backend custom extensions\n"
"    my $DynamicFieldDriverExtensions\n"
"        = "
"$Kernel::OM->Get('Kernel::Config')->Get('DynamicFields::Extension::Driver::Password');\n"
"\n"
"    EXTENSION:\n"
"    for my $ExtensionKey ( sort keys %{$DynamicFieldDriverExtensions} ) {\n"
"\n"
"        # skip invalid extensions\n"
"        next EXTENSION if !IsHashRefWithData( "
"$DynamicFieldDriverExtensions->{$ExtensionKey} );\n"
"\n"
"        # create a extension config shortcut\n"
"        my $Extension = $DynamicFieldDriverExtensions->{$ExtensionKey};\n"
"\n"
"        # check if extension has a new module\n"
"        if ( $Extension->{Module} ) {\n"
"\n"
"            # check if module can be loaded\n"
"            if (\n"
"                !$Kernel::OM->Get('Kernel::System::Main')->RequireBaseClass( "
"$Extension->{Module} )\n"
"                )\n"
"            {\n"
"                die \"Can't load dynamic fields backend module\"\n"
"                    . \" $Extension->{Module}! $@\";\n"
"            }\n"
"        }\n"
"\n"
"        # check if extension contains more behaviors\n"
"        if ( IsHashRefWithData( $Extension->{Behaviors} ) ) {\n"
"\n"
"            %{ $Self->{Behaviors} } = (\n"
"                %{ $Self->{Behaviors} },\n"
"                %{ $Extension->{Behaviors} }\n"
"            );\n"
"        }\n"
"    }\n"
"\n"
"    return $Self;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:127
msgid ""
"It is important to define the behaviors correctly as the field might or "
"might not be used in certain screens, functions that depends on behaviors "
"that are not active for this particular field might not be needed to be "
"implemented."
msgstr ""

#. type: Content of: <section><section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:133
msgid ""
"Drivers are created only by the <literal>BackendObject</literal> and not "
"directly from any other module."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:138
#, no-wrap
msgid ""
"sub EditFieldRender {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # take config from field config\n"
"    my $FieldConfig = $Param{DynamicFieldConfig}->{Config};\n"
"    my $FieldName   = 'DynamicField_' "
". $Param{DynamicFieldConfig}->{Name};\n"
"    my $FieldLabel  = $Param{DynamicFieldConfig}->{Label};\n"
"\n"
"    my $Value = '';\n"
"\n"
"    # set the field value or default\n"
"    if ( $Param{UseDefaultValue} ) {\n"
"        $Value = ( defined $FieldConfig->{DefaultValue} ? "
"$FieldConfig->{DefaultValue} : '' );\n"
"    }\n"
"    $Value = $Param{Value} if defined $Param{Value};\n"
"\n"
"    # extract the dynamic field value from the web request\n"
"    my $FieldValue = $Self->EditFieldValueGet(\n"
"        %Param,\n"
"    );\n"
"\n"
"    # set values from ParamObject if present\n"
"    if ( defined $FieldValue ) {\n"
"        $Value = $FieldValue;\n"
"    }\n"
"\n"
"    # check and set class if necessary\n"
"    my $FieldClass = 'DynamicFieldText W50pc';\n"
"    if ( defined $Param{Class} && $Param{Class} ne '' ) {\n"
"        $FieldClass .= ' ' . $Param{Class};\n"
"    }\n"
"\n"
"    # set field as mandatory\n"
"    $FieldClass .= ' Validate_Required' if $Param{Mandatory};\n"
"\n"
"    # set error css class\n"
"    $FieldClass .= ' ServerError' if $Param{ServerError};\n"
"\n"
"    my $HTMLString = <<\"EOF\";\n"
"<input type=\"password\" class=\"$FieldClass\" id=\"$FieldName\" "
"name=\"$FieldName\" title=\"$FieldLabel\" value=\"$Value\" />\n"
"EOF\n"
"\n"
"    if ( $Param{Mandatory} ) {\n"
"        my $DivID = $FieldName . 'Error';\n"
"\n"
"        # for client side validation\n"
"        $HTMLString .= <<\"EOF\";\n"
"    <div id=\"$DivID\" class=\"TooltipErrorMessage\">\n"
"        <p>\n"
"            \\$Text{\"This field is required.\"}\n"
"        </p>\n"
"    </div>\n"
"EOF\n"
"    }\n"
"\n"
"    if ( $Param{ServerError} ) {\n"
"\n"
"        my $ErrorMessage = $Param{ErrorMessage} || 'This field is "
"required.';\n"
"        my $DivID = $FieldName . 'ServerError';\n"
"\n"
"        # for server side validation\n"
"        $HTMLString .= <<\"EOF\";\n"
"    <div id=\"$DivID\" class=\"TooltipErrorMessage\">\n"
"        <p>\n"
"            \\$Text{\"$ErrorMessage\"}\n"
"        </p>\n"
"    </div>\n"
"EOF\n"
"    }\n"
"\n"
"    # call EditLabelRender on the common Driver\n"
"    my $LabelString = $Self->EditLabelRender(\n"
"        %Param,\n"
"        DynamicFieldConfig => $Param{DynamicFieldConfig},\n"
"        Mandatory          => $Param{Mandatory} || '0',\n"
"        FieldName          => $FieldName,\n"
"    );\n"
"\n"
"    my $Data = {\n"
"        Field => $HTMLString,\n"
"        Label => $LabelString,\n"
"    };\n"
"\n"
"    return $Data;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:227
msgid ""
"This function is the responsible to create the HTML representation of the "
"field and its label, and is used in the edit screens like "
"<literal>AgentTicketPhone</literal>, <literal>AgentTicketNote</literal>, "
"etc."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:231
#, no-wrap
msgid ""
"sub DisplayValueRender {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # set HTMLOutput as default if not specified\n"
"    if ( !defined $Param{HTMLOutput} ) {\n"
"        $Param{HTMLOutput} = 1;\n"
"    }\n"
"\n"
"    my $Value;\n"
"    my $Title;\n"
"\n"
"    # check if field is set to show password or not\n"
"    if (\n"
"        defined $Param{DynamicFieldConfig}->{Config}->{ShowValue}\n"
"        && $Param{DynamicFieldConfig}->{Config}->{ShowValue} eq 'Yes'\n"
"        )\n"
"    {\n"
"\n"
"        # get raw Title and Value strings from field value\n"
"        $Value = defined $Param{Value} ? $Param{Value} : '';\n"
"        $Title = $Value;\n"
"    }\n"
"    else {\n"
"\n"
"        # show the mask and not the value\n"
"        $Value = $Param{DynamicFieldConfig}->{Config}->{ValueMask} || '';\n"
"        $Title = 'The value of this field is hidden.'\n"
"    }\n"
"\n"
"    # HTMLOutput transformations\n"
"    if ( $Param{HTMLOutput} ) {\n"
"        $Value = $Param{LayoutObject}->Ascii2Html(\n"
"            Text => $Value,\n"
"            Max => $Param{ValueMaxChars} || '',\n"
"        );\n"
"\n"
"        $Title = $Param{LayoutObject}->Ascii2Html(\n"
"            Text => $Title,\n"
"            Max => $Param{TitleMaxChars} || '',\n"
"        );\n"
"    }\n"
"    else {\n"
"        if ( $Param{ValueMaxChars} && length($Value) > $Param{ValueMaxChars} "
") {\n"
"            $Value = substr( $Value, 0, $Param{ValueMaxChars} ) . '...';\n"
"        }\n"
"        if ( $Param{TitleMaxChars} && length($Title) > $Param{TitleMaxChars} "
") {\n"
"            $Title = substr( $Title, 0, $Param{TitleMaxChars} ) . '...';\n"
"        }\n"
"    }\n"
"\n"
"    # create return structure\n"
"    my $Data = {\n"
"        Value => $Value,\n"
"        Title => $Title,\n"
"    };\n"
"\n"
"    return $Data;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:293
msgid ""
"<code>DisplayValueRender()</code> function returns the field value as a "
"plain text as well as its title (both can be translated). For this "
"particular example we are checking if the password should be revealed or "
"display a predefined mask by a configuration parameter in the Dynamic Field."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:299
#, no-wrap
msgid ""
"sub ReadableValueRender {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    my $Value;\n"
"    my $Title;\n"
"\n"
"    # check if field is set to show password or not\n"
"    if (\n"
"        defined $Param{DynamicFieldConfig}->{Config}->{ShowValue}\n"
"        && $Param{DynamicFieldConfig}->{Config}->{ShowValue} eq 'Yes'\n"
"        )\n"
"    {\n"
"\n"
"        # get raw Title and Value strings from field value\n"
"        $Value = $Param{Value} // '';\n"
"        $Title = $Value;\n"
"    }\n"
"    else {\n"
"\n"
"        # show the mask and not the value\n"
"        $Value = $Param{DynamicFieldConfig}->{Config}->{ValueMask} || '';\n"
"        $Title = 'The value of this field is hidden.'\n"
"    }\n"
"\n"
"    # cut strings if needed\n"
"    if ( $Param{ValueMaxChars} && length($Value) > $Param{ValueMaxChars} ) "
"{\n"
"        $Value = substr( $Value, 0, $Param{ValueMaxChars} ) . '...';\n"
"    }\n"
"    if ( $Param{TitleMaxChars} && length($Title) > $Param{TitleMaxChars} ) "
"{\n"
"        $Title = substr( $Title, 0, $Param{TitleMaxChars} ) . '...';\n"
"    }\n"
"\n"
"    # create return structure\n"
"    my $Data = {\n"
"        Value => $Value,\n"
"        Title => $Title,\n"
"    };\n"
"\n"
"    return $Data;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:343
msgid ""
"This function is similar to <code>DisplayValueRender()</code> but is used in "
"places where there is no <literal>LayoutObject</literal>."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:349
msgid "Other Functions:"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:351
msgid ""
"The following are other functions that are might needed if the new Dynamic "
"Field does not inherit from other classes. To see the complete code of this "
"functions please take a look directly into the files "
"<filename>Kernel/System/DynamicField/Driver/Base.pm</filename> and "
"<filename>Kernel/System/DynamicField/Driver/BaseText.pm</filename>"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:357
#, no-wrap
msgid "sub ValueGet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:362
msgid ""
"This function retrieves the value from the field on a specified Object. In "
"this case we are returning the first text value, since the field only stores "
"one text value at time."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:366
#, no-wrap
msgid "sub ValueSet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:371
msgid ""
"<code>ValueSet()</code> is used to store a Dynamic Field value. In this case "
"this field only stores one text type value. Other fields could store more "
"than one value on either <literal>ValueText</literal>, "
"<literal>ValueDateTime</literal> or <literal>ValueInt</literal> format."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:376
#, no-wrap
msgid "sub ValueDelete { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:381
msgid ""
"This function is used to delete one field value attached to a particular "
"object ID.  For example if the instance of an object is to be deleted, then "
"there is no reason to have the field value stored in the database for that "
"particular object instance."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:386
#, no-wrap
msgid "sub AllValuesDelete { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:391
msgid ""
"<code>AllValuesDelete()</code> function is used to delete all values from a "
"certain Dynamic Field. This function is very useful when a Dynamic Field is "
"going to be deleted."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:396
#, no-wrap
msgid "sub ValueValidate { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:401
msgid ""
"The <code>ValueValidate()</code> function is used to check if the value is "
"consistent to its type."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:405
#, no-wrap
msgid "sub SearchSQLGet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:410
msgid ""
"This function is used by <literal>TicketSearch</literal> core module to "
"build the internal query to search for a ticket based on this field as a "
"search parameter."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:414
#, no-wrap
msgid "sub SearchSQLOrderFieldGet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:419
msgid ""
"The <literal>SearchSQLOrderFieldGet</literal> is also a helper for "
"<literal>TicketSearch</literal> "
"module. <literal>$Param{TableAlias}</literal> should be kept and "
"<literal>value_text</literal> could be replaced with "
"<literal>value_date</literal> or <literal>value_int</literal> depending on "
"the field."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:424
#, no-wrap
msgid "sub EditFieldValueGet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:429
msgid ""
"<code>EditFieldValueGet()</code> is a function used in the edit screens of "
"OTRS and its purpose is to get the value of the field, either from a "
"template like generic agent profile or from a web request. This function "
"gets the web request in the <literal>$Param{ParamObject}</literal>, that is "
"a copy of the <literal>ParamObject</literal> of the Frontend Module or "
"screen."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:435
msgid ""
"There are two return formats for this function, the normal: that is just the "
"raw value or a structure: that is the pair field name =&gt; field value. For "
"example a Date Dynamic Field returns normally the date as string, and if it "
"should return a structure it returns a pair for each part of the date in the "
"hash."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:441
msgid ""
"If the result should be a structure then, normally this is used to store its "
"values in a template, like a generic agent profile. For example a date field "
"uses several HTML components to build the field, like the \"Used\" check-box "
"and selects for year, month, day etc."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:447
#, no-wrap
msgid "sub EditFieldValueValidate { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:452
msgid ""
"This function should provide at least a method to validate if the field is "
"empty, and return an error if the field is empty and mandatory, but it can "
"also do more validations for other kind of fields, like if the option "
"selected is valid, or if a date should be only in the past etc. It can "
"provide a custom error message also."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:458
#, no-wrap
msgid "sub SearchFieldRender { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:463
msgid ""
"This function is used by ticket search dialog and it is similar to "
"<code>EditFieldRander()</code>, but normally on a search screen small "
"changes has to be done for all fields. For this example we use a HTML text "
"input instead of a password input. In other fields like Dropdown field is "
"displayed as a Multiple select in order to let the user search for more than "
"one value at a time."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:470
#, no-wrap
msgid "sub SearchFieldValueGet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:475
msgid ""
"Very similar to <code>EditFieldValueGet()</code>, but uses a different name "
"prefix, adapted for the search dialog screen."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:479
#, no-wrap
msgid "sub SearchFieldParameterBuild { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:484
msgid ""
"<code>SearchFieldParameterBuild()</code> is used also by the ticket search "
"dialog to set the correct operator and value to do the search on this "
"field. It also returns how the value should be displayed in the used search "
"attributes in the results page."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:490
#, no-wrap
msgid "sub StatsFieldParameterBuild { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:495
msgid ""
"This function is used by the stats modules. It includes the field definition "
"in the stats format. For fields with fixed values it also includes all this "
"possible values and if they can be translated, take a look to the "
"<literal>BaseSelect</literal> driver code for an example how to implement "
"those."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:501
#, no-wrap
msgid "sub StatsSearchFieldParameterBuild { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:506
msgid ""
"<code>StatsSearchFieldParameterBuild()</code> is very similar to the "
"<code>SearchFieldParameterBuild()</code>. The difference is that the "
"<code>SearchFieldParameterBuild()</code> gets the value from the search "
"profile and this one gets the value directly from its parameters."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:512
msgid "This function is used by statistics module."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:515
#, no-wrap
msgid "sub TemplateValueTypeGet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:520
msgid ""
"The <code>TemplateValueTypeGet()</code> function is used to know how the "
"Dynamic Field values stored on a profile should be retrieved, as a SCALAR or "
"as an ARRAY, and it also defines the correct name of the field in the "
"profile."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:525
#, no-wrap
msgid "sub RandomValueSet { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:530
msgid ""
"This function is used by <filename>otrs.FillDB.pl</filename> script to "
"populate the database with some test and random data. The value inserted by "
"this function is not really relevant. The only restriction is that the value "
"must be compatible with the field value type."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:535
#, no-wrap
msgid "sub ObjectMatch { ... }\n"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field-driver.xml:540
msgid ""
"Used by the notification modules. This function returns 1 if the field is "
"present in the <literal>$Param{ObjectAttributes}</literal> parameter and if "
"it matches the given value."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field.xml:5
msgid "Creating A New Dynamic Field"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field.xml:7
msgid ""
"To illustrate this process a new Dynamic Field \"Password\" will be "
"created. This new Dynamic Field Type will show a New password field to "
"Ticket or Article objects. Since is very similar to a Text Dynamic Field we "
"will use the <literal>Base</literal> and <literal>BaseText</literal> Drivers "
"as a basis to build this new field."
msgstr ""

#. type: Content of: <section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field.xml:14
msgid ""
"This new password field implementation is just for educational purposes, it "
"does not provide any level of security and is not recommended for production "
"systems."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field.xml:19
msgid ""
"To create this new Dynamic Field we will create 4 files: a Configuration "
"File (XML), to register the modules, an Admin Dialog Module (Perl), to setup "
"the field options, a template module, for the Admin Dialog and a Dynamic "
"Field Driver (Perl)."
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field.xml:26
#, no-wrap
msgid ""
"$HOME (e. g. /opt/otrs/)\n"
"|\n"
"...\n"
"|--/Kernel/\n"
"|   |--/Config/\n"
"|   |   |--/Files/\n"
"|   |   |   |DynamicFieldPassword.xml\n"
"...\n"
"|   |--/Modules/\n"
"|   |   |AdminDynamicFieldPassword.pm\n"
"...\n"
"|   |--/Output/\n"
"|   |   |--/HTML/\n"
"|   |   |   |--/Standard/\n"
"|   |   |   |   |AdminDynamicFieldPassword.tt\n"
"...\n"
"|   |--/System/\n"
"|   |   |--/DynamicField/\n"
"|   |   |   |--/Driver/\n"
"|   |   |   |   |Password.pm\n"
"...\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-new-field.xml:50
msgid "Dynamic Field Password files"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:5
msgid "Overview"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:7
msgid ""
"Dynamic Fields are custom fields that can be added to a screen to enhance "
"and add information to an object (e.g. a ticket or an article)."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:11
msgid ""
"The Dynamic Fields are the evolution of the ticket and article Free Fields "
"(<literal>TikcetFreeText</literal>, <literal>TicketFreeKey</literal>, "
"<literal>TicketFreeTime</literal>, <literal>ArticleFreeText</literal>, "
"<literal>ArticleFreeKey</literal> and <literal>ArticleFreeTime</literal>) "
"from older versions of OTRS."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:18
msgid ""
"From OTRS version 3.1 the old Free Fields has been replaced with the new "
"Dynamic Fields.  For a better backward compatibility and data preservation "
"when updating from previous versions, a migration script has been developed "
"to convert the existing Free Fields to Dynamic Fields and to move their "
"values from the <emphasis>ticket</emphasis> and <emphasis>article</emphasis> "
"tables in the database to new dynamic fields tables."
msgstr ""

#. type: Content of: <section><note><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:26
msgid ""
"Any custom development that uses Free Fields needs to be ported to the new "
"Dynamic Fields code structure, otherwise it will not work anymore. For this "
"reason is very important to know that only updated installations of OTRS 3.0 "
"has the old Free Fields converted to Dynamic Fields, new or clean "
"installations of OTRS has no Dynamic Fields defined \"out of the box\" and "
"any Dynamic Field needed by the custom development needs to be added."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:35
msgid ""
"The restriction on the number of the fields per ticket or article has been "
"removed. This means that a ticket or article could have as many fields as "
"needed. And now it is also possible to use the Dynamic Fields framework for "
"other objects rather than just ticket or article."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:41
msgid ""
"The new Dynamic Fields can store the same data types as the Free Fields "
"(Text and Date/Time), and they can be also defined as them (Single line "
"input, drop-down and date-time), but Dynamic Fields go beyond that, a new "
"integer data type has been added and also new options to define the fields "
"like Multiple-line inputs, check-boxes, Multiple-select and date (without "
"time) fields. Each field type defines its own data type."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/dynamic-fields/dynamic-fields-overview.xml:48
msgid ""
"Due to its modular design each Dynamic Field type can be seen as a plug-in "
"to a framework, and this plug-in can be an OTRS standard package to extend "
"the available types of the Dynamic Fields or even to extend current Dynamic "
"Field with more functions."
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:5
msgid "Ticket PostMaster Module"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:7
msgid ""
"PostMaster modules are used during the PostMaster process.  There are two "
"kinds of PostMaster modules: <literal>PostMasterPre</literal> (used after "
"parsing an email)  and <literal>PostMasterPost</literal> (used after an "
"email is processed and is in the database)."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:12
msgid ""
"If you want to create your own postmaster filter, just create your own "
"module.  These modules are located under "
"<filename>Kernel/System/PostMaster/Filter/*.pm</filename>.  For default "
"modules see the admin manual. You just need two functions: "
"<code>new()</code> and <code>Run()</code>."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:18
msgid ""
"The following is an exemplary module to match emails and set X-OTRS-Headers "
"(see <filename>doc/X-OTRS-Headers.txt</filename> for more info)."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:22
msgid "<filename>Kernel/Config/Files/MyModule.xml</filename>:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:25
#, no-wrap
msgid ""
"<ConfigItem Name=\"PostMaster::PreFilterModule###1-Example\" Required=\"0\" "
"Valid=\"1\">\n"
"    <Description Translatable=\"1\">Example module to filter and manipulate "
"incoming messages.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Core::PostMaster</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item "
"Key=\"Module\">Kernel::System::PostMaster::Filter::Example</Item>\n"
"            <Item Key=\"Match\">\n"
"                <Hash>\n"
"                    <Item Key=\"From\">noreply@</Item>\n"
"                </Hash>\n"
"            </Item>\n"
"            <Item Key=\"Set\">\n"
"                <Hash>\n"
"                    <Item Key=\"X-OTRS-Ignore\">yes</Item>\n"
"                </Hash>\n"
"            </Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:49
msgid ""
"And the actual filter code in "
"<filename>Kernel/System/PostMaster/Filter/Example.pm</filename>:"
msgstr ""

#. type: CDATA
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:52
#, no-wrap
msgid ""
"# --\n"
"# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/\n"
"# --\n"
"# This software comes with ABSOLUTELY NO WARRANTY. For details, see\n"
"# the enclosed file COPYING for license information (GPL). If you\n"
"# did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.\n"
"# --\n"
"\n"
"package Kernel::System::PostMaster::Filter::Example;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"our @ObjectDependencies = (\n"
"    'Kernel::System::Log',\n"
");\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless ($Self, $Type);\n"
"\n"
"    $Self->{Debug} = $Param{Debug} || 0;\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"sub Run {\n"
"    my ( $Self, %Param ) = @_;\n"
"    # get config options\n"
"    my %Config = ();\n"
"    my %Match = ();\n"
"    my %Set = ();\n"
"    if ($Param{JobConfig} && ref($Param{JobConfig}) eq 'HASH') {\n"
"        %Config = %{$Param{JobConfig}};\n"
"        if ($Config{Match}) {\n"
"            %Match = %{$Config{Match}};\n"
"        }\n"
"        if ($Config{Set}) {\n"
"            %Set = %{$Config{Set}};\n"
"        }\n"
"        }\n"
"        # match 'Match => ???' stuff\n"
"        my $Matched = '';\n"
"        my $MatchedNot = 0;\n"
"        for (sort keys %Match) {\n"
"        if ($Param{GetParam}->{$_} && $Param{GetParam}->{$_} =~ "
"/$Match{$_}/i) {\n"
"            $Matched = $1 || '1';\n"
"            if ($Self->{Debug} > 1) {\n"
"                $Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"                    Priority => 'debug',\n"
"                    Message => \"'$Param{GetParam}->{$_}' =~ /$Match{$_}/i "
"matched!\",\n"
"                );\n"
"            }\n"
"        }\n"
"        else {\n"
"            $MatchedNot = 1;\n"
"            if ($Self->{Debug} > 1) {\n"
"                $Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"                    Priority => 'debug',\n"
"                    Message => \"'$Param{GetParam}->{$_}' =~ /$Match{$_}/i "
"matched NOT!\",\n"
"                );\n"
"            }\n"
"        }\n"
"        }\n"
"        # should I ignore the incoming mail?\n"
"        if ($Matched && !$MatchedNot) {\n"
"        for (keys %Set) {\n"
"            if ($Set{$_} =~ /\\[\\*\\*\\*\\]/i) {\n"
"                $Set{$_} = $Matched;\n"
"            }\n"
"            $Param{GetParam}->{$_} = $Set{$_};\n"
"            $Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"                Priority => 'notice',\n"
"                Message => \"Set param '$_' to '$Set{$_}' (Message-ID: "
"$Param{GetParam}->{'Message-ID'}) \",\n"
"            );\n"
"        }\n"
"    }\n"
"\n"
"    return 1;\n"
"}\n"
"\n"
"1;\n"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:141
msgid "The following image shows you the email processing flow."
msgstr ""

#. type: Content of: <section><para><figure><title>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:145
msgid "Email Processing Flow"
msgstr ""

#. type: Content of: <section><para><figure><screenshot>
#: en/content/how-to-extend-otrs/otrs-module-layers/email-handling/ticket-postmaster-modules.xml:147
msgid ""
"<graphic fileref=\"screenshots/email-processing.png\" scalefit=\"1\" "
"width=\"100%\" contentdepth=\"100%\"></graphic>"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:5
msgid "Package Building"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:7
msgid ""
"If you want to create an OPM package (<literal>.opm</literal>) you need to "
"create a spec file (<literal>.sopm</literal>) which includes the properties "
"of the package."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:11
msgid "Package Spec File"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:13
msgid ""
"The OPM package is XML based. You can create/edit the "
"<literal>.sopm</literal> via a text or XML editor. It contains meta data, a "
"file list and database options."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:17
msgid "<literal>&lt;Name&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:19
msgid "The package name (required)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:22
#, no-wrap
msgid "<Name>Calendar</Name>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:28
msgid "<literal>&lt;Version&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:30
msgid "The package version (required)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:33
#, no-wrap
msgid "<Version>1.2.3</Version>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:39
msgid "<literal>&lt;Framework&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:41
msgid "The targeted framework version (3.2.x means e.g. 3.2.1 or 3.2.2) (required)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:44
#, no-wrap
msgid "<Framework>3.2.x</Framework>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:49
msgid "Can also be used several times."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:52
#, no-wrap
msgid ""
"<Framework>3.0.x</Framework>\n"
"<Framework>3.1.x</Framework>\n"
"<Framework>3.2.x</Framework>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:60
msgid "<literal>&lt;Vendor&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:62
msgid "The package vendor (required)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:65
#, no-wrap
msgid "<Vendor>OTRS AG</Vendor>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:71
msgid "<literal>&lt;URL&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:73
msgid "The vendor URL (required)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:76
#, no-wrap
msgid "<URL>https://otrs.com/</URL>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:82
msgid "<literal>&lt;License&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:84
msgid "The license of the package (required)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:87
#, no-wrap
msgid "<License>GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007</License>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:93
msgid "<literal>&lt;ChangeLog&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:95
msgid "The package change log (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:98
#, no-wrap
msgid ""
"<ChangeLog Version=\"1.1.2\" Date=\"2013-02-15 18:45:21\">Added some "
"feature.</ChangeLog>\n"
"<ChangeLog Version=\"1.1.1\" Date=\"2013-02-15 16:17:51\">New "
"package.</ChangeLog>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:105
msgid "<literal>&lt;Description&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:107
msgid "The package description in different languages (required)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:110
#, no-wrap
msgid ""
"<Description Lang=\"en\">A web calendar.</Description>\n"
"<Description Lang=\"de\">Ein Web Kalender.</Description>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:117
msgid "Package Actions"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:119
msgid ""
"The possible actions for the package after installation. If one of these "
"actions is not defined on the package, it will be considered as possible."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:123
#, no-wrap
msgid ""
"<PackageIsVisible>1</PackageIsVisible>\n"
"<PackageIsDownloadable>0</PackageIsDownloadable>\n"
"<PackageIsRemovable>1</PackageIsRemovable>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:131
msgid "<literal>&lt;BuildHost&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:133 en/content/how-to-publish-otrs-extensions/package-building.xml:144
msgid "This will be filled in automatically by OPM."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:136
#, no-wrap
msgid "<BuildHost>?</BuildHost>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:142
msgid "<literal>&lt;BuildDate&gt;</literal>"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:147
#, no-wrap
msgid "<BuildDate>?</BuildDate>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:153
msgid "<literal>&lt;PackageRequired&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:155
msgid ""
"Packages that must be installed beforehand (optional). If "
"<literal>PackageRequired</literal> is used, a version of the required "
"package must be specified."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:159
#, no-wrap
msgid ""
"<PackageRequired Version=\"1.0.3\">SomeOtherPackage</PackageRequired>\n"
"<PackageRequired Version=\"5.3.2\">SomeotherPackage2</PackageRequired>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:166
msgid "<literal>&lt;ModuleRequired&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:168
msgid "Perl modules that must be installed beforehand (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:171
#, no-wrap
msgid ""
"<ModuleRequired Version=\"1.03\">Encode</ModuleRequired>\n"
"<ModuleRequired Version=\"5.32\">MIME::Tools</ModuleRequired>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:178
msgid "<literal>&lt;OS&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:180
msgid "Required OS (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:183
#, no-wrap
msgid ""
"<OS>linux</OS>\n"
"<OS>darwin</OS>\n"
"<OS>mswin32</OS>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:191
msgid "<literal>&lt;Filelist&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:193
msgid "This is a list of files included in the package (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:196
#, no-wrap
msgid ""
"<Filelist>\n"
"    <File Permission=\"644\" "
"Location=\"Kernel/Config/Files/Calendar.pm\"/>\n"
"    <File Permission=\"644\" Location=\"Kernel/System/CalendarEvent.pm\"/>\n"
"    <File Permission=\"644\" "
"Location=\"Kernel/Modules/AgentCalendar.pm\"/>\n"
"    <File Permission=\"644\" "
"Location=\"Kernel/Language/de_AgentCalendar.pm\"/>\n"
"</Filelist>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:207
msgid "<literal>&lt;DatabaseInstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:209
msgid ""
"Database entries that have to be created when a package is installed "
"(optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:212
#, no-wrap
msgid ""
"<DatabaseInstall>\n"
"    <TableCreate Name=\"calendar_event\">\n"
"    <Column Name=\"id\" Required=\"true\" PrimaryKey=\"true\" "
"AutoIncrement=\"true\" Type=\"BIGINT\"/>\n"
"    <Column Name=\"title\" Required=\"true\" Size=\"250\" "
"Type=\"VARCHAR\"/>\n"
"    <Column Name=\"content\" Required=\"false\" Size=\"250\" "
"Type=\"VARCHAR\"/>\n"
"    <Column Name=\"start_time\" Required=\"true\" Type=\"DATE\"/>\n"
"    <Column Name=\"end_time\" Required=\"true\" Type=\"DATE\"/>\n"
"    <Column Name=\"owner_id\" Required=\"true\" Type=\"INTEGER\"/>\n"
"    <Column Name=\"event_status\" Required=\"true\" Size=\"50\" "
"Type=\"VARCHAR\"/>\n"
"    </TableCreate>\n"
"</DatabaseInstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:227
msgid ""
"You also can choose <literal>&lt;DatabaseInstall Type=\"post\"&gt;</literal> "
"or <literal>&lt;DatabaseInstall Type=\"pre\"&gt;</literal> to define the "
"time of execution separately (<literal>post</literal> is default). For more "
"info see <link linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:233
msgid "<literal>&lt;DatabaseUpgrade&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:235
msgid ""
"Information on which actions have to be performed in case of an upgrade "
"(optional).  Example if already installed package version is below 1.3.4 "
"(e. g. 1.2.6), the defined action will be performed:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:240
#, no-wrap
msgid ""
"<DatabaseUpgrade>\n"
"    <TableCreate Name=\"calendar_event_involved\" Version=\"1.3.4\">\n"
"        <Column Name=\"event_id\" Required=\"true\" Type=\"BIGINT\"/>\n"
"        <Column Name=\"user_id\" Required=\"true\" Type=\"INTEGER\"/>\n"
"    </TableCreate>\n"
"</DatabaseUpgrade>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:250
msgid ""
"You also can choose <literal>&lt;DatabaseUpgrade Type=\"post\"&gt;</literal> "
"or <literal>&lt;DatabaseUpgrade Type=\"pre\"&gt;</literal> to define the "
"time of execution separately (<literal>post</literal> is default). For more "
"info see <link linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:256
msgid "<literal>&lt;DatabaseReinstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:258
msgid ""
"Information on which actions have to be performed if the package is "
"reinstalled (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:261
#, no-wrap
msgid "<DatabaseReinstall></DatabaseReinstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:266
msgid ""
"You also can choose <literal>&lt;DatabaseReinstall "
"Type=\"post\"&gt;</literal> or <literal>&lt;DatabaseReinstall "
"Type=\"pre\"&gt;</literal> to define the time of execution separately "
"(<literal>post</literal> is default). For more info see <link "
"linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:272
msgid "<literal>&lt;DatabaseUninstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:274
msgid "Actions to be performed on package uninstall (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:277
#, no-wrap
msgid ""
"<DatabaseUninstall>\n"
"    <TableDrop Name=\"calendar_event\" />\n"
"</DatabaseUninstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:284
msgid ""
"You also can choose <literal>&lt;DatabaseUninstall "
"Type=\"post\"&gt;</literal> or <literal>&lt;DatabaseUninstall "
"Type=\"pre\"&gt;</literal> to define the time of execution separately "
"(<literal>post</literal> is default). For more info see <link "
"linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:290
msgid "<literal>&lt;IntroInstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:292
msgid "To show a \"pre\" or \"post\" install introduction in installation dialog."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:295
#, no-wrap
msgid ""
"<IntroInstall Type=\"post\" Lang=\"en\" Title=\"Some Title\"><![CDATA[\n"
"Some Info formatted in HTML....\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:298
#, no-wrap
msgid "></IntroInstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:302 en/content/how-to-publish-otrs-extensions/package-building.xml:320 en/content/how-to-publish-otrs-extensions/package-building.xml:338 en/content/how-to-publish-otrs-extensions/package-building.xml:356
msgid ""
"You can also use the <literal>Format</literal> attribute to define if you "
"want to use \"html\" (which is default) or \"plain\" to use automatically a "
"<literal>&lt;pre&gt;&lt;/pre&gt;</literal> tag when intro is shown (to keep "
"the newlines and whitespace of the content)."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:308
msgid "<literal>&lt;IntroUninstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:310
msgid ""
"To show a \"pre\" or \"post\" uninstall introduction in uninstallation "
"dialog."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:313
#, no-wrap
msgid ""
"<IntroUninstall Type=\"post\" Lang=\"en\" Title=\"Some Title\"><![CDATA[\n"
"Some Info formatted in html....\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:316
#, no-wrap
msgid "></IntroUninstall>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:326
msgid "<literal>&lt;IntroReinstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:328
msgid ""
"To show a \"pre\" or \"post\" reinstall introduction in re-installation "
"dialog."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:331
#, no-wrap
msgid ""
"<IntroReinstall Type=\"post\" Lang=\"en\" Title=\"Some Title\"><![CDATA[\n"
"Some Info formatted in html....\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:334
#, no-wrap
msgid "></IntroReinstall>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:344
msgid "<literal>&lt;IntroUpgrade&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:346
msgid "To show a \"pre\" or \"post\" upgrade introduction in upgrading dialog."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:349
#, no-wrap
msgid ""
"<IntroUpgrade Type=\"post\" Lang=\"en\" Title=\"Some Title\"><![CDATA[\n"
"Some Info formatted in html....\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:352
#, no-wrap
msgid "></IntroUpgrade>\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:362
msgid "<literal>&lt;CodeInstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:364
msgid "Perl code to be executed when the package is installed (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:367
#, no-wrap
msgid ""
"<CodeInstall><![CDATA[\n"
"# log example\n"
"$Kernel::OM->Get('Kernel::System::Log')->Log(\n"
"    Priority => 'notice',\n"
"    Message => \"Some Message!\",\n"
");\n"
"# database example\n"
"$Kernel::OM->Get('Kernel::System::DB')->Do(SQL => \"SOME SQL\");\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:376 en/content/how-to-publish-otrs-extensions/package-porting.xml:473
#, no-wrap
msgid "></CodeInstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:380
msgid ""
"You also can choose <literal>&lt;CodeInstall Type=\"post\"&gt;</literal> or "
"<literal>&lt;CodeInstall Type=\"pre\"&gt;</literal> to define the time of "
"execution separately (<literal>post</literal> is default). For more info see "
"<link linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:386
msgid "<literal>&lt;CodeUninstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:388
msgid ""
"Perl code to be executed when the package is uninstalled (optional). On "
"\"pre\" or \"post\" time of package uninstallation."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:392
#, no-wrap
msgid ""
"<CodeUninstall><![CDATA[\n"
"...\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:395
#, no-wrap
msgid "></CodeUninstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:399
msgid ""
"You also can choose <literal>&lt;CodeUninstall Type=\"post\"&gt;</literal> "
"or <literal>&lt;CodeUninstall Type=\"pre\"&gt;</literal> to define the time "
"of execution separately (<literal>post</literal> is default). For more info "
"see <link linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:405
msgid "<literal>&lt;CodeReinstall&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:407
msgid "Perl code to be executed when the package is reinstalled (optional)."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:410
#, no-wrap
msgid ""
"<CodeReinstall><![CDATA[\n"
"...\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:413
#, no-wrap
msgid "></CodeReinstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:417
msgid ""
"You also can choose <literal>&lt;CodeReinstall Type=\"post\"&gt;</literal> "
"or <literal>&lt;CodeReinstall Type=\"pre\"&gt;</literal> to define the time "
"of execution separately (<literal>post</literal> is default). For more info "
"see <link linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:424
msgid "<literal>&lt;CodeUpgrade&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:426
msgid ""
"Perl code to be executed when the package is upgraded (subject to "
"<literal>version</literal> tag), (optional). Example if already installed "
"package version is below 1.3.4 (e. g.  1.2.6), defined action will be "
"performed:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:431
#, no-wrap
msgid ""
"<CodeUpgrade Version=\"1.3.4\"><![CDATA[\n"
"...\n"
"]]"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:434
#, no-wrap
msgid "></CodeUpgrade>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:438
msgid ""
"You also can choose <literal>&lt;CodeUpgrade Type=\"post\"&gt;</literal> or "
"<literal>&lt;CodeUpgrade Type=\"pre\"&gt;</literal> to define the time of "
"execution separately (<literal>post</literal> is default). For more info see "
"<link linkend=\"package-life-cycle\">Package Life Cycle</link>."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:446
msgid "<literal>&lt;PackageMerge&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:448
msgid ""
"This tag singals that a package has been merged into another package. In "
"this case the original package needs to be removed from the file system and "
"the packages database, but all data must be kept. Let's assume that "
"<literal>PackageOne</literal> was merged into "
"<literal>PackageTwo</literal>. Then <filename>PackageTwo.sopm</filename> "
"should contain this:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:455
#, no-wrap
msgid "<PackageMerge Name=\"MergeOne\" TargetVersion=\"2.0.0\"></PackageMerge>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:460
msgid ""
"If <literal>PackageOne</literal> also contained database structures, we need "
"to be sure that it was at the latest available version of the package to "
"have a consistent state in the database after merging the package. The "
"attribute <literal>TargetVersion</literal> does just this: it signifies the "
"last known version of <literal>PackageOne</literal> at the time "
"<literal>PackageTwo</literal> was created. This is mainly to stop the "
"upgrade process if in the user's system a version of "
"<literal>PackageOne</literal> was found that is <emphasis>newer</emphasis> "
"than the one specified in <literal>TargetVersion</literal> as this could "
"lead to problems."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:470
msgid ""
"Additionally it is possible to add required database and code upgrade tags "
"for <literal>PackageOne</literal> to make sure that it gets properly "
"upgraded to the <literal>TargetVersion</literal> <emphasis>before</emphasis> "
"merging it - to avoid inconsistency problems. Here's how this could look "
"like:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:476
#, no-wrap
msgid ""
"<PackageMerge Name=\"MergeOne\" TargetVersion=\"2.0.0\">\n"
"  <DatabaseUpgrade Type=\"merge\">\n"
"      <TableCreate Name=\"merge_package\">\n"
"          <Column Name=\"id\" Required=\"true\" PrimaryKey=\"true\" "
"AutoIncrement=\"true\" Type=\"INTEGER\"/>\n"
"          <Column Name=\"description\" Required=\"true\" Size=\"200\" "
"Type=\"VARCHAR\"/>\n"
"      </TableCreate>\n"
"  </DatabaseUpgrade>\n"
"</PackageMerge>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:488
msgid ""
"As you can see the attribute <literal>Type=\"merge\"</literal> needs to be "
"set in this case.  These sections will only be executed if a package merge "
"is possible."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:494
msgid "Conditions: <literal>IfPackage</literal> and <literal>IfNotPackage</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:496
msgid ""
"These attributes can be added to the regular <literal>Database*</literal> "
"and <literal>Code*</literal> sections.  If they are present, the section "
"will only be executed if another package is or is not in the local package "
"repository."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:501
#, no-wrap
msgid ""
"<DatabaseInstall IfPackage=\"AnyPackage\">\n"
"    ...\n"
"</DatabaseInstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:508
msgid "or"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:511
#, no-wrap
msgid ""
"<CodeUpgrade IfNotPackage=\"OtherPackage\">\n"
"    ...\n"
"</CodeUpgrade>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:518
msgid ""
"These attributes can be also set in the <literal>Database*</literal> and "
"<literal>Code*</literal> sections inside the <literal>PackageMerge</literal> "
"tags."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:525
msgid "Example .sopm"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:527
msgid "This is an example spec file looks with some of the above tags."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:530
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n"
"<otrs_package version=\"1.0\">\n"
"    <Name>Calendar</Name>\n"
"    <Version>0.0.1</Version>\n"
"    <Framework>3.2.x</Framework>\n"
"    <Vendor>OTRS AG</Vendor>\n"
"    <URL>https://otrs.com/</URL>\n"
"    <License>GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007</License>\n"
"    <ChangeLog Version=\"1.1.2\" Date=\"2013-02-15 18:45:21\">Added some "
"feature.</ChangeLog>\n"
"    <ChangeLog Version=\"1.1.1\" Date=\"2013-02-15 16:17:51\">New "
"package.</ChangeLog>\n"
"    <Description Lang=\"en\">A web calendar.</Description>\n"
"    <Description Lang=\"de\">Ein Web Kalender.</Description>\n"
"    <IntroInstall Type=\"post\" Lang=\"en\" Title=\"Thank you!\">Thank you "
"for choosing the Calendar module.</IntroInstall>\n"
"    <IntroInstall Type=\"post\" Lang=\"de\" Title=\"Vielen Dank!\">Vielen "
"Dank fuer die Auswahl des Kalender Modules.</IntroInstall>\n"
"    <BuildDate>?</BuildDate>\n"
"    <BuildHost>?</BuildHost>\n"
"    <Filelist>\n"
"        <File Permission=\"644\" "
"Location=\"Kernel/Config/Files/Calendar.pm\"></File>\n"
"        <File Permission=\"644\" "
"Location=\"Kernel/System/CalendarEvent.pm\"></File>\n"
"        <File Permission=\"644\" "
"Location=\"Kernel/Modules/AgentCalendar.pm\"></File>\n"
"        <File Permission=\"644\" "
"Location=\"Kernel/Language/de_AgentCalendar.pm\"></File>\n"
"        <File Permission=\"644\" "
"Location=\"Kernel/Output/HTML/Standard/AgentCalendar.tt\"></File>\n"
"        <File Permission=\"644\" "
"Location=\"Kernel/Output/HTML/NotificationCalendar.pm\"></File>\n"
"        <File Permission=\"644\" "
"Location=\"var/httpd/htdocs/images/Standard/calendar.png\"></File>\n"
"    </Filelist>\n"
"    <DatabaseInstall>\n"
"        <TableCreate Name=\"calendar_event\">\n"
"            <Column Name=\"id\" Required=\"true\" PrimaryKey=\"true\" "
"AutoIncrement=\"true\" Type=\"BIGINT\"/>\n"
"            <Column Name=\"title\" Required=\"true\" Size=\"250\" "
"Type=\"VARCHAR\"/>\n"
"            <Column Name=\"content\" Required=\"false\" Size=\"250\" "
"Type=\"VARCHAR\"/>\n"
"            <Column Name=\"start_time\" Required=\"true\" Type=\"DATE\"/>\n"
"            <Column Name=\"end_time\" Required=\"true\" Type=\"DATE\"/>\n"
"            <Column Name=\"owner_id\" Required=\"true\" Type=\"INTEGER\"/>\n"
"            <Column Name=\"event_status\" Required=\"true\" Size=\"50\" "
"Type=\"VARCHAR\"/>\n"
"        </TableCreate>\n"
"    </DatabaseInstall>\n"
"    <DatabaseUninstall>\n"
"        <TableDrop Name=\"calendar_event\"/>\n"
"    </DatabaseUninstall>\n"
"</otrs_package>\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:575
msgid "Package Build"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:577
msgid "To build an .opm package from the spec opm."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-building.xml:580
#, no-wrap
msgid ""
"shell> bin/otrs.Console.pl Dev::Package::Build /path/to/example.sopm /tmp\n"
"Building package...\n"
"Done.\n"
"shell>\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:589
msgid "Package Life Cycle - Install/Upgrade/Uninstall"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:591
msgid ""
"The following image shows you how the life cycle of a package "
"installation/upgrade/uninstallation works in the backend step by step."
msgstr ""

#. type: Content of: <section><section><para><figure><title>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:596
msgid "Package Life Cycle"
msgstr ""

#. type: Content of: <section><section><para><figure><screenshot>
#: en/content/how-to-publish-otrs-extensions/package-building.xml:598
msgid ""
"<graphic fileref=\"screenshots/package-life-cycle.png\" scalefit=\"1\" "
"width=\"100%\" contentdepth=\"100%\"></graphic>"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:5
msgid "Package Management"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:7
msgid ""
"The OPM (OTRS Package Manager) is a mechanism to distribute software "
"packages for the OTRS framework via HTTP, FTP or file upload."
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:11
msgid ""
"For example, the OTRS project offers OTRS modules like a calendar, a file "
"manager or web mail in OTRS packages via online repositories on our ftp "
"servers.  The packages can be managed (install/upgrade/uninstall) via the "
"admin interface."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:17
msgid "Package Distribution"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:19
msgid ""
"If you want to create an OPM online repository, just tell the OTRS framework "
"where the location is by activating the SysConfig setting "
"<literal>Package::RepositoryList</literal> and adding the new location "
"there. Then you will have a new select option in the package manager."
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:24
msgid ""
"In your repository, create an index file for your OPM packages.  OTRS just "
"reads this index file and knows what packages are available."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-management.xml:28
#, no-wrap
msgid ""
"shell> bin/otrs.Console.pl Dev::Package::RepositoryIndex "
"/path/to/repository/ > /path/to/repository/otrs.xml\n"
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:35
msgid "Package Commands"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:37
msgid ""
"You can use the following OPM commands over the admin interface or over "
"<filename>bin/otrs.PackageManager.pl</filename> to manage admin jobs for OPM "
"packages."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:42
msgid "Install"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:44
msgid "Install OPM packages."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:50 en/content/how-to-publish-otrs-extensions/package-management.xml:75 en/content/how-to-publish-otrs-extensions/package-management.xml:99 en/content/how-to-publish-otrs-extensions/package-management.xml:123
msgid ""
"Web: <ulink "
"url=\"http://localhost/otrs/index.pl?Action=AdminPackageManager\">http://localhost/otrs/index.pl?Action=AdminPackageManager</ulink>"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:55 en/content/how-to-publish-otrs-extensions/package-management.xml:80 en/content/how-to-publish-otrs-extensions/package-management.xml:104 en/content/how-to-publish-otrs-extensions/package-management.xml:129
msgid "CMD:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-management.xml:58
#, no-wrap
msgid "shell> bin/otrsConsole.pl Admin::Package::Install /path/to/package.opm\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:68
msgid "Uninstall"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:70
msgid "Uninstall OPM packages."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-management.xml:83
#, no-wrap
msgid "shell> bin/otrsConsole.pl Admin::Package::Uninstall /path/to/package.opm\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:92
msgid "Upgrade"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:94
msgid "Upgrade OPM packages."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-management.xml:107
#, no-wrap
msgid "shell> bin/otrsConsole.pl Admin::Package::Upgrade /path/to/package.opm\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:116
msgid "List"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-management.xml:118
msgid "List all OPM packages."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-management.xml:132
#, no-wrap
msgid "shell> bin/otrsConsole.pl Admin::Package::List\n"
msgstr ""

#. type: Content of: <section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:5
msgid "Package Porting"
msgstr ""

#. type: Content of: <section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:7
msgid ""
"With every new minor or major version of OTRS, you need to port your "
"package(s) and make sure they still work with the OTRS API."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:11
msgid "From OTRS 4 to 5"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:13
msgid ""
"This section lists changes that you need to examine when porting your "
"package from OTRS 4 to 5."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:18
msgid "<filename>Kernel/Output/HTML</filename> restructured"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:20
msgid ""
"In OTRS 5, <filename>Kernel/Output/HTML</filename> was restructured. All "
"Perl modules (except <filename>Layout.pm</filename>) were moved to "
"subdirectories (one for every module layer). Template (theme) files were "
"also moved from <filename>Kernel/Output/HTML/Standard</filename> to "
"<filename>Kernel/Output/HTML/Templates/Standard</filename>. Please perform "
"this migration also in your code."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:25
msgid "Pre-Output-Filters"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:27
msgid ""
"With OTRS 5 there is no support for <literal>pre</literal> output filters "
"any more. These filters changed the template content before it was parsed, "
"and that could potentially lead to bad performance issues because the "
"templates could not be cached any more and had to be parsed and compiled "
"every time."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:30
msgid ""
"Just switch from <literal>pre</literal> to <literal>post</literal> output "
"filters. To translate content, you can run "
"<code>$LayoutObject->Translate()</code> directly. If you need other template "
"features, just define a small template file for your output filter and use "
"it to render your content before injecting it into the main data. It can "
"also be helpful to use jQuery DOM operations to reorder/replace content on "
"the screen in some cases instead of using regular expressions. In this case "
"you would inject the new code somewhere in the page as invisible content "
"(e. g. with the class <literal>Hidden</literal>), and then move it with "
"jQuery to the correct location in the DOM and show it."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:33
msgid ""
"To make using post output filters easier, there is also a new mechanism to "
"request HTML comment hooks for certain templates/blocks. You can add in your "
"module config XML like:"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:75
msgid "IE 8 and IE 9"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:77
msgid ""
"Support for IE 8 and 9 <ulink "
"url=\"https://github.com/OTRS/otrs/commit/3b1aff21984d7b32f626df95e072337245615b36\">was "
"dropped</ulink>. You can remove any workarounds in your code for these "
"platforms, as well as any old <literal>&lt;CSS_IE7&gt;</literal> or "
"<literal>&lt;CSS_IE8&gt;</literal> loader tags that might still lurk in your "
"XML config files."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:82
msgid "GenericInterface API change in \"Ticket\" connector"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:84
msgid ""
"The operation <code>TicketGet()</code> returns dynamic field data from "
"ticket and articles differently than in OTRS 4. Now they are cleanly "
"separated from the rest of the static ticket and article fields - they are "
"now grouped in a list called <literal>DynamicField</literal>. Please adapt "
"any applications using this operation accordingly."
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:91
#, no-wrap
msgid ""
"# changed from:\n"
"\n"
"Ticket => [\n"
"    {\n"
"        TicketNumber       => '20101027000001',\n"
"        Title              => 'some title',\n"
"        ...\n"
"        DynamicField_X     => 'value_x',\n"
"    },\n"
"]\n"
"\n"
"# to:\n"
"\n"
"Ticket => [\n"
"    {\n"
"        TicketNumber       => '20101027000001',\n"
"        Title              => 'some title',\n"
"        ...\n"
"        DynamicField => [\n"
"            {\n"
"                Name  => 'some name',\n"
"                Value => 'some value',\n"
"            },\n"
"        ],\n"
"    },\n"
"]\n"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:122
msgid "Preview functions in dynamic statistics"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:124
msgid ""
"The new statistics GUI provides a preview for the current "
"configuration. This must be implemented in the statistic modules and usually "
"returns fake / random data for speed reasons. So for any dynamic (matrix) "
"statistic that provides the method <code>GetStatElement()</code> you should "
"also add a method <code>GetStatElementPreview()</code>, and for every "
"dynamic (table) statistic that provides <code>GetStatTable()</code> you "
"should accordingly add <code>GetStatTablePreview()</code>. Otherwise the "
"preview in the new statistics GUI will not work for your statistics. You can "
"find example implementations in the default OTRS statistics."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:134
msgid "HTML print discarded"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:136
msgid ""
"Until OTRS 5, the Perl module <literal>PDF::API2</literal> was not present "
"on all systems. Therefore a fallback HTML print mode existed. With OTRS 5, "
"the module is now bundled and HTML print was dropped.  "
"<code>$LayoutObject->PrintHeader()</code> and <code>PrintFooter()</code> are "
"not available any more.  Please remove the HTML print fallback from your "
"code and change it to generate PDF if necessary."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:143
msgid "Translation string extraction improved"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:145
msgid ""
"Until OTRS 5, translatable strings could not be extracted from Perl code and "
"Database XML definitions.  This is now possible and makes dummy templates "
"like <filename>AAA*.tt</filename> obsolete.  Please see <link "
"linkend=\"localization-translation-mechanism\">this section</link> for "
"details."
msgstr ""

#. type: Content of: <section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:153
msgid "From OTRS 3.3 to 4"
msgstr ""

#. type: Content of: <section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:155
msgid ""
"This section lists changes that you need to examine when porting your "
"package from OTRS 3.3 to 4."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:160
msgid "New Object Handling"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:162
msgid ""
"Up to OTRS 4, objects used to be created both centrally and also locally and "
"then handed down to all objects by passing them to the constructors.  With "
"OTRS 4 and later versions, there is now an <literal>ObjectManager</literal> "
"that centralizes singleton object creation and access."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:168
msgid ""
"This will require you first of all to change all top level Perl scripts (.pl "
"files only!)  to load and provide the <literal>ObjectManager</literal> to "
"all OTRS objects.  Let's look at <filename>otrs.CheckDB.pl</filename> from "
"OTRS 3.3 as an example:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:173
#, no-wrap
msgid ""
"use strict;\n"
"use warnings;\n"
"\n"
"use File::Basename;\n"
"use FindBin qw($RealBin);\n"
"use lib dirname($RealBin);\n"
"use lib dirname($RealBin) . '/Kernel/cpan-lib';\n"
"use lib dirname($RealBin) . '/Custom';\n"
"\n"
"use Kernel::Config;\n"
"use Kernel::System::Encode;\n"
"use Kernel::System::Log;\n"
"use Kernel::System::Main;\n"
"use Kernel::System::DB;\n"
"\n"
"# create common objects\n"
"my %CommonObject = ();\n"
"$CommonObject{ConfigObject} = Kernel::Config->new();\n"
"$CommonObject{EncodeObject} = Kernel::System::Encode->new(%CommonObject);\n"
"$CommonObject{LogObject}    = Kernel::System::Log->new(\n"
"    LogPrefix    => 'OTRS-otrs.CheckDB.pl',\n"
"    ConfigObject => $CommonObject{ConfigObject},\n"
");\n"
"$CommonObject{MainObject} = Kernel::System::Main->new(%CommonObject);\n"
"$CommonObject{DBObject}   = Kernel::System::DB->new(%CommonObject);\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:202
msgid ""
"We can see that a lot of code is used to load the packages and create the "
"common objects that must be passed to OTRS objects to be used in the "
"script. With OTRS 4, this looks quite different:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:207
#, no-wrap
msgid ""
"use strict;\n"
"use warnings;\n"
"\n"
"use File::Basename;\n"
"use FindBin qw($RealBin);\n"
"use lib dirname($RealBin);\n"
"use lib dirname($RealBin) . '/Kernel/cpan-lib';\n"
"use lib dirname($RealBin) . '/Custom';\n"
"\n"
"use Kernel::System::ObjectManager;\n"
"\n"
"# create common objects\n"
"local $Kernel::OM = Kernel::System::ObjectManager->new(\n"
"    'Kernel::System::Log' => {\n"
"        LogPrefix => 'OTRS-otrs.CheckDB.pl',\n"
"    },\n"
");\n"
"\n"
"# get database object\n"
"my $DBObject = $Kernel::OM->Get('Kernel::System::DB');\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:231
msgid ""
"The new code is a bit shorter than the old. It is no longer necessary to "
"load all the packages, just the "
"<literal>ObjectManager</literal>. Subsequently "
"<literal>$Kernel::OM->Get('My::Perl::Package')</literal> can be used to get "
"instances of objects which only have to be created once. The "
"<literal>LogPrefix</literal> setting controls the log messages that "
"<literal>Kernel::System::Log</literal> writes, it could also be omitted."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:237
msgid ""
"From this example you can also deduce the general porting guide when it "
"comes to accessing objects: don't store them in <literal>$Self</literal> any "
"more (unless needed for specific reasons). Just fetch and use the objects on "
"demand like "
"<code>$Kernel::OM->Get('Kernel::System::Log')->Log(...)</code>. This also "
"has the benefit that the <literal>Log</literal> object will only be created "
"if something must be logged.  Sometimes it could also be useful to create "
"local variables if an object is used many times in a function, like "
"<literal>$DBObject</literal> in the example above."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:245
msgid ""
"There's not much more to know when porting packages that should be loadable "
"by the <literal>ObjectManager</literal>.  They should declare the modules "
"they use (via <code>$Kernel::OM->Get()</code>) like this:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:249
#, no-wrap
msgid ""
"our @ObjectDependencies = (\n"
"    'Kernel::Config',\n"
"    'Kernel::System::Log',\n"
"    'Kernel::System::Main',\n"
");\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:258
msgid ""
"The <literal>@ObjectDependencies</literal> declaration is needed for the "
"<literal>ObjectManager</literal> to keep the correct order when destroying "
"the objects."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:262
msgid ""
"Let's look at <filename>Valid.pm</filename> from OTRS 3.3 and 4 to see the "
"difference. Old:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:265
#, no-wrap
msgid ""
"package Kernel::System::Valid;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"use Kernel::System::CacheInternal;\n"
"\n"
"...\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    # check needed objects\n"
"    for my $Object (qw(DBObject ConfigObject LogObject EncodeObject "
"MainObject)) {\n"
"        $Self->{$Object} = $Param{$Object} || die \"Got no $Object!\";\n"
"    }\n"
"\n"
"    $Self->{CacheInternalObject} = Kernel::System::CacheInternal->new(\n"
"        %{$Self},\n"
"        Type => 'Valid',\n"
"        TTL  => 60 * 60 * 24 * 20,\n"
"    );\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"...\n"
"\n"
"sub ValidList {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # read cache\n"
"    my $CacheKey = 'ValidList';\n"
"    my $Cache = $Self->{CacheInternalObject}->Get( Key => $CacheKey );\n"
"    return %{$Cache} if $Cache;\n"
"\n"
"    # get list from database\n"
"    return if !$Self->{DBObject}->Prepare( SQL => 'SELECT id, name FROM "
"valid' );\n"
"\n"
"    # fetch the result\n"
"    my %Data;\n"
"    while ( my @Row = $Self->{DBObject}->FetchrowArray() ) {\n"
"        $Data{ $Row[0] } = $Row[1];\n"
"    }\n"
"\n"
"    # set cache\n"
"    $Self->{CacheInternalObject}->Set( Key => $CacheKey, Value => \\%Data "
");\n"
"\n"
"    return %Data;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:323
msgid "New:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:326
#, no-wrap
msgid ""
"package Kernel::System::Valid;\n"
"\n"
"use strict;\n"
"use warnings;\n"
"\n"
"our @ObjectDependencies = (\n"
"    'Kernel::System::Cache',\n"
"    'Kernel::System::DB',\n"
"    'Kernel::System::Log',\n"
");\n"
"\n"
"...\n"
"\n"
"sub new {\n"
"    my ( $Type, %Param ) = @_;\n"
"\n"
"    # allocate new hash for object\n"
"    my $Self = {};\n"
"    bless( $Self, $Type );\n"
"\n"
"    $Self->{CacheType} = 'Valid';\n"
"    $Self->{CacheTTL}  = 60 * 60 * 24 * 20;\n"
"\n"
"    return $Self;\n"
"}\n"
"\n"
"...\n"
"\n"
"sub ValidList {\n"
"    my ( $Self, %Param ) = @_;\n"
"\n"
"    # read cache\n"
"    my $CacheKey = 'ValidList';\n"
"    my $Cache    = $Kernel::OM->Get('Kernel::System::Cache')->Get(\n"
"        Type => $Self->{CacheType},\n"
"        Key  => $CacheKey,\n"
"    );\n"
"    return %{$Cache} if $Cache;\n"
"\n"
"    # get database object\n"
"    my $DBObject = $Kernel::OM->Get('Kernel::System::DB');\n"
"\n"
"    # get list from database\n"
"    return if !$DBObject->Prepare( SQL => 'SELECT id, name FROM valid' );\n"
"\n"
"    # fetch the result\n"
"    my %Data;\n"
"    while ( my @Row = $DBObject->FetchrowArray() ) {\n"
"        $Data{ $Row[0] } = $Row[1];\n"
"    }\n"
"\n"
"    # set cache\n"
"    $Kernel::OM->Get('Kernel::System::Cache')->Set(\n"
"        Type  => $Self->{CacheType},\n"
"        TTL   => $Self->{CacheTTL},\n"
"        Key   => $CacheKey,\n"
"        Value => \\%Data\n"
"    );\n"
"\n"
"    return %Data;\n"
"}\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:391
msgid ""
"You can see that the dependencies are declared and the objects are only "
"fetched on demand.  We'll talk about the "
"<literal>CacheInternalObject</literal> in the next section."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:397
msgid "<literal>CacheInternalObject</literal> removed"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:399
msgid ""
"Since <literal>Kernel::System::Cache</literal> is now also able to cache "
"in-memory, <literal>Kernel::System::CacheInternal</literal> was "
"dropped. Please see the previous example for how to migrate your code: you "
"need to use the global <literal>Cache</literal> object and pass the "
"<literal>Type</literal> settings with every call to <code>Get()</code>, "
"<code>Set()</code>, <code>Delete()</code> and <code>CleanUp()</code>. The "
"<literal>TTL</literal> parameter is now optional and defaults to 20 days, so "
"you only have to specify it in <code>Get()</code> if you require a different "
"<literal>TTL</literal> value."
msgstr ""

#. type: Content of: <section><section><section><warning><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:406
msgid ""
"It is especially important to add the <literal>Type</literal> to "
"<code>CleanUp()</code> as otherwise not just the current cache type but the "
"entire cache would be deleted."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:412
msgid "Scheduler backend files moved"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:414
msgid ""
"The backend files of the scheduler moved from "
"<filename>Kernel/Scheduler</filename> to "
"<filename>Kernel/System/Scheduler</filename>. If you have any custom Task "
"Handler modules, you need to move them also."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:421
msgid ""
"Update <link linkend=\"package-code-install\">code sections</link> in SOPM "
"files"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:423
msgid ""
"Code tags in SOPM files have to be updated. Please do not use "
"<literal>$Self</literal> any more.  In the past this was used to get access "
"to OTRS objects like the <literal>MainObject</literal>.  Please use the "
"<literal>ObjectManager</literal> now. Here is an example for the old style:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:428
#, no-wrap
msgid ""
"<CodeInstall Type=\"post\">\n"
"\n"
"# define function name\n"
"my $FunctionName = 'CodeInstall';\n"
"\n"
"# create the package name\n"
"my $CodeModule = 'var::packagesetup::' "
". $Param{Structure}->{Name}->{Content};\n"
"\n"
"# load the module\n"
"if ( $Self->{MainObject}->Require($CodeModule) ) {\n"
"\n"
"    # create new instance\n"
"    my $CodeObject = $CodeModule->new( %{$Self} );\n"
"\n"
"    if ($CodeObject) {\n"
"\n"
"        # start method\n"
"        if ( !$CodeObject->$FunctionName(%{$Self}) ) {\n"
"            $Self->{LogObject}->Log(\n"
"                Priority => 'error',\n"
"                Message  => \"Could not call method $FunctionName() on "
"$CodeModule.pm.\"\n"
"            );\n"
"        }\n"
"    }\n"
"\n"
"    # error handling\n"
"    else {\n"
"        $Self->{LogObject}->Log(\n"
"            Priority => 'error',\n"
"            Message  => \"Could not call method new() on $CodeModule.pm.\"\n"
"        );\n"
"    }\n"
"}\n"
"\n"
"</CodeInstall>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:467
msgid "Now this should be replaced by:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:470
#, no-wrap
msgid ""
"<CodeInstall Type=\"post\"><![CDATA[\n"
"$Kernel::OM->Get('var::packagesetup::MyPackage')->CodeInstall();\n"
"]]"
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:479
msgid "New Template Engine"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:481
msgid ""
"With OTRS 4, the DTL template engine was replaced by Template::Toolkit.  "
"Please refer to the <link linkend=\"TemplatingMechanism\">Templating "
"section</link> for details on how the new template syntax looks like."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:486
msgid ""
"These are the changes that you need to apply when converting existing DTL "
"templates to the new Template::Toolkit syntax:"
msgstr ""

#. type: Content of: <section><section><section><table><caption>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:491
msgid "Template Changes from OTRS 3.3 to 4"
msgstr ""

#. type: Content of: <section><section><section><table><thead><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:494
msgid "DTL Tag"
msgstr ""

#. type: Content of: <section><section><section><table><thead><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:495
msgid "Template::Toolkit tag"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:500
msgid "<literal>$Data{\"Name\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:504
msgid "<literal>$Data{\"Complex-Name\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:505
msgid "<literal>[% Data.item(\"Complex-Name\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:508
msgid "<literal>$QData{\"Name\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:512
msgid "<literal>$QData{\"Name\", \"$Length\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:513 en/content/how-to-publish-otrs-extensions/package-porting.xml:528
msgid "<literal>[% Data.Name | truncate($Length) | html %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:516
msgid "<literal>$LQData{\"Name\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:520
msgid "<literal>$Quote{\"Text\", \"$Length\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:521
msgid "cannot be replaced directly, see examples below"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:523
msgid "<literal>$Quote{\"$Config{\"Name\"}\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:524
msgid "<literal>[% Config(\"Name\") | html %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:527
msgid "<literal>$Quote{\"$Data{\"Name\"}\", \"$Length\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:531
msgid "<literal>$Quote{\"$Data{\"Content\"}\",\"$QData{\"MaxLength\"}\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:532
msgid "<literal>[% Data.Name | truncate(Data.MaxLength) | html %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:535
msgid "<literal>$Quote{\"$Text{\"$Data{\"Content\"}\"}\",\"$QData{\"MaxLength\"}\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:536
msgid ""
"<literal>[% Data.Content | Translate | truncate(Data.MaxLength) | html "
"%]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:539
msgid "<literal>$Config{\"Name\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:540
msgid "<literal>[% Config(\"Name\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:543
msgid "<literal>$Env{\"Name\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:544
msgid "<literal>[% Env(\"Name\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:547
msgid "<literal>$QEnv{\"Name\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:548
msgid "<literal>[% Env(\"Name\") | html %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:551
msgid "<literal>$Text{\"Text with %s placeholders\", \"String\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:552
msgid ""
"<literal>[% Translate(\"Text with %s placeholders\", \"String\") | html "
"%]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:555
msgid ""
"<literal>$Text{\"Text with dynamic %s placeholders\", "
"\"$QData{Name}\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:556
msgid ""
"<literal>[% Translate(\"Text with dynamic %s placeholders\", Data.Name) | "
"html %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:559
msgid ""
"<literal>'$JSText{\"Text with dynamic %s placeholders\", "
"\"$QData{Name}\"}'</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:560 en/content/how-to-publish-otrs-extensions/package-porting.xml:564
msgid ""
"<literal>[% Translate(\"Text with dynamic %s placeholders\", Data.Name) | "
"JSON %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:563
msgid ""
"<literal>\"$JSText{\"Text with dynamic %s placeholders\", "
"\"$QData{Name}\"}\"</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:567
msgid "<literal>$TimeLong{\"$Data{\"CreateTime\"}\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:568
msgid "<literal>[% Data.CreateTime | Localize(\"TimeLong\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:571
msgid "<literal>$TimeShort{\"$Data{\"CreateTime\"}\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:572
msgid "<literal>[% Data.CreateTime | Localize(\"TimeShort\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:575
msgid "<literal>$Date{\"$Data{\"CreateTime\"}\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:576
msgid "<literal>[% Data.CreateTime | Localize(\"Date\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:579
msgid ""
"<literal>&lt;-- dtl:block:Name --&gt;...&lt;-- dtl:block:Name "
"--&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:580
msgid ""
"<literal>[% RenderBlockStart(\"Name\") %]...[% RenderBlockEnd(\"Name\") "
"%]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:583
msgid ""
"<literal>&lt;-- dtl:js_on_document_complete --&gt;...&lt;-- "
"dtl:js_on_document_complete --&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:587
msgid "<literal>&lt;-- dtl:js_on_document_complete_placeholder --&gt;</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:588
msgid "<literal>[% PROCESS JSOnDocumentCompleteInsert %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:591
msgid "<literal>$Include{\"Copyright\"}</literal>"
msgstr ""

#. type: Content of: <section><section><section><table><tbody><tr><td>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:592
msgid "<literal>[% InsertTemplate(\"Copyright\") %]</literal>"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:597
msgid ""
"There is also a helper script "
"<filename>bin/otrs.MigrateDTLtoTT.pl</filename> that will automatically port "
"the DTL files to Template::Toolkit syntax for you. It might fail if you have "
"errors in your DTL, please correct these first and re-run the script "
"afterwards."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:603
msgid ""
"There are a few more things to note when porting your code to the new "
"template engine:"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:609
msgid "All language files must now have the <literal>use utf8;</literal> pragma."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:614
msgid ""
"<code>Layout::Get()</code> is now deprecated. Please use "
"<code>Layout::Translate()</code> instead."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:619
msgid ""
"All occurrences of <literal>$Text{\"\"}</literal> in Perl code must now be "
"replaced by calls to <code>Layout::Translate()</code>."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:621
msgid ""
"This is because in DTL there was no separation between template and data. If "
"DTL-Tags were inserted as part of some data, the engine would still parse "
"them. This is no longer the case in Template::Toolkit, there is a strict "
"separation of template and data."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:624
msgid ""
"Hint: should you ever need to interpolate tags in data, you can use the "
"<literal>Interpolate</literal> filter for this (<literal>[% Data.Name | "
"Interpolate %]</literal>). This is not recommended for security and "
"performance reasons!"
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:629
msgid ""
"For the same reason, dynamically injected JavaScript that was enclosed by "
"<literal>dtl:js_on_document_complete</literal> will not work any "
"more. Please use <code>Layout::AddJSOnDocumentComplete()</code> instead of "
"injecting this as template data."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:632
msgid ""
"You can find an example for this in "
"<filename>Kernel/System/DynamicField/Driver/BaseSelect.pm</filename>."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:637
msgid ""
"Please be careful with <literal>pre</literal> output filters (the ones "
"configured in <literal>Frontend::Output::FilterElementPre</literal>). They "
"still work, but they will prevent the template from being cached. This could "
"lead to serious performance issues. You should definitely not have any "
"<literal>pre</literal> output filters that operate on all templates, but "
"limit them to certain templates via configuration setting."
msgstr ""

#. type: Content of: <section><section><section><para><itemizedlist><listitem><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:642
msgid ""
"The <literal>post</literal> output filters "
"(<literal>Frontend::Output::FilterElementPost</literal>) don't have such "
"strong negative performance effects.  However, they should also be used "
"carefully, and not for all templates."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:651
msgid "New FontAwesome version"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:653
msgid ""
"With OTRS 4, we've also updated FontAwesome to a new version. As a "
"consequence, the icons CSS classes have changed. While previously icons were "
"defined by using a schema like <literal>icon-{iconname}</literal>, it is now "
"<literal>fa fa-{iconname}</literal>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:656
msgid ""
"Due to this change, you need to make sure to update all custom frontend "
"module registrations which make use of icons (e.g. for the top navigation "
"bar) to use the new schema. This is also true for templates where you're "
"using icon elements like <literal>&lt;i "
"class=\"icon-{iconname}\"&gt;&lt;/i&gt;</literal>."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:663
msgid ""
"With OTRS 4, in Unit Tests <literal>$Self</literal> no longer provides "
"common objects like the <literal>MainObject</literal>, for example. Please "
"always use <code>$Kernel::OM->Get('...')</code> to fetch these objects."
msgstr ""

#. type: Content of: <section><section><section><title>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:668
msgid "Custom Ticket History types"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:670
msgid ""
"If you use any custom ticket history types, you have to take two steps for "
"them to be displayed correctly in <literal>AgentTicketHistory</literal> of "
"OTRS 4+."
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:674
msgid ""
"Firstly, you have to register your custom ticket history types via "
"SysConfig. This could look like:"
msgstr ""

#. type: CDATA
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:677
#, no-wrap
msgid ""
"<ConfigItem Name=\"Ticket::Frontend::HistoryTypes###100-MyCustomModule\" "
"Required=\"1\" Valid=\"1\">\n"
"    <Description Translatable=\"1\">Controls how to display the ticket "
"history entries as readable values.</Description>\n"
"    <Group>Ticket</Group>\n"
"    <SubGroup>Frontend::Agent::Ticket::ViewHistory</SubGroup>\n"
"    <Setting>\n"
"        <Hash>\n"
"            <Item Key=\"MyCustomType\" Translatable=\"1\">Added information "
"(%s)</Item>\n"
"        </Hash>\n"
"    </Setting>\n"
"</ConfigItem>\n"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:691
msgid ""
"The second step is to translate the English text that you provided for the "
"custom ticket history type in your translation files, if needed. That's it!"
msgstr ""

#. type: Content of: <section><section><section><para>
#: en/content/how-to-publish-otrs-extensions/package-porting.xml:695
msgid ""
"If you are interested in the details, please refer to <ulink "
"url=\"https://github.com/OTRS/otrs/commit/454dfac6d4eb85652a267e5e65514e386d3cf275\">this "
"commit</ulink> for additional information about the changes that happened in "
"OTRS."
msgstr ""
