<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section>
    <title>Adatbázis mechanizmus</title>
    <para>
Az OTRS olyan adatbázis réteggel érkezik, amely különböző adatbázisokat
támogat.
    </para>
    <section id="database-how-it-works">
        <title>Hogyan működik</title>
        <para>
Az adatbázis rétegnek (<literal>Kernel::System::DB</literal>) két bemeneti
lehetősége van: SQL és XML.
        </para>
        <section id="database-sql">
            <title>SQL</title>
            <para>
Az SQL felületet kell használni a normál adatbázis-műveleteknél (SELECT,
INSERT, UPDATE, …). Úgy használható mint egy normál Perl DBI felület.
            </para>
            <section id="database-sql-do">
            <title>INSERT/UPDATE/DELETE</title>
            <programlisting format="linespecific"><![CDATA[
$Kernel::OM->Get('Kernel::System::DB')->Do(
    SQL=> "INSERT INTO table (name, id) VALUES ('Valamilyen név', 123)",
);

$Kernel::OM->Get('Kernel::System::DB')->Do(
    SQL=> "UPDATE table SET name = 'Valamilyen név', id = 123",
);

$Kernel::OM->Get('Kernel::System::DB')->Do(
    SQL=> "DELETE FROM table WHERE id = 123",
);
            ]]></programlisting>
            </section>
            <section id="database-sql-select">
            <title>SELECT</title>
            <programlisting format="linespecific"><![CDATA[
my $SQL = "SELECT id FROM table WHERE tn = '123'";

$Kernel::OM->Get('Kernel::System::DB')->Prepare(SQL => $SQL, Limit => 15);

while (my @Row = $Kernel::OM->Get('Kernel::System::DB')->FetchrowArray()) {
    $Id = $Row[0];
}
return $Id;
            ]]></programlisting>
            <note>
                <para>
Vigyázzon arra, hogy a <literal>Limit</literal> megadását paraméterként
használja, és ne az SQL utasításban, mert nem minden adatbázis támogatja a
LIMIT kulcsszót az SQL lekérdezésekben.
                </para>
            </note>
            <programlisting format="linespecific"><![CDATA[
my $SQL = "SELECT id FROM table WHERE tn = ? AND group = ?";

$Kernel::OM->Get('Kernel::System::DB')->Prepare(
    SQL   => $SQL,
    Limit => 15,
    Bind  => [ $Tn, $Group ],
);

while (my @Row = $Kernel::OM->Get('Kernel::System::DB')->FetchrowArray()) {
    $Id = $Row[0];
}
return $Id;
            ]]></programlisting>
            <note>
                <para>
Használja a <literal>Bind</literal> attribútumot, ahol csak tudja, különösen
a hosszú utasításoknál. Ha a <literal>Bind</literal> attribútumot használja,
akkor nincs szükség a <code>Quote()</code> függvényre.
                </para>
            </note>
            </section>
            <section id="database-sql-quote">
            <title>QUOTE</title>
                <para>
                    Szöveg:
                </para>
                <para>
                    <programlisting format="linespecific"><![CDATA[
my $QuotedString = $Kernel::OM->Get('Kernel::System::DB')->Quote("Ez egy probléma!");
                    ]]></programlisting>
                </para>
                <para>
                    Egész:
                </para>
                <para>
                    <programlisting format="linespecific"><![CDATA[
my $QuotedInteger = $Kernel::OM->Get('Kernel::System::DB')->Quote('123', 'Integer');
                    ]]></programlisting>
                </para>
                <para>
                    Szám:
                </para>
                <para>
                    <programlisting format="linespecific"><![CDATA[
my $QuotedNumber = $Kernel::OM->Get('Kernel::System::DB')->Quote('21.35', 'Number');
                    ]]></programlisting>
                </para>
                <note>
                    <para>
A <literal>Bind</literal> attribútumot használja a <code>Quote()</code>
függvény helyett, ahol csak tudja.
                    </para>
                </note>
            </section>
        </section>
        <section id="database-xml">
            <title>XML</title>
            <para>
Az XML felületet kell használni INSERT, CREATE TABLE, DROP TABLE és ALTER
TABLE utasításoknál. Mivel ez a szintaxis adatbázisról adatbázisra eltérő,
ezért ennek használata gondoskodik arról, hogy olyan alkalmazásokat írjon,
amelyek az összesnél használhatók.
            </para>
            <note>
                <para>
Az <literal>&lt;Insert&gt;</literal> szintaxis megváltozott a 2.2 és újabb
verziókban. Az értékeket mostantól a címketartalomban használják (többé nem
egy attribútumban).
                </para>
            </note>
            <section id="database-xml-insert">
            <title>INSERT</title>
            <programlisting format="linespecific"><![CDATA[
<Insert Table="some_table">
    <Data Key="id">1</Data>
    <Data Key="description" Type="Quote">exploit</Data>
</Insert>
            ]]></programlisting>
            </section>
            <section id="database-xml-create">
            <title>CREATE TABLE</title>
            <para>
Possible data types are: <literal>BIGINT</literal>,
<literal>SMALLINT</literal>, <literal>INTEGER</literal>,
<literal>VARCHAR</literal> (Size=1-1000000), <literal>DATE</literal>
(Format: <literal>yyyy-mm-dd hh:mm:ss</literal>) and
<literal>LONGBLOB</literal>.
            </para>
            <programlisting format="linespecific"><![CDATA[
<TableCreate Name="calendar_event">
    <Column Name="id" Required="true" PrimaryKey="true" AutoIncrement="true" Type="BIGINT"/>
    <Column Name="title" Required="true" Size="250" Type="VARCHAR"/>
    <Column Name="content" Required="false" Size="250" Type="VARCHAR"/>
    <Column Name="start_time" Required="true" Type="DATE"/>
    <Column Name="end_time" Required="true" Type="DATE"/>
    <Column Name="owner_id" Required="true" Type="INTEGER"/>
    <Column Name="event_status" Required="true" Size="50" Type="VARCHAR"/>
    <Index Name="calendar_event_title">
        <IndexColumn Name="title"/>
    </Index>
    <Unique Name="calendar_event_title">
        <UniqueColumn Name="title"/>
    </Unique>
    <ForeignKey ForeignTable="users">
        <Reference Local="owner_id" Foreign="id"/>
    </ForeignKey>
</TableCreate>
            ]]></programlisting>
            <para>
                <literal>LONGBLOB</literal> columns need special treatment. Their content
needs to be <literal>Base64</literal> transcoded if the database driver does
not support the feature <literal>DirectBlob</literal>. Please see the
following example:
            </para>
            <programlisting format="linespecific"><![CDATA[
my $Content = $StorableContent;
if ( !$DBObject->GetDatabaseFunction('DirectBlob') ) {
    $Content = MIME::Base64::encode_base64($StorableContent);
}
            ]]></programlisting>
            <para>
                Similarly, when reading from such a column, the content must not
automatically be decoded as <literal>UTF-8</literal> by passing the
<literal>Encode => 0</literal> flag to <literal>Prepare()</literal>:
            </para>
            <programlisting format="linespecific"><![CDATA[
return if !$DBObject->Prepare(
    SQL => '
        SELECT content_type, content, content_id, content_alternative, disposition, filename
        FROM article_data_mime_attachment
        WHERE id = ?',
    Bind   => [ \$AttachmentID ],
    Encode => [ 1, 0, 0, 0, 1, 1 ],
);

while ( my @Row = $DBObject->FetchrowArray() ) {

    $Data{ContentType} = $Row[0];

    # Decode attachment if it's e. g. a postgresql backend.
    if ( !$DBObject->GetDatabaseFunction('DirectBlob') ) {
        $Data{Content} = decode_base64( $Row[1] );
    }
    else {
        $Data{Content} = $Row[1];
    }
    $Data{ContentID}          = $Row[2] || '';
    $Data{ContentAlternative} = $Row[3] || '';
    $Data{Disposition}        = $Row[4];
    $Data{Filename}           = $Row[5];
}
            ]]></programlisting>
            </section>
            <section id="database-xml-drop">
            <title>DROP TABLE</title>
            <programlisting format="linespecific"><![CDATA[
<TableDrop Name="calendar_event"/>
            ]]></programlisting>
            </section>
            <section id="database-xml-alter">
            <title>ALTER TABLE</title>
            <para>
            A következő az oszlopok hozzáadásának, megváltoztatásának és eldobásának
példáját jeleníti meg.
            </para>
            <programlisting format="linespecific"><![CDATA[
<TableAlter Name="calendar_event">
    <ColumnAdd Name="test_name" Type="varchar" Size="20" Required="true"/>

    <ColumnChange NameOld="test_name" NameNew="test_title" Type="varchar" Size="30" Required="true"/>

    <ColumnChange NameOld="test_title" NameNew="test_title" Type="varchar" Size="100" Required="false"/>

    <ColumnDrop Name="test_title"/>

    <IndexCreate Name="index_test3">
        <IndexColumn Name="test3"/>
    </IndexCreate>

    <IndexDrop Name="index_test3"/>

    <UniqueCreate Name="uniq_test3">
        <UniqueColumn Name="test3"/>
    </UniqueCreate>

    <UniqueDrop Name="uniq_test3"/>
</TableAlter>
            ]]></programlisting>
            <para>
            A következő egy olyan példát jelenít meg, hogy hogyan nevezhető át egy
tábla.
            </para>
            <programlisting format="linespecific"><![CDATA[
<TableAlter NameOld="calendar_event" NameNew="calendar_event_new"/>
            ]]></programlisting>
            </section>
            <section id="database-xml-code">
            <title>Kód az XML feldolgozásához</title>
            <programlisting format="linespecific"><![CDATA[
my @XMLARRAY = @{$Self->ParseXML(String => $XML)};

my @SQL = $Kernel::OM->Get('Kernel::System::DB')->SQLProcessor(
    Database => \@XMLARRAY,
);
push(@SQL, $Kernel::OM->Get('Kernel::System::DB')->SQLProcessorPost());

for (@SQL) {
    $Kernel::OM->Get('Kernel::System::DB')->Do(SQL => $_);
}
            ]]></programlisting>
            </section>
        </section>
    </section>
    <section id="database-driver">
        <title>Adatbázis-meghajtók</title>
        <para>
            Az adatbázis-meghajtók az
<filename>$OTRS_HOME/Kernel/System/DB/*.pm</filename> alatt találhatók.
        </para>
    </section>
    <section id="database-supported">
        <title>Támogatott adatbázisok</title>
        <para>
        <itemizedlist mark="round">
            <listitem>
                <para>MySQL</para>
            </listitem>
            <listitem>
                <para>PostgreSQL</para>
            </listitem>
            <listitem>
                <para>Oracle</para>
            </listitem>
            <listitem>
                <para>Microsoft SQL Server (csak külső adatbázis-kapcsolatokhoz, nem OTRS
adatbázisként)</para>
            </listitem>
        </itemizedlist>
        </para>
    </section>
</section>
