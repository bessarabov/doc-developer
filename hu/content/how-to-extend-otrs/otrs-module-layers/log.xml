<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<section id="log-module">

    <title>Naplózás modul</title>

    <para>
Létezik egy globális naplózó felület az OTRS-hez, amely a saját naplózó
háttérprogramok létrehozásának lehetőségét biztosítja.
    </para>
    <para>
Egy saját naplózó háttérprogram írása olyan egyszerű, mint újra
megvalósítani a <literal>Kernel::System::Log::Log()</literal> metódust.
    </para>
    <section id="log-module-code">
        <title>Kódpélda: <literal>Kernel::System::Log::CustomFile</literal></title>
        <para>
            Ebben a kis példában írni fogunk egy kicsi fájl naplózó háttérprogramot,
amely hasonlóan működik mint a <literal>Kernel::System::Log::File</literal>,
de egy szöveget fűz minden naplóbejegyzés elé.
        </para>

        <para>
        <programlisting linenumbering="numbered"><![CDATA[
# --
# Kernel/System/Log/CustomFile.pm - fájlnaplózó háttérprogram
# Copyright (C) 2001-2018 OTRS AG, https://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

package Kernel::System::Log::CustomFile;

use strict;
use warnings;

umask "002";

sub new {
    my ( $Type, %Param ) = @_;

    # új kivonat lefoglalása az objektumhoz
    my $Self = {};
    bless( $Self, $Type );

    # a szükséges objektumok lekérése
    for (qw(ConfigObject EncodeObject)) {
        if ( $Param{$_} ) {
            $Self->{$_} = $Param{$_};
        }
        else {
            die "Nincs $_!";
        }
    }

    # a naplófájl helyének lekérése
    $Self->{LogFile} = '/var/log/CustomFile.log';

    # egyéni előtag beállítása
    $Self->{CustomPrefix} = 'CustomFileExample';

    # A 2265. hiba javítása - IIS-nél létre kell hoznunk egy saját hibanapló fájlt.
    # A szabványos hibakimenet kötése a naplófájlhoz, mert az IIS nem írja
    # ki a szabványos hibakimenetet a weboldalra.
    if ( $ENV{SERVER_SOFTWARE} && $ENV{SERVER_SOFTWARE} =~ /^microsoft\-iis/i ) {
        if ( !open STDERR, '>>', $Self->{LogFile} . '.error' ) {
            print STDERR "HIBA: nem lehet írni: $Self->{LogFile}.error: $!";
        }
    }

    return $Self;
}

sub Log {
    my ( $Self, %Param ) = @_;

    my $FH;

    # naplófájl megnyitása
    if ( !open $FH, '>>', $Self->{LogFile} ) {

        # hibaképernyő kiírása
        print STDERR "\n";
        print STDERR " >> Nem lehet írni: $Self->{LogFile}: $! <<\n";
        print STDERR "\n";
        return;
    }

    # naplófájl írása
    $Self->{EncodeObject}->SetIO($FH);
    print $FH '[' . localtime() . ']';
    if ( lc $Param{Priority} eq 'debug' ) {
        print $FH "[Debug][$Param{Module}][$Param{Line}] $Self->{CustomPrefix} $Param{Message}\n";
    }
    elsif ( lc $Param{Priority} eq 'info' ) {
        print $FH "[Info][$Param{Module}]  $Self->{CustomPrefix} $Param{Message}\n";
    }
    elsif ( lc $Param{Priority} eq 'notice' ) {
        print $FH "[Notice][$Param{Module}] $Self->{CustomPrefix} $Param{Message}\n";
    }
    elsif ( lc $Param{Priority} eq 'error' ) {
        print $FH "[Error][$Param{Module}][$Param{Line}] $Self->{CustomPrefix} $Param{Message}\n";
    }
    else {

        # hibaüzenetek írása a szabványos hibakimenetre
        print STDERR
            "[Error][$Param{Module}] $Self->{CustomPrefix} prioritás: '$Param{Priority}' nincs meghatározva! Üzenet: $Param{Message}\n";

        # és természetesen a naplófájlba
        print $FH
            "[Error][$Param{Module}] $Self->{CustomPrefix} prioritás: '$Param{Priority}' nincs meghatározva! Üzenet: $Param{Message}\n";
    }

    # fájlkezelő lezárása
    close $FH;
    return 1;
}

1;
        ]]></programlisting>
        </para>
    </section>
    <section id="log-module-configuration">
        <title>Beállítási példa</title>
        <para>
            Az egyéni naplózómodul bekapcsolásához az adminisztrátor beállíthatja kézzel
a meglévő <literal>LogModule</literal> konfigurációs elemet a
<literal>Kernel::System::Log::CustomFile</literal> osztályhoz. Ennek
automatikus megvalósításához megadhat egy XML beállítófájlt, amely
felülbírálja az alapértelmezett beállítást.
        </para>
        <para>
        <programlisting linenumbering="numbered"><![CDATA[
<ConfigItem Name="LogModule" Required="1" Valid="1">
    <Description Translatable="1">Set Kernel::System::Log::CustomFile as default logging backend.</Description>
    <Group>Framework</Group>
    <SubGroup>Core::Log</SubGroup>
    <Setting>
        <Option Location="Kernel/System/Log/*.pm" SelectedID="Kernel::System::Log::CustomFile"></Option>
    </Setting>
</ConfigItem>
        ]]></programlisting>
        </para>
    </section>
    <section id="log-module-use_cases">
        <title>Használati eset példák</title>
        <para>
Hasznos naplózó háttérprogram lehet egy webszolgáltatásba vagy egy
titkosított fájlba történő naplózás.
        </para>
    </section>
    <section id="log-module-caveats">
        <title>Ellenjavaslatok és figyelmeztetések</title>
        <para>
Ne feledje, hogy a <literal>Kernel::System::Log</literal> a
<literal>Log()</literal> metóduson kívül egyéb metódusokkal is rendelkezik,
amelyeket nem lehet újra megvalósítani, például az osztott
memóriaszakaszokkal történő munkához tartozó kód és a naplóadatok
gyorsítótárazása.
        </para>
    </section>
</section>
