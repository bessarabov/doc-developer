<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="package-porting-4-to-5">
    <title>OTRS 4-ről 5-re</title>
    <para>
        Ez a szakasz azokat a változtatásokat sorolja fel, amelyeket meg kell
vizsgálnia, amikor átírja a csomagját az OTRS 4-ről 5-re.
    </para>

    <section>
        <title>Átszerkesztett <filename>Kernel/Output/HTML</filename></title>
        <para>
            Az OTRS 5-ben a <filename>Kernel/Output/HTML</filename> átszerkesztésre
került. Az összes Perl modul (kivéve a <filename>Layout.pm</filename> fájlt)
alkönyvtárakba került áthelyezésre (minden modulréteghez egybe). A
sablonfájlok (témák) is áthelyezésre kerültek a
<filename>Kernel/Output/HTML/Standard</filename> könyvtárból a
<filename>Kernel/Output/HTML/Templates/Standard</filename>
könyvtárba. Végezze el ezeket a költöztetéseket a saját kódjában is.
        </para>
    </section>

    <section>
        <title>Elő-kimenetszűrők</title>
        <para>
            Az OTRS 5-tel többé nincs támogatás a <literal>pre</literal>
kimenetszűrőkhöz. Ezek a szűrők azelőtt változtatták meg a sablon tartalmát,
mielőtt az feldolgozásra került volna, és potenciálisan rossz
teljesítményproblémákhoz vezethettek, ugyanis a sablonokat többé nem
lehetett gyorstárazni, és minden alkalommal fel kellett dolgozni és le
kellett fordítani.
        </para>
        <para>
            Egyszerűen váltson a <literal>pre</literal> kimenetszűrőről a
<literal>post</literal> kimenetszűrőre. A tartalom lefordításához
futtathatja közvetlenül a <code>$LayoutObject->Translate()</code>
függvényt. Ha egyéb sablonszolgáltatásokra van szüksége, akkor egyszerűen
határozzon meg egy kis sablonfájlt a kimenetszűrőhöz, és használja azt a
tartalom megjelenítéséhez, mielőtt beültetné azt a fő adatokba. Néhány
esetben hasznos lehet a jQuery DOM műveletek használata is a képernyőn lévő
tartalom sorrendjének megváltoztatásához vagy cseréjéhez a reguláris
kifejezések használata helyett. Ebben az esetben láthatatlan tartalomként
kellene beültetnie az új kódot valahova az oldalba (például a
<literal>Hidden</literal> osztállyal), majd ezután áthelyezni a jQuery
használatával a megfelelő helyre a DOM-ban, és megjeleníteni azt.
        </para>
        <para>
            Az utó-kimenetszűrők használatának megkönnyítéséhez létezik egy új
mechanizmus is a HTML megjegyzéshorgok lekéréséhez bizonyos sablonoknál vagy
blokkoknál. Hozzáadhatja a modulbeállító XML-be a következőhöz hasonlóan:
        </para>
        <para>
            <programlisting><![CDATA[
<ConfigItem
Name="Frontend::Template::GenerateBlockHooks###100-OTRSBusiness-ContactWithData"
Required="1" Valid="1">
    <Description Translatable="1">Generate HTML comment hooks for
the specified blocks so that filters can use them.</Description>
    <Group>OTRSBusiness</Group>
    <SubGroup>Core</SubGroup>
    <Setting>
        <Hash>
            <Item Key="AgentTicketZoom">
                <Array>
                    <Item>CustomerTable</Item>
                </Array>
            </Item>
        </Hash>
    </Setting>
</ConfigItem>
            ]]></programlisting>
        </para>
        <para>
            Ez azt fogja okozni, hogy az <filename>AgentTicketZoom.tt</filename> fájlban
lévő <literal>CustomerTable</literal> blokk át lesz alakítva a HTML
megjegyzésekben minden alkalommal, amikor megjelenítésre kerül:
        </para>
        <para>
            <programlisting><![CDATA[
<!--HookStartCustomerTable-->
... blokk kimenet ...
<!--HookEndCustomerTable-->
            ]]></programlisting>
        </para>
        <para>
            Ezzel a mechanizmussal minden csomag csak azokat a blokkhorgokat kérheti,
amelyekre szüksége van, és következetesen kerülnek megjelenítésre. Ezek a
HTML megjegyzések használhatók ezután a kimenetszűrőben az egyszerű
reguláris kifejezés illesztéshez.
        </para>
    </section>

    <section>
        <title>IE 8 és IE 9</title>
        <para>
            Az IE 8 és IE 9 támogatást <ulink
url="https://github.com/OTRS/otrs/commit/3b1aff21984d7b32f626df95e072337245615b36">eldobták</ulink>.
Eltávolíthat minden kerülőmegoldást a kódjából, amelyet ezekhez a
platformokhoz készített, valamint az összes olyan régi
<literal>&lt;CSS_IE7&gt;</literal> vagy <literal>&lt;CSS_IE8&gt;</literal>
betöltő címkét, amely még esetleg megbújik az XML beállítófájljaiban.
        </para>
    </section>

    <section>
        <title>Általános felület API változás a „Ticket” csatlakozóban</title>
        <para>
            A <code>TicketGet()</code> művelet másképpen ad vissza dinamikus mező
adatokat a jegyből és a bejegyzésből mint az OTRS 4-ben. Mostantól ezek
tisztán el vannak választva a többi statikus jegy- és bejegyzésmezőktől -
innentől kezdve csoportosítva vannak egy <literal>DynamicField</literal>
nevű listába. Eszerint alakítson át minden olyan alkalmazást, amely ezt a
műveletet használja.
        </para>
        <para>
            <programlisting><![CDATA[
# megváltoztatva erről:

Ticket => [
{
    TicketNumber       => '20101027000001',
    Title              => 'valamilyen cím',
    ...
    DynamicField_X     => 'x_ertek',
},
]

# erre:

Ticket => [
{
    TicketNumber       => '20101027000001',
    Title              => 'valamilyen cím',
    ...
    DynamicField => [
        {
            Name  => 'valamilyen név',
            Value => 'valamilyen érték',
        },
    ],
},
]
            ]]></programlisting>
        </para>
    </section>
    <section>
        <title>Előnézeti függvények a dinamikus statisztikákban</title>
        <para>
            Az új statisztikák grafikus felhasználói felülete egy előnézetet biztosít a
jelenlegi beállításhoz. Ezt meg kell valósítani a statisztikák moduljaiban,
és általában hamis vagy véletlenszerű adatokat adnak vissza sebességi
okokból. Így minden olyan dinamikus (mátrix) statisztikánál, amely a
<code>GetStatElement()</code> metódust biztosítja, hozzá kell adnia egy
<code>GetStatElementPreview()</code> metódust is, valamint minden olyan
dinamikus (tábla) statisztikánál, amely a <code>GetStatTable()</code>
metódust biztosítja, hozzá kell adnia egy <code>GetStatTablePreview()</code>
metódust ennek megfelelően. Egyébként az új statisztikák grafikus
felhasználói felületén lévő előnézet nem fog működni a saját
statisztikáinál. Példamegvalósításokat találhat az alapértelmezett OTRS
statisztikákban.
        </para>
    </section>
    <section>
        <title>Eldobott HTML nyomtatás</title>
        <para>
            Az OTRS 5-ig a <literal>PDF::API2</literal> Perl modul nem volt megtalálható
minden rendszeren. Ezért létezett egy tartalék HTML nyomtatási mód. Az OTRS
5-tel a modul mostantól mellékelve van, és a HTML nyomtatás eldobásra
került. A <code>$LayoutObject->PrintHeader()</code> és a
<code>PrintFooter()</code> többé nem érhető el. Távolítsa el a tartalék HTML
nyomtatást a kódjából, és változtassa meg a PDF előállításához, ha
szükséges.
        </para>
    </section>
    <section>
        <title>Továbbfejlesztett fordítási szöveg kinyerés</title>
        <para>
            Az OTRS 5-ig a lefordítható szövegeket nem lehetett kinyerni a Perl kódból
és az adatbázis XML meghatározásokból. Ez mostantól lehetséges, és elavulttá
tette az olyan üres sablonokat, mint például az <filename>AAA*.tt</filename>
sablont. A részletekért nézze meg <link
linkend="localization-translation-mechanism">ezt a szakaszt</link>.
        </para>
    </section>

</section>
